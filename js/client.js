!(function () {
    "use strict";
    function t() {}
    const e = t => t;
    function s(t, e) {
        for (const s in e) t[s] = e[s];
        return t;
    }
    function i(t) {
        return t();
    }
    function n() {
        return Object.create(null);
    }
    function a(t) {
        t.forEach(i);
    }
    function r(t) {
        return "function" == typeof t;
    }
    function o(t, e) {
        return t != t
            ? e == e
            : t !== e || (t && "object" == typeof t) || "function" == typeof t;
    }
    function l(t, e) {
        return t != t ? e == e : t !== e;
    }
    function c(t, e) {
        const s = t.subscribe(e);
        return s.unsubscribe ? () => s.unsubscribe() : s;
    }
    function h(t, e, s) {
        t.$$.on_destroy.push(c(e, s));
    }
    function d(t, e, s, i) {
        if (t) {
            const n = u(t, e, s, i);
            return t[0](n);
        }
    }
    function u(t, e, i, n) {
        return t[1] && n ? s(i.ctx.slice(), t[1](n(e))) : i.ctx;
    }
    function m(t, e, s, i) {
        if (t[2] && i) {
            const n = t[2](i(s));
            if ("object" == typeof e.dirty) {
                const t = [],
                    s = Math.max(e.dirty.length, n.length);
                for (let i = 0; i < s; i += 1) t[i] = e.dirty[i] | n[i];
                return t;
            }
            return e.dirty | n;
        }
        return e.dirty;
    }
    function p(t) {
        return null == t ? "" : t;
    }
    function f(t, e, s = e) {
        return t.set(s), e;
    }
    const g = "undefined" != typeof window;
    let v = g ? () => window.performance.now() : () => Date.now(),
        y = g ? t => requestAnimationFrame(t) : t;
    const b = new Set();
    function w(t) {
        b.forEach(e => {
            e.c(t) || (b.delete(e), e.f());
        }),
            0 !== b.size && y(w);
    }
    function x(t) {
        let e;
        return (
            0 === b.size && y(w),
            {
                promise: new Promise(s => {
                    b.add((e = { c: t, f: s }));
                }),
                abort() {
                    b.delete(e);
                }
            }
        );
    }
    function k(t, e) {
        t.appendChild(e);
    }
    function $(t, e, s) {
        t.insertBefore(e, s || null);
    }
    function S(t) {
        t.parentNode.removeChild(t);
    }
    function M(t, e) {
        for (let s = 0; s < t.length; s += 1) t[s] && t[s].d(e);
    }
    function E(t) {
        return document.createElement(t);
    }
    function C(t) {
        return document.createTextNode(t);
    }
    function T() {
        return C(" ");
    }
    function _() {
        return C("");
    }
    function P(t, e, s, i) {
        return (
            t.addEventListener(e, s, i), () => t.removeEventListener(e, s, i)
        );
    }
    function U(t, e, s) {
        null == s
            ? t.removeAttribute(e)
            : t.getAttribute(e) !== s && t.setAttribute(e, s);
    }
    function I(t) {
        return "" === t ? void 0 : +t;
    }
    function z(t, e) {
        (e = "" + e), t.data !== e && (t.data = e);
    }
    function A(t, e) {
        (null != e || t.value) && (t.value = e);
    }
    function D(t, e, s, i) {
        t.style.setProperty(e, s, i ? "important" : "");
    }
    function R(t, e) {
        for (let s = 0; s < t.options.length; s += 1) {
            const i = t.options[s];
            if (i.__value === e) return void (i.selected = !0);
        }
    }
    function B(t) {
        const e = t.querySelector(":checked") || t.options[0];
        return e && e.__value;
    }
    function F(t, e) {
        const s = document.createEvent("CustomEvent");
        return s.initCustomEvent(t, !1, !1, e), s;
    }
    let N,
        L,
        O = 0,
        q = {};
    function H(t, e, s, i, n, a, r, o = 0) {
        const l = 16.666 / i;
        let c = "{\n";
        for (let t = 0; t <= 1; t += l) {
            const i = e + (s - e) * a(t);
            c += 100 * t + `%{${r(i, 1 - i)}}\n`;
        }
        const h = c + `100% {${r(s, 1 - s)}}\n}`,
            d = `__svelte_${(function (t) {
                let e = 5381,
                    s = t.length;
                for (; s--; ) e = ((e << 5) - e) ^ t.charCodeAt(s);
                return e >>> 0;
            })(h)}_${o}`;
        if (!q[d]) {
            if (!N) {
                const t = E("style");
                document.head.appendChild(t), (N = t.sheet);
            }
            (q[d] = !0),
                N.insertRule(`@keyframes ${d} ${h}`, N.cssRules.length);
        }
        const u = t.style.animation || "";
        return (
            (t.style.animation = `${
                u ? `${u}, ` : ""
            }${d} ${i}ms linear ${n}ms 1 both`),
            (O += 1),
            d
        );
    }
    function W(t, e) {
        (t.style.animation = (t.style.animation || "")
            .split(", ")
            .filter(
                e ? t => t.indexOf(e) < 0 : t => -1 === t.indexOf("__svelte")
            )
            .join(", ")),
            e &&
                !--O &&
                y(() => {
                    if (O) return;
                    let t = N.cssRules.length;
                    for (; t--; ) N.deleteRule(t);
                    q = {};
                });
    }
    function Z(t) {
        L = t;
    }
    function j() {
        if (!L)
            throw new Error("Function called outside component initialization");
        return L;
    }
    function G(t) {
        j().$$.before_update.push(t);
    }
    function V(t) {
        j().$$.on_mount.push(t);
    }
    function Y(t) {
        j().$$.after_update.push(t);
    }
    function J(t) {
        j().$$.on_destroy.push(t);
    }
    function X() {
        const t = j();
        return (e, s) => {
            const i = t.$$.callbacks[e];
            if (i) {
                const n = F(e, s);
                i.slice().forEach(e => {
                    e.call(t, n);
                });
            }
        };
    }
    function Q(t, e) {
        const s = t.$$.callbacks[e.type];
        s && s.slice().forEach(t => t(e));
    }
    const K = [],
        tt = [],
        et = [],
        st = [],
        it = Promise.resolve();
    let nt,
        at = !1;
    function rt() {
        at || ((at = !0), it.then(ct));
    }
    function ot(t) {
        et.push(t);
    }
    function lt(t) {
        st.push(t);
    }
    function ct() {
        const t = new Set();
        do {
            for (; K.length; ) {
                const t = K.shift();
                Z(t), ht(t.$$);
            }
            for (; tt.length; ) tt.pop()();
            for (let e = 0; e < et.length; e += 1) {
                const s = et[e];
                t.has(s) || (s(), t.add(s));
            }
            et.length = 0;
        } while (K.length);
        for (; st.length; ) st.pop()();
        at = !1;
    }
    function ht(t) {
        if (null !== t.fragment) {
            t.update(), a(t.before_update);
            const e = t.dirty;
            (t.dirty = [-1]),
                t.fragment && t.fragment.p(t.ctx, e),
                t.after_update.forEach(ot);
        }
    }
    function dt() {
        return (
            nt ||
                (nt = Promise.resolve()).then(() => {
                    nt = null;
                }),
            nt
        );
    }
    function ut(t, e, s) {
        t.dispatchEvent(F(`${e ? "intro" : "outro"}${s}`));
    }
    const mt = new Set();
    let pt;
    function ft() {
        pt = { r: 0, c: [], p: pt };
    }
    function gt() {
        pt.r || a(pt.c), (pt = pt.p);
    }
    function vt(t, e) {
        t && t.i && (mt.delete(t), t.i(e));
    }
    function yt(t, e, s, i) {
        if (t && t.o) {
            if (mt.has(t)) return;
            mt.add(t),
                pt.c.push(() => {
                    mt.delete(t), i && (s && t.d(1), i());
                }),
                t.o(e);
        }
    }
    const bt = { duration: 0 };
    function wt(s, i, n, o) {
        let l = i(s, n),
            c = o ? 0 : 1,
            h = null,
            d = null,
            u = null;
        function m() {
            u && W(s, u);
        }
        function p(t, e) {
            const s = t.b - c;
            return (
                (e *= Math.abs(s)),
                {
                    a: c,
                    b: t.b,
                    d: s,
                    duration: e,
                    start: t.start,
                    end: t.start + e,
                    group: t.group
                }
            );
        }
        function f(i) {
            const {
                    delay: n = 0,
                    duration: r = 300,
                    easing: o = e,
                    tick: f = t,
                    css: g
                } = l || bt,
                y = { start: v() + n, b: i };
            i || ((y.group = pt), (pt.r += 1)),
                h
                    ? (d = y)
                    : (g && (m(), (u = H(s, c, i, r, n, o, g))),
                      i && f(0, 1),
                      (h = p(y, r)),
                      ot(() => ut(s, i, "start")),
                      x(t => {
                          if (
                              (d &&
                                  t > d.start &&
                                  ((h = p(d, r)),
                                  (d = null),
                                  ut(s, h.b, "start"),
                                  g &&
                                      (m(),
                                      (u = H(
                                          s,
                                          c,
                                          h.b,
                                          h.duration,
                                          0,
                                          o,
                                          l.css
                                      )))),
                              h)
                          )
                              if (t >= h.end)
                                  f((c = h.b), 1 - c),
                                      ut(s, h.b, "end"),
                                      d ||
                                          (h.b
                                              ? m()
                                              : --h.group.r || a(h.group.c)),
                                      (h = null);
                              else if (t >= h.start) {
                                  const e = t - h.start;
                                  (c = h.a + h.d * o(e / h.duration)),
                                      f(c, 1 - c);
                              }
                          return !(!h && !d);
                      }));
        }
        return {
            run(t) {
                r(l)
                    ? dt().then(() => {
                          (l = l()), f(t);
                      })
                    : f(t);
            },
            end() {
                m(), (h = d = null);
            }
        };
    }
    const xt = "undefined" != typeof window ? window : global;
    function kt(t, e) {
        t.d(1), e.delete(t.key);
    }
    function $t(t, e) {
        yt(t, 1, 1, () => {
            e.delete(t.key);
        });
    }
    function St(t, e, s, i, n, a, r, o, l, c, h, d) {
        let u = t.length,
            m = a.length,
            p = u;
        const f = {};
        for (; p--; ) f[t[p].key] = p;
        const g = [],
            v = new Map(),
            y = new Map();
        for (p = m; p--; ) {
            const t = d(n, a, p),
                o = s(t);
            let l = r.get(o);
            l ? i && l.p(t, e) : (l = c(o, t)).c(),
                v.set(o, (g[p] = l)),
                o in f && y.set(o, Math.abs(p - f[o]));
        }
        const b = new Set(),
            w = new Set();
        function x(t) {
            vt(t, 1), t.m(o, h), r.set(t.key, t), (h = t.first), m--;
        }
        for (; u && m; ) {
            const e = g[m - 1],
                s = t[u - 1],
                i = e.key,
                n = s.key;
            e === s
                ? ((h = e.first), u--, m--)
                : v.has(n)
                ? !r.has(i) || b.has(i)
                    ? x(e)
                    : w.has(n)
                    ? u--
                    : y.get(i) > y.get(n)
                    ? (w.add(i), x(e))
                    : (b.add(n), u--)
                : (l(s, r), u--);
        }
        for (; u--; ) {
            const e = t[u];
            v.has(e.key) || l(e, r);
        }
        for (; m; ) x(g[m - 1]);
        return g;
    }
    function Mt(t, e, s) {
        const i = t.$$.props[e];
        void 0 !== i && ((t.$$.bound[i] = s), s(t.$$.ctx[i]));
    }
    function Et(t) {
        t && t.c();
    }
    function Ct(t, e, s) {
        const {
            fragment: n,
            on_mount: o,
            on_destroy: l,
            after_update: c
        } = t.$$;
        n && n.m(e, s),
            ot(() => {
                const e = o.map(i).filter(r);
                l ? l.push(...e) : a(e), (t.$$.on_mount = []);
            }),
            c.forEach(ot);
    }
    function Tt(t, e) {
        const s = t.$$;
        null !== s.fragment &&
            (a(s.on_destroy),
            s.fragment && s.fragment.d(e),
            (s.on_destroy = s.fragment = null),
            (s.ctx = []));
    }
    function _t(e, s, i, r, o, l, c = [-1]) {
        const h = L;
        Z(e);
        const d = s.props || {},
            u = (e.$$ = {
                fragment: null,
                ctx: null,
                props: l,
                update: t,
                not_equal: o,
                bound: n(),
                on_mount: [],
                on_destroy: [],
                before_update: [],
                after_update: [],
                context: new Map(h ? h.$$.context : []),
                callbacks: n(),
                dirty: c
            });
        let m = !1;
        (u.ctx = i
            ? i(
                  e,
                  d,
                  (t, s, i = s) => (
                      u.ctx &&
                          o(u.ctx[t], (u.ctx[t] = i)) &&
                          (u.bound[t] && u.bound[t](i),
                          m &&
                              (function (t, e) {
                                  -1 === t.$$.dirty[0] &&
                                      (K.push(t), rt(), t.$$.dirty.fill(0)),
                                      (t.$$.dirty[(e / 31) | 0] |= 1 << e % 31);
                              })(e, t)),
                      s
                  )
              )
            : []),
            u.update(),
            (m = !0),
            a(u.before_update),
            (u.fragment = !!r && r(u.ctx)),
            s.target &&
                (s.hydrate
                    ? u.fragment &&
                      u.fragment.l(
                          (function (t) {
                              return Array.from(t.childNodes);
                          })(s.target)
                      )
                    : u.fragment && u.fragment.c(),
                s.intro && vt(e.$$.fragment),
                Ct(e, s.target, s.anchor),
                ct()),
            Z(h);
    }
    class Pt {
        $destroy() {
            Tt(this, 1), (this.$destroy = t);
        }
        $on(t, e) {
            const s = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);
            return (
                s.push(e),
                () => {
                    const t = s.indexOf(e);
                    -1 !== t && s.splice(t, 1);
                }
            );
        }
        $set() {}
    }
    const Ut = [];
    function It(e, s = t) {
        let i;
        const n = [];
        function a(t) {
            if (o(e, t) && ((e = t), i)) {
                const t = !Ut.length;
                for (let t = 0; t < n.length; t += 1) {
                    const s = n[t];
                    s[1](), Ut.push(s, e);
                }
                if (t) {
                    for (let t = 0; t < Ut.length; t += 2) Ut[t][0](Ut[t + 1]);
                    Ut.length = 0;
                }
            }
        }
        return {
            set: a,
            update: function (t) {
                a(t(e));
            },
            subscribe: function (r, o = t) {
                const l = [r, o];
                return (
                    n.push(l),
                    1 === n.length && (i = s(a) || t),
                    r(e),
                    () => {
                        const t = n.indexOf(l);
                        -1 !== t && n.splice(t, 1),
                            0 === n.length && (i(), (i = null));
                    }
                );
            }
        };
    }
    const zt = It([]),
        At = It({}),
        Dt = It([]),
        Rt = It(),
        Bt = It([]),
        Ft = It({}),
        Nt = It(),
        Lt = It(!1),
        Ot = It(),
        qt = It(!1),
        Ht = It(!0),
        Wt = It(),
        Zt = It([]),
        jt = It({ buffs: [] }),
        Gt = It({ buffs: [] }),
        Vt = It(),
        Yt = It("auto"),
        Jt = It(0),
        Xt = It(0),
        Qt = It([]),
        Kt = It({}),
        te = It({}),
        ee = It([]),
        se = It({ current: 0, max: 1 }),
        ie = It(),
        ne = It(),
        ae = It(!1),
        re = It(0),
        oe = It([0, 0]),
        le = It(),
        ce = It(),
        he = It([]),
        de = It(),
        ue = It(!1),
        me = It(!1),
        pe = It(),
        fe = It([]),
        ge = It(),
        ve = It(),
        ye = It(),
        be = It(),
        we = It({}),
        xe = It({}),
        ke = It(),
        $e = It(),
        Se = It(0),
        Me = [],
        Ee = It(""),
        Ce = It(0),
        Te = It(35),
        _e = It(90),
        Pe = It(!0),
        Ue = It(!0),
        Ie = It(!0),
        ze = It(!1),
        Ae = It(!0),
        De = It(!0),
        Re = It(!0),
        Be = It(70),
        Fe = It(30),
        Ne = It("en"),
        Le = It("global"),
        Oe = It(8),
        qe = It(300),
        He = It(5),
        We = It(!1),
        Ze = It(!1),
        je = It(!1),
        Ge = It(!1),
        Ve = It(!0),
        Ye = It(!1),
        Je = It(!1),
        Xe = It(!0),
        Qe = It("Damage"),
        Ke = It(!1),
        ts = It({}),
        es = It([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]),
        ss = It(7),
        is = It(!1),
        ns = It(100),
        as = It(!0),
        rs = It(!0),
        os = It(!0),
        ls = It(!1),
        cs = It(0),
        hs = It(!0),
        ds = It(!0),
        us = It(!0),
        ms = It(!0),
        ps = It([]),
        fs = It(0),
        gs = It(!1),
        vs = It(!1),
        ys = It(200),
        bs = It(!0),
        ws = It(!1),
        xs = It(14),
        ks = It(8),
        $s = It(!1),
        Ss = It(1),
        Ms = It(!1),
        Es = It(!1),
        Cs = It(!0),
        Ts = It(!0),
        _s = It("w"),
        Ps = It("arrowleft"),
        Us = It("arrowright"),
        Is = It("arrowup"),
        zs = It("arrowdown"),
        As = It("a"),
        Ds = It("s"),
        Rs = It("d"),
        Bs = It("tab"),
        Fs = It("escape"),
        Ns = It("m"),
        Ls = It("k"),
        Os = It("c"),
        qs = It("b"),
        Hs = It("g"),
        Ws = It(12),
        Zs = It("1"),
        js = It("2"),
        Gs = It("3"),
        Vs = It("4"),
        Ys = It("5"),
        Js = It("6"),
        Xs = It("7"),
        Qs = It("8"),
        Ks = It("9"),
        ti = It("0"),
        ei = It("o"),
        si = It("p"),
        ii = It(""),
        ni = It(""),
        ai = It(""),
        ri = It(""),
        oi = It(""),
        li = It(""),
        ci = It(""),
        hi = It(""),
        di = It(""),
        ui = It(""),
        mi = It(""),
        pi = It("");
    let fi;
    fi = {
        ...Object.freeze({
            __proto__: null,
            activeWorld: Ee,
            lastConnectedChar: Ce,
            viewRange: Te,
            resolution: _e,
            postProcessing: Pe,
            grass: Ue,
            shadows: Ie,
            ssao: ze,
            clouds: Ae,
            particles: De,
            detailprops: Re,
            audioVolume: Be,
            musicVolume: Fe,
            lang: Ne,
            command: Le,
            stashCols: Oe,
            stashHeight: qe,
            inventoryCols: He,
            inventoryOpen: We,
            settingsOpen: Ze,
            skillmenuOpen: je,
            dpsmeterOpen: Ge,
            twitchOpen: Ve,
            subscriptionOpen: Ye,
            clanOpen: Je,
            dpsmeterParty: Xe,
            dpsmeterMode: Qe,
            charpanelOpen: Ke,
            skillbarsettings: ts,
            chat: es,
            cameraZoom: ss,
            editorActive: is,
            nameplateViewRange: ns,
            nameplateShowMonsers: as,
            nameplateShowTransparency: rs,
            mapShowMonsters: os,
            mapLowQuality: ls,
            tutprogress: cs,
            chatbubbles: hs,
            showIncomingHeal: ds,
            showIncomingDamage: us,
            showIncomingMana: ms,
            filteredChannels: ps,
            itemQualityFilter: fs,
            itemQualityPercent: gs,
            showFpsPing: vs,
            partyWidth: ys,
            showSelfInParty: bs,
            showPartyMana: ws,
            buffcountUnitframes: xs,
            buffcountParty: ks,
            buffsHideIrrelevant: $s,
            mouseSensitivity: Ss,
            invertMouseX: Ms,
            invertMouseY: Es,
            lockedcamera: Cs,
            pointerlock: Ts,
            kbForward: _s,
            kbTurnLeft: Ps,
            kbTurnRight: Us,
            kbAltForward: Is,
            kbAltBack: zs,
            kbLeft: As,
            kbBack: Ds,
            kbRight: Rs,
            kbNextTarget: Bs,
            kbUntarget: Fs,
            kbMap: Ns,
            kbSkills: Ls,
            kbCharacter: Os,
            kbInventory: qs,
            kbClan: Hs,
            skillbarAmount: Ws,
            kbSkillbar1: Zs,
            kbSkillbar2: js,
            kbSkillbar3: Gs,
            kbSkillbar4: Vs,
            kbSkillbar5: Ys,
            kbSkillbar6: Js,
            kbSkillbar7: Xs,
            kbSkillbar8: Qs,
            kbSkillbar9: Ks,
            kbSkillbar10: ti,
            kbSkillbar11: ei,
            kbSkillbar12: si,
            kbSkillbar13: ii,
            kbSkillbar14: ni,
            kbSkillbar15: ai,
            kbSkillbar16: ri,
            kbSkillbar17: oi,
            kbSkillbar18: li,
            kbSkillbar19: ci,
            kbSkillbar20: hi,
            kbSkillbar21: di,
            kbSkillbar22: ui,
            kbSkillbar23: mi,
            kbSkillbar24: pi
        })
    };
    const gi = (t, e) => {
            const s = localStorage.getItem(t),
                i = JSON.parse("undefined" == s ? null : s);
            null !== i && e.set(i),
                e.subscribe(e => {
                    (vi[t] = e), localStorage.setItem(t, JSON.stringify(e));
                });
        },
        vi = {};
    for (const t in fi) gi(t, fi[t]);
    var yi = Object.freeze({
        __proto__: null,
        current: vi,
        activeWorld: Ee,
        lastConnectedChar: Ce,
        viewRange: Te,
        resolution: _e,
        postProcessing: Pe,
        grass: Ue,
        shadows: Ie,
        ssao: ze,
        clouds: Ae,
        particles: De,
        detailprops: Re,
        audioVolume: Be,
        musicVolume: Fe,
        lang: Ne,
        command: Le,
        stashCols: Oe,
        stashHeight: qe,
        inventoryCols: He,
        inventoryOpen: We,
        settingsOpen: Ze,
        skillmenuOpen: je,
        dpsmeterOpen: Ge,
        twitchOpen: Ve,
        subscriptionOpen: Ye,
        clanOpen: Je,
        dpsmeterParty: Xe,
        dpsmeterMode: Qe,
        charpanelOpen: Ke,
        skillbarsettings: ts,
        chat: es,
        cameraZoom: ss,
        editorActive: is,
        nameplateViewRange: ns,
        nameplateShowMonsers: as,
        nameplateShowTransparency: rs,
        mapShowMonsters: os,
        mapLowQuality: ls,
        tutprogress: cs,
        chatbubbles: hs,
        showIncomingHeal: ds,
        showIncomingDamage: us,
        showIncomingMana: ms,
        filteredChannels: ps,
        itemQualityFilter: fs,
        itemQualityPercent: gs,
        showFpsPing: vs,
        partyWidth: ys,
        showSelfInParty: bs,
        showPartyMana: ws,
        buffcountUnitframes: xs,
        buffcountParty: ks,
        buffsHideIrrelevant: $s,
        mouseSensitivity: Ss,
        invertMouseX: Ms,
        invertMouseY: Es,
        lockedcamera: Cs,
        pointerlock: Ts,
        kbForward: _s,
        kbTurnLeft: Ps,
        kbTurnRight: Us,
        kbAltForward: Is,
        kbAltBack: zs,
        kbLeft: As,
        kbBack: Ds,
        kbRight: Rs,
        kbNextTarget: Bs,
        kbUntarget: Fs,
        kbMap: Ns,
        kbSkills: Ls,
        kbCharacter: Os,
        kbInventory: qs,
        kbClan: Hs,
        skillbarAmount: Ws,
        kbSkillbar1: Zs,
        kbSkillbar2: js,
        kbSkillbar3: Gs,
        kbSkillbar4: Vs,
        kbSkillbar5: Ys,
        kbSkillbar6: Js,
        kbSkillbar7: Xs,
        kbSkillbar8: Qs,
        kbSkillbar9: Ks,
        kbSkillbar10: ti,
        kbSkillbar11: ei,
        kbSkillbar12: si,
        kbSkillbar13: ii,
        kbSkillbar14: ni,
        kbSkillbar15: ai,
        kbSkillbar16: ri,
        kbSkillbar17: oi,
        kbSkillbar18: li,
        kbSkillbar19: ci,
        kbSkillbar20: hi,
        kbSkillbar21: di,
        kbSkillbar22: ui,
        kbSkillbar23: mi,
        kbSkillbar24: pi
    });
    function bi(t) {
        const e = t[0],
            s = t[1],
            i = t[2];
        return Math.sqrt(e * e + s * s + i * i);
    }
    function wi(t, e) {
        return (t[0] = e[0]), (t[1] = e[1]), (t[2] = e[2]), t;
    }
    function xi(t, e, s, i) {
        return (t[0] = e), (t[1] = s), (t[2] = i), t;
    }
    function ki(t, e) {
        return (t[0] = e), (t[1] = e), (t[2] = e), t;
    }
    function $i(t, e, s) {
        return (
            (t[0] = e[0] + s[0]), (t[1] = e[1] + s[1]), (t[2] = e[2] + s[2]), t
        );
    }
    function Si(t, e, s) {
        return (
            (t[0] = e[0] - s[0]), (t[1] = e[1] - s[1]), (t[2] = e[2] - s[2]), t
        );
    }
    function Mi(t, e, s) {
        return (t[0] = e[0] * s), (t[1] = e[1] * s), (t[2] = e[2] * s), t;
    }
    function Ei(t, e, s, i) {
        return (
            (t[0] = e[0] + s[0] * i),
            (t[1] = e[1] + s[1] * i),
            (t[2] = e[2] + s[2] * i),
            t
        );
    }
    function Ci(t, e) {
        const s = e[0] - t[0],
            i = e[1] - t[1],
            n = e[2] - t[2];
        return Math.sqrt(s * s + i * i + n * n);
    }
    function Ti(t, e) {
        const s = e[0] - t[0],
            i = e[1] - t[1],
            n = e[2] - t[2];
        return s * s + i * i + n * n;
    }
    function _i(t, e) {
        const s = e[0],
            i = e[1],
            n = e[2];
        let a = s * s + i * i + n * n;
        return (
            a > 0 && (a = 1 / Math.sqrt(a)),
            (t[0] = e[0] * a),
            (t[1] = e[1] * a),
            (t[2] = e[2] * a),
            t
        );
    }
    function Pi(t, e) {
        return t[0] * e[0] + t[1] * e[1] + t[2] * e[2];
    }
    function Ui(t, e, s) {
        const i = e[0],
            n = e[1],
            a = e[2],
            r = s[0],
            o = s[1],
            l = s[2];
        return (
            (t[0] = n * l - a * o),
            (t[1] = a * r - i * l),
            (t[2] = i * o - n * r),
            t
        );
    }
    function Ii(t, e, s) {
        const i = e[0],
            n = e[1],
            a = e[2];
        let r = s[3] * i + s[7] * n + s[11] * a + s[15];
        return (
            (r = r || 1),
            (t[0] = (s[0] * i + s[4] * n + s[8] * a + s[12]) / r),
            (t[1] = (s[1] * i + s[5] * n + s[9] * a + s[13]) / r),
            (t[2] = (s[2] * i + s[6] * n + s[10] * a + s[14]) / r),
            t
        );
    }
    function zi(t, e, s) {
        const i = e[0],
            n = e[1],
            a = e[2],
            r = s[0],
            o = s[1],
            l = s[2];
        let c = o * a - l * n,
            h = l * i - r * a,
            d = r * n - o * i,
            u = o * d - l * h,
            m = l * c - r * d,
            p = r * h - o * c;
        const f = 2 * s[3];
        return (
            (c *= f),
            (h *= f),
            (d *= f),
            (u *= 2),
            (m *= 2),
            (p *= 2),
            (t[0] = i + c + u),
            (t[1] = n + h + m),
            (t[2] = a + d + p),
            t
        );
    }
    function Ai(t, e, s) {
        const i = Math.sin(s),
            n = Math.cos(s);
        return (
            (t[0] = e[2] * i + e[0] * n),
            (t[1] = e[1]),
            (t[2] = e[2] * n - e[0] * i),
            t
        );
    }
    function Di(t, e, s) {
        const i = Math.sin(s),
            n = Math.cos(s);
        return (t[0] = e[1] * i + e[0] * n), (t[2] = e[1] * n - e[0] * i), t;
    }
    const Ri = [0, 0, 0];
    let Bi = 1,
        Fi = 1;
    const Ni = (t, e, s, i, n) => {
        xi(e, 1 / 0, 1 / 0, 1 / 0), xi(s, -1 / 0, -1 / 0, -1 / 0);
        for (let i = 0, n = t.length; i < n; i += 3) {
            const n = t[i],
                a = t[i + 1],
                r = t[i + 2];
            (e[0] = Math.min(n, e[0])),
                (e[1] = Math.min(a, e[1])),
                (e[2] = Math.min(r, e[2])),
                (s[0] = Math.max(n, s[0])),
                (s[1] = Math.max(a, s[1])),
                (s[2] = Math.max(r, s[2]));
        }
        Si(n, s, e), Mi(i, $i(i, e, s), 0.5);
    };
    class Li {
        constructor(t, e = {}) {
            (this.gl = t),
                (this.attributes = e),
                (this.id = Bi++),
                (this.drawRange = { start: 0, count: 0 }),
                (this.attrRange = 0),
                (this.instancedCount = 0),
                (this.vao = []),
                (this.bounds = {
                    min: [0, 0, 0],
                    max: [0, 0, 0],
                    center: [0, 0, 0],
                    scale: [0, 0, 0],
                    radius: 1 / 0,
                    initiated: !1
                }),
                this.addAttributes(e);
        }
        addAttributes(t) {
            this.gl.renderer.bindVertexArray(null),
                (this.gl.renderer.currentGeometry = null),
                (this.glState = this.gl.renderer.state);
            for (const e in t) this.addAttribute(e, t[e]);
        }
        addAttribute(t, e) {
            if (
                ((this.attributes[t] = e),
                (e.id = Fi++),
                (e.size = e.size || 1),
                (e.type =
                    e.type ||
                    (e.data.constructor === Float32Array
                        ? this.gl.FLOAT
                        : e.data.constructor === Uint16Array
                        ? this.gl.UNSIGNED_SHORT
                        : this.gl.UNSIGNED_INT)),
                (e.target =
                    "index" === t
                        ? this.gl.ELEMENT_ARRAY_BUFFER
                        : this.gl.ARRAY_BUFFER),
                (e.normalize = e.normalize || !1),
                (e.buffer = this.gl.createBuffer()),
                (e.count = e.data.length / e.size),
                (e.divisor = e.instanced
                    ? "number" == typeof e.instanced
                        ? e.instanced
                        : 1
                    : 0),
                (e.needsUpdate = !1),
                (e.bufferMode = e.bufferMode || this.gl.STATIC_DRAW),
                this.updateAttribute(e),
                e.divisor)
            ) {
                if (
                    ((this.isInstanced = !0),
                    this.instancedCount &&
                        this.instancedCount !== e.count * e.divisor)
                )
                    return (
                        console.warn(
                            "geometry has multiple instanced buffers of different length"
                        ),
                        (this.instancedCount = Math.min(
                            this.instancedCount,
                            e.count * e.divisor
                        ))
                    );
                this.instancedCount = e.count * e.divisor;
            } else
                "index" === t
                    ? (this.drawRange.count = e.count)
                    : this.attributes.index ||
                      (this.drawRange.count = Math.max(
                          this.drawRange.count,
                          e.count
                      ));
        }
        updateAttribute(t) {
            this.glState.boundBuffer !== t.id &&
                (this.gl.bindBuffer(t.target, t.buffer),
                (this.glState.boundBuffer = t.id)),
                this.gl.bufferData(
                    t.target,
                    t.data,
                    t.bufferMode,
                    0,
                    this.attrRange > 0
                        ? this.attrRange * t.size
                        : this.instancedCount * t.size
                ),
                (t.needsUpdate = !1);
        }
        setIndex(t) {
            this.addAttribute("index", t);
        }
        setDrawRange(t, e) {
            (this.attrRange = e),
                (this.drawRange.start = t),
                (this.drawRange.count = e);
        }
        setInstancedCount(t) {
            this.instancedCount = t;
        }
        createVAO(t) {
            (this.vao[t.id] = this.gl.renderer.createVertexArray()),
                this.gl.renderer.bindVertexArray(this.vao[t.id]),
                this.bindAttributes(t);
        }
        bindAttributes(t) {
            t.attributeLocations.forEach((t, e) => {
                if (!this.attributes[e])
                    return void console.warn(
                        `active attribute ${e} not being supplied`
                    );
                const s = this.attributes[e];
                if (
                    (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, s.buffer),
                    (this.glState.boundBuffer = s.id),
                    s.size > 4)
                ) {
                    const e = s.size / 4,
                        i = 4 * e,
                        n = 4 * i;
                    for (let s = 0; s < e; ++s)
                        this.gl.vertexAttribPointer(
                            t + s,
                            e,
                            this.gl.FLOAT,
                            !1,
                            n,
                            i * s
                        ),
                            this.gl.enableVertexAttribArray(t + s),
                            this.gl.renderer.vertexAttribDivisor(t + s, 1);
                } else
                    this.gl.vertexAttribPointer(
                        t,
                        s.size,
                        s.type,
                        s.normalize,
                        0,
                        0
                    ),
                        this.gl.enableVertexAttribArray(t),
                        this.gl.renderer.vertexAttribDivisor(t, s.divisor);
            }),
                this.attributes.index &&
                    this.gl.bindBuffer(
                        this.gl.ELEMENT_ARRAY_BUFFER,
                        this.attributes.index.buffer
                    );
        }
        draw({
            program: t,
            mode: e = this.gl.TRIANGLES,
            geometryBound: s = !1
        }) {
            s ||
                (this.vao[t.id] || this.createVAO(t),
                this.gl.renderer.bindVertexArray(this.vao[t.id]),
                (this.gl.renderer.currentGeometry = this.id)),
                t.attributeLocations.forEach((t, e) => {
                    const s = this.attributes[e];
                    s.needsUpdate && this.updateAttribute(s);
                }),
                this.isInstanced
                    ? this.attributes.index
                        ? this.gl.renderer.drawElementsInstanced(
                              e,
                              this.drawRange.count,
                              this.attributes.index.type,
                              this.drawRange.start,
                              this.instancedCount
                          )
                        : this.gl.renderer.drawArraysInstanced(
                              e,
                              this.drawRange.start,
                              this.drawRange.count,
                              this.instancedCount
                          )
                    : this.attributes.index
                    ? this.gl.drawElements(
                          e,
                          this.drawRange.count,
                          this.attributes.index.type,
                          this.drawRange.start
                      )
                    : this.gl.drawArrays(
                          e,
                          this.drawRange.start,
                          this.drawRange.count
                      );
        }
        computeBoundingBox() {
            Ni(
                this.attributes.position.data,
                this.bounds.min,
                this.bounds.max,
                this.bounds.center,
                this.bounds.scale
            ),
                (this.bounds.initiated = !0);
        }
        computeBoundingSphereRadius() {
            let t = 0;
            for (
                let e = 0, s = this.attributes.position.data.length;
                e < s;
                e += 3
            )
                (Ri[0] = this.attributes.position.data[e]),
                    (Ri[1] = this.attributes.position.data[e + 1]),
                    (Ri[2] = this.attributes.position.data[e + 2]),
                    (t = Math.max(t, Ti(this.bounds.center, Ri)));
            this.bounds.radius = Math.sqrt(t);
        }
        computeBoundingSphere() {
            this.bounds.initiated || this.computeBoundingBox(),
                this.computeBoundingSphereRadius();
        }
        remove() {
            this.vao &&
                this.vao.forEach(t => {
                    this.gl.renderer.deleteVertexArray(t);
                });
            for (const t in this.attributes)
                this.gl.deleteBuffer(this.attributes[t].buffer),
                    delete this.attributes[t];
        }
    }
    let Oi = 1;
    class qi {
        constructor(
            t,
            {
                vertex: e,
                fragment: s,
                uniforms: i = {},
                instanced: n = {},
                active: a = !0,
                transparent: r = !1,
                cullFace: o = t.BACK,
                frontFace: l = t.CCW,
                depthTest: c = !0,
                depthWrite: h = !0,
                depthFunc: d = t.LESS,
                globalUniforms: u = {}
            } = {}
        ) {
            (this.gl = t),
                (this.uniforms = i),
                (this.instanced = n),
                (this.autoUniforms = []),
                (this.id = Oi++),
                (this.active = a),
                e || console.warn("vertex shader not supplied"),
                s || console.warn("fragment shader not supplied"),
                (this.transparent = r),
                (this.cullFace = o),
                (this.frontFace = l),
                (this.depthTest = c),
                (this.depthWrite = h),
                (this.depthFunc = d),
                (this.blendFunc = {}),
                (this.blendEquation = {}),
                this.transparent &&
                    !this.blendFunc.src &&
                    (this.gl.renderer.premultipliedAlpha
                        ? this.setBlendFunc(
                              this.gl.ONE,
                              this.gl.ONE_MINUS_SRC_ALPHA
                          )
                        : this.setBlendFunc(
                              this.gl.SRC_ALPHA,
                              this.gl.ONE_MINUS_SRC_ALPHA
                          ));
            const m = t.createShader(t.VERTEX_SHADER);
            t.shaderSource(m, e), t.compileShader(m);
            const p = t.createShader(t.FRAGMENT_SHADER);
            t.shaderSource(p, s),
                t.compileShader(p),
                (this.program = t.createProgram()),
                t.attachShader(this.program, m),
                t.attachShader(this.program, p),
                t.linkProgram(this.program),
                t.deleteShader(m),
                t.deleteShader(p),
                (this.uniformLocations = new Map());
            const f = t.getProgramParameter(this.program, t.ACTIVE_UNIFORMS);
            for (let e = 0; e < f; e++) {
                const s = t.getActiveUniform(this.program, e);
                this.uniformLocations.set(
                    s,
                    t.getUniformLocation(this.program, s.name)
                );
                const i = s.name.match(/(\w+)/g);
                s.uniformName = i[0];
                const n = s.uniformName;
                u[n]
                    ? this.uniforms[n] || (this.uniforms[n] = u[n])
                    : this.uniforms[n] ||
                      (Zi.has(n) || this.autoUniforms.push(n),
                      (this.uniforms[n] = { value: void 0 }));
            }
            this.attributeLocations = new Map();
            const g = t.getProgramParameter(this.program, t.ACTIVE_ATTRIBUTES);
            for (let e = 0; e < g; e++) {
                const s = t.getActiveAttrib(this.program, e);
                this.attributeLocations.set(
                    s.name,
                    t.getAttribLocation(this.program, s.name)
                );
            }
        }
        setBlendFunc(t, e, s, i) {
            (this.blendFunc.src = t),
                (this.blendFunc.XC = e),
                (this.blendFunc.srcAlpha = s),
                (this.blendFunc.dstAlpha = i),
                t && (this.transparent = !0);
        }
        setBlendEquation(t, e) {
            (this.blendEquation.modeRGB = t),
                (this.blendEquation.modeAlpha = e);
        }
        applyState() {
            this.depthTest
                ? this.gl.renderer.enable(this.gl.DEPTH_TEST)
                : this.gl.renderer.disable(this.gl.DEPTH_TEST),
                this.cullFace
                    ? this.gl.renderer.enable(this.gl.CULL_FACE)
                    : this.gl.renderer.disable(this.gl.CULL_FACE),
                this.blendFunc.src
                    ? this.gl.renderer.enable(this.gl.BLEND)
                    : this.gl.renderer.disable(this.gl.BLEND),
                this.cullFace && this.gl.renderer.setCullFace(this.cullFace),
                this.gl.renderer.setFrontFace(this.frontFace),
                this.gl.renderer.setDepthMask(this.depthWrite),
                this.gl.renderer.setDepthFunc(this.depthFunc),
                this.blendFunc.src &&
                    this.gl.renderer.setBlendFunc(
                        this.blendFunc.src,
                        this.blendFunc.XC,
                        this.blendFunc.srcAlpha,
                        this.blendFunc.dstAlpha
                    ),
                this.blendEquation.modeRGB &&
                    this.gl.renderer.setBlendEquation(
                        this.blendEquation.modeRGB,
                        this.blendEquation.modeAlpha
                    );
        }
        use({
            programActive: t = !1,
            flipFaces: e = !1,
            shadowTarget: s = null
        } = {}) {
            let i = -1;
            t ||
                (this.gl.useProgram(this.program),
                (this.gl.renderer.currentProgram = this.id)),
                this.uniformLocations.forEach((t, e) => {
                    const n = e.uniformName,
                        a = this.uniforms[n];
                    let r = !1;
                    if (!s && a.state) {
                        if ((0 | t.state) >= a.state) return;
                        (r = !0), (t.state = a.state);
                    }
                    if (35678 === e.type || 35682 === e.type) {
                        if (void 0 === a.value.length)
                            return (
                                (i += 1),
                                a.value.update(i),
                                (!r && !Hi(t, i)) || Wi(this.gl, e.type, t, i)
                            );
                        if (a.value.length > 0 && a.value[0].texture) {
                            const s = [];
                            return (
                                a.value.forEach(t => {
                                    (i += 1), t.update(i), s.push(i);
                                }),
                                (!r && !Hi(t, s)) || Wi(this.gl, e.type, t, s)
                            );
                        }
                    }
                    (r || Hi(t, a.value)) && Wi(this.gl, e.type, t, a.value);
                }),
                this.applyState(),
                e &&
                    this.gl.renderer.setFrontFace(
                        this.frontFace === this.gl.CCW
                            ? this.gl.CW
                            : this.gl.CCW
                    );
        }
        remove() {
            this.gl.deleteProgram(this.program),
                this.gl.deleteShader(this.vertexShader),
                this.gl.deleteShader(this.fragmentShader);
        }
    }
    function Hi(t, e, s) {
        if (void 0 !== e.length) {
            if (
                (t.cache || (t.cache = []),
                (function (t, e) {
                    let s = !0;
                    const i = t.length,
                        n = e.length;
                    i !== n && (s = !1);
                    for (let i = 0; i < n; i++)
                        t[i] !== e[i] && ((s = !1), (t[i] = e[i]));
                    return s;
                })(t.cache, e))
            )
                return !1;
        } else {
            if (t.cache == e) return !1;
            t.cache = e;
        }
        return !0;
    }
    function Wi(t, e, s, i, n) {
        switch (e) {
            case 5126:
                return i.length ? t.uniform1fv(s, i) : t.uniform1f(s, i);
            case 35664:
                return t.uniform2fv(s, i);
            case 35665:
                return t.uniform3fv(s, i);
            case 35666:
                return t.uniform4fv(s, i);
            case 35670:
            case 5124:
            case 35678:
            case 35682:
            case 35680:
                return i.length ? t.uniform1iv(s, i) : t.uniform1i(s, i);
            case 35671:
            case 35667:
                return t.uniform2iv(s, i);
            case 35672:
            case 35668:
                return t.uniform3iv(s, i);
            case 35673:
            case 35669:
                return t.uniform4iv(s, i);
            case 35674:
                return t.uniformMatrix2fv(s, !1, i);
            case 35675:
                return t.uniformMatrix3fv(s, !1, i);
            case 35676:
                return t.uniformMatrix4fv(s, !1, i);
        }
    }
    const Zi = new Set(["kX", "Ua", "zd", "QA", "Cq", "Ux", "AQ"]);
    function ji(t, e) {
        return (
            (t[0] = e[0]),
            (t[1] = e[1]),
            (t[2] = e[2]),
            (t[3] = e[3]),
            (t[4] = e[4]),
            (t[5] = e[5]),
            (t[6] = e[6]),
            (t[7] = e[7]),
            (t[8] = e[8]),
            (t[9] = e[9]),
            (t[10] = e[10]),
            (t[11] = e[11]),
            (t[12] = e[12]),
            (t[13] = e[13]),
            (t[14] = e[14]),
            (t[15] = e[15]),
            t
        );
    }
    function Gi(t, e) {
        const s = e[0],
            i = e[1],
            n = e[2],
            a = e[3],
            r = e[4],
            o = e[5],
            l = e[6],
            c = e[7],
            h = e[8],
            d = e[9],
            u = e[10],
            m = e[11],
            p = e[12],
            f = e[13],
            g = e[14],
            v = e[15],
            y = s * o - i * r,
            b = s * l - n * r,
            w = s * c - a * r,
            x = i * l - n * o,
            k = i * c - a * o,
            $ = n * c - a * l,
            S = h * f - d * p,
            M = h * g - u * p,
            E = h * v - m * p,
            C = d * g - u * f,
            T = d * v - m * f,
            _ = u * v - m * g;
        let P = y * _ - b * T + w * C + x * E - k * M + $ * S;
        return P
            ? ((P = 1 / P),
              (t[0] = (o * _ - l * T + c * C) * P),
              (t[1] = (n * T - i * _ - a * C) * P),
              (t[2] = (f * $ - g * k + v * x) * P),
              (t[3] = (u * k - d * $ - m * x) * P),
              (t[4] = (l * E - r * _ - c * M) * P),
              (t[5] = (s * _ - n * E + a * M) * P),
              (t[6] = (g * w - p * $ - v * b) * P),
              (t[7] = (h * $ - u * w + m * b) * P),
              (t[8] = (r * T - o * E + c * S) * P),
              (t[9] = (i * E - s * T - a * S) * P),
              (t[10] = (p * k - f * w + v * y) * P),
              (t[11] = (d * w - h * k - m * y) * P),
              (t[12] = (o * M - r * C - l * S) * P),
              (t[13] = (s * C - i * M + n * S) * P),
              (t[14] = (f * b - p * x - g * y) * P),
              (t[15] = (h * x - d * b + u * y) * P),
              t)
            : null;
    }
    function Vi(t, e, s) {
        const i = e[0],
            n = e[1],
            a = e[2],
            r = e[3],
            o = e[4],
            l = e[5],
            c = e[6],
            h = e[7],
            d = e[8],
            u = e[9],
            m = e[10],
            p = e[11],
            f = e[12],
            g = e[13],
            v = e[14],
            y = e[15];
        let b = s[0],
            w = s[1],
            x = s[2],
            k = s[3];
        return (
            (t[0] = b * i + w * o + x * d + k * f),
            (t[1] = b * n + w * l + x * u + k * g),
            (t[2] = b * a + w * c + x * m + k * v),
            (t[3] = b * r + w * h + x * p + k * y),
            (b = s[4]),
            (w = s[5]),
            (x = s[6]),
            (k = s[7]),
            (t[4] = b * i + w * o + x * d + k * f),
            (t[5] = b * n + w * l + x * u + k * g),
            (t[6] = b * a + w * c + x * m + k * v),
            (t[7] = b * r + w * h + x * p + k * y),
            (b = s[8]),
            (w = s[9]),
            (x = s[10]),
            (k = s[11]),
            (t[8] = b * i + w * o + x * d + k * f),
            (t[9] = b * n + w * l + x * u + k * g),
            (t[10] = b * a + w * c + x * m + k * v),
            (t[11] = b * r + w * h + x * p + k * y),
            (b = s[12]),
            (w = s[13]),
            (x = s[14]),
            (k = s[15]),
            (t[12] = b * i + w * o + x * d + k * f),
            (t[13] = b * n + w * l + x * u + k * g),
            (t[14] = b * a + w * c + x * m + k * v),
            (t[15] = b * r + w * h + x * p + k * y),
            t
        );
    }
    function Yi(t, e) {
        return (t[0] = e[12]), (t[1] = e[13]), (t[2] = e[14]), t;
    }
    function Ji(t, e) {
        const s = e[0],
            i = e[1],
            n = e[2],
            a = e[4],
            r = e[5],
            o = e[6],
            l = e[8],
            c = e[9],
            h = e[10];
        return (
            (t[0] = Math.sqrt(s * s + i * i + n * n)),
            (t[1] = Math.sqrt(a * a + r * r + o * o)),
            (t[2] = Math.sqrt(l * l + c * c + h * h)),
            t
        );
    }
    function Xi(t, e) {
        const s = e[0] + e[5] + e[10];
        let i = 0;
        return (
            s > 0
                ? ((i = 2 * Math.sqrt(s + 1)),
                  (t[3] = 0.25 * i),
                  (t[0] = (e[6] - e[9]) / i),
                  (t[1] = (e[8] - e[2]) / i),
                  (t[2] = (e[1] - e[4]) / i))
                : e[0] > e[5] && e[0] > e[10]
                ? ((i = 2 * Math.sqrt(1 + e[0] - e[5] - e[10])),
                  (t[3] = (e[6] - e[9]) / i),
                  (t[0] = 0.25 * i),
                  (t[1] = (e[1] + e[4]) / i),
                  (t[2] = (e[8] + e[2]) / i))
                : e[5] > e[10]
                ? ((i = 2 * Math.sqrt(1 + e[5] - e[0] - e[10])),
                  (t[3] = (e[8] - e[2]) / i),
                  (t[0] = (e[1] + e[4]) / i),
                  (t[1] = 0.25 * i),
                  (t[2] = (e[6] + e[9]) / i))
                : ((i = 2 * Math.sqrt(1 + e[10] - e[0] - e[5])),
                  (t[3] = (e[1] - e[4]) / i),
                  (t[0] = (e[8] + e[2]) / i),
                  (t[1] = (e[6] + e[9]) / i),
                  (t[2] = 0.25 * i)),
            t
        );
    }
    function Qi(t, e, s, i) {
        const n = e[0],
            a = e[1],
            r = e[2],
            o = i[0],
            l = i[1],
            c = i[2];
        let h = n - s[0],
            d = a - s[1],
            u = r - s[2],
            m = h * h + d * d + u * u;
        m > 0 && ((h *= m = 1 / Math.sqrt(m)), (d *= m), (u *= m));
        let p = l * u - c * d,
            f = c * h - o * u,
            g = o * d - l * h;
        return (
            (m = p * p + f * f + g * g) > 0 &&
                ((p *= m = 1 / Math.sqrt(m)), (f *= m), (g *= m)),
            (t[0] = p),
            (t[1] = f),
            (t[2] = g),
            (t[3] = 0),
            (t[4] = d * g - u * f),
            (t[5] = u * p - h * g),
            (t[6] = h * f - d * p),
            (t[7] = 0),
            (t[8] = h),
            (t[9] = d),
            (t[10] = u),
            (t[11] = 0),
            (t[12] = n),
            (t[13] = a),
            (t[14] = r),
            (t[15] = 1),
            t
        );
    }
    const Ki = [0, 0, 0];
    function tn(t, e) {
        return (t[0] = e[0]), (t[1] = e[1]), (t[2] = e[2]), (t[3] = e[3]), t;
    }
    function en(t, e, s, i, n) {
        return (t[0] = e), (t[1] = s), (t[2] = i), (t[3] = n), t;
    }
    function sn(t, e, s) {
        const i = e[0],
            n = e[1],
            a = e[2],
            r = e[3],
            o = s[0],
            l = s[1],
            c = s[2],
            h = s[3];
        return (
            (t[0] = i * h + r * o + n * c - a * l),
            (t[1] = n * h + r * l + a * o - i * c),
            (t[2] = a * h + r * c + i * l - n * o),
            (t[3] = r * h - i * o - n * l - a * c),
            t
        );
    }
    const nn = tn,
        an = en,
        rn = function (t, e) {
            return t[0] * e[0] + t[1] * e[1] + t[2] * e[2] + t[3] * e[3];
        },
        on = function (t, e) {
            const s = e[0],
                i = e[1],
                n = e[2],
                a = e[3];
            let r = s * s + i * i + n * n + a * a;
            return (
                r > 0 && (r = 1 / Math.sqrt(r)),
                (t[0] = s * r),
                (t[1] = i * r),
                (t[2] = n * r),
                (t[3] = a * r),
                t
            );
        },
        ln = (function () {
            const t = [0, 0, 0],
                e = [1, 0, 0],
                s = [0, 1, 0];
            return function (i, n, a) {
                const r = Pi(n, a);
                return r < -0.999999
                    ? (Ui(t, e, n),
                      bi(t) < 1e-6 && Ui(t, s, n),
                      _i(t, t),
                      (function (t, e, s) {
                          s *= 0.5;
                          const i = Math.sin(s);
                          (t[0] = i * e[0]),
                              (t[1] = i * e[1]),
                              (t[2] = i * e[2]),
                              (t[3] = Math.cos(s));
                      })(i, t, Math.PI),
                      i)
                    : r > 0.999999
                    ? ((i[0] = 0), (i[1] = 0), (i[2] = 0), (i[3] = 1), i)
                    : (Ui(t, n, a),
                      (i[0] = t[0]),
                      (i[1] = t[1]),
                      (i[2] = t[2]),
                      (i[3] = 1 + r),
                      on(i, i));
            };
        })();
    class cn extends Array {
        constructor(t = 0, e = 0, s = 0, i = 1) {
            return super(t, e, s, i), this;
        }
        identity() {
            var t;
            return (
                ((t = this)[0] = 0), (t[1] = 0), (t[2] = 0), (t[3] = 1), this
            );
        }
        set(t, e, s, i) {
            return an(this, t, e, s, i), this;
        }
        rotateX(t) {
            return (
                (function (t, e, s) {
                    s *= 0.5;
                    const i = e[0],
                        n = e[1],
                        a = e[2],
                        r = e[3],
                        o = Math.sin(s),
                        l = Math.cos(s);
                    (t[0] = i * l + r * o),
                        (t[1] = n * l + a * o),
                        (t[2] = a * l - n * o),
                        (t[3] = r * l - i * o);
                })(this, this, t),
                this
            );
        }
        rotateY(t) {
            return (
                (function (t, e, s) {
                    s *= 0.5;
                    const i = e[0],
                        n = e[1],
                        a = e[2],
                        r = e[3],
                        o = Math.sin(s),
                        l = Math.cos(s);
                    (t[0] = i * l - a * o),
                        (t[1] = n * l + r * o),
                        (t[2] = a * l + i * o),
                        (t[3] = r * l - n * o);
                })(this, this, t),
                this
            );
        }
        rotateZ(t) {
            return (
                (function (t, e, s) {
                    s *= 0.5;
                    const i = e[0],
                        n = e[1],
                        a = e[2],
                        r = e[3],
                        o = Math.sin(s),
                        l = Math.cos(s);
                    (t[0] = i * l + n * o),
                        (t[1] = n * l - i * o),
                        (t[2] = a * l + r * o),
                        (t[3] = r * l - a * o);
                })(this, this, t),
                this
            );
        }
        inverse(t = this) {
            return (
                (function (t, e) {
                    const s = e[0],
                        i = e[1],
                        n = e[2],
                        a = e[3],
                        r = s * s + i * i + n * n + a * a,
                        o = r ? 1 / r : 0;
                    (t[0] = -s * o),
                        (t[1] = -i * o),
                        (t[2] = -n * o),
                        (t[3] = a * o);
                })(this, t),
                this
            );
        }
        conjugate(t = this) {
            return (
                (function (t, e) {
                    (t[0] = -e[0]),
                        (t[1] = -e[1]),
                        (t[2] = -e[2]),
                        (t[3] = e[3]);
                })(this, t),
                this
            );
        }
        copy(t) {
            return nn(this, t), this;
        }
        normalize(t = this) {
            return on(this, t), this;
        }
        multiply(t, e) {
            return e ? sn(this, t, e) : sn(this, this, t), this;
        }
        dot(t) {
            return rn(this, t);
        }
        fromMatrix3(t) {
            return (
                (function (t, e) {
                    const s = e[0] + e[4] + e[8];
                    let i;
                    if (s > 0)
                        (i = Math.sqrt(s + 1)),
                            (t[3] = 0.5 * i),
                            (i = 0.5 / i),
                            (t[0] = (e[5] - e[7]) * i),
                            (t[1] = (e[6] - e[2]) * i),
                            (t[2] = (e[1] - e[3]) * i);
                    else {
                        let s = 0;
                        e[4] > e[0] && (s = 1), e[8] > e[3 * s + s] && (s = 2);
                        const n = (s + 1) % 3,
                            a = (s + 2) % 3;
                        (i = Math.sqrt(
                            e[3 * s + s] - e[3 * n + n] - e[3 * a + a] + 1
                        )),
                            (t[s] = 0.5 * i),
                            (i = 0.5 / i),
                            (t[3] = (e[3 * n + a] - e[3 * a + n]) * i),
                            (t[n] = (e[3 * n + s] + e[3 * s + n]) * i),
                            (t[a] = (e[3 * a + s] + e[3 * s + a]) * i);
                    }
                })(this, t),
                this
            );
        }
        fromEuler(t) {
            return (
                (function (t, e, s = "YXZ") {
                    const i = Math.sin(0.5 * e[0]),
                        n = Math.cos(0.5 * e[0]),
                        a = Math.sin(0.5 * e[1]),
                        r = Math.cos(0.5 * e[1]),
                        o = Math.sin(0.5 * e[2]),
                        l = Math.cos(0.5 * e[2]);
                    "XYZ" === s
                        ? ((t[0] = i * r * l + n * a * o),
                          (t[1] = n * a * l - i * r * o),
                          (t[2] = n * r * o + i * a * l),
                          (t[3] = n * r * l - i * a * o))
                        : "YXZ" === s
                        ? ((t[0] = i * r * l + n * a * o),
                          (t[1] = n * a * l - i * r * o),
                          (t[2] = n * r * o - i * a * l),
                          (t[3] = n * r * l + i * a * o))
                        : "ZXY" === s
                        ? ((t[0] = i * r * l - n * a * o),
                          (t[1] = n * a * l + i * r * o),
                          (t[2] = n * r * o + i * a * l),
                          (t[3] = n * r * l - i * a * o))
                        : "ZYX" === s
                        ? ((t[0] = i * r * l - n * a * o),
                          (t[1] = n * a * l + i * r * o),
                          (t[2] = n * r * o - i * a * l),
                          (t[3] = n * r * l + i * a * o))
                        : "YZX" === s
                        ? ((t[0] = i * r * l + n * a * o),
                          (t[1] = n * a * l + i * r * o),
                          (t[2] = n * r * o - i * a * l),
                          (t[3] = n * r * l - i * a * o))
                        : "XZY" === s &&
                          ((t[0] = i * r * l - n * a * o),
                          (t[1] = n * a * l - i * r * o),
                          (t[2] = n * r * o + i * a * l),
                          (t[3] = n * r * l + i * a * o));
                })(this, t, t.order),
                this
            );
        }
        slerp(t, e) {
            return (
                (function (t, e, s, i) {
                    const n = e[0],
                        a = e[1],
                        r = e[2],
                        o = e[3];
                    let l,
                        c,
                        h,
                        d,
                        u,
                        m = s[0],
                        p = s[1],
                        f = s[2],
                        g = s[3];
                    (c = n * m + a * p + r * f + o * g) < 0 &&
                        ((c = -c), (m = -m), (p = -p), (f = -f), (g = -g)),
                        1 - c > 1e-6
                            ? ((l = Math.acos(c)),
                              (h = Math.sin(l)),
                              (d = Math.sin((1 - i) * l) / h),
                              (u = Math.sin(i * l) / h))
                            : ((d = 1 - i), (u = i)),
                        (t[0] = d * n + u * m),
                        (t[1] = d * a + u * p),
                        (t[2] = d * r + u * f),
                        (t[3] = d * o + u * g);
                })(this, this, t, e),
                this
            );
        }
        fromArray(t, e = 0) {
            return (
                (this[0] = t[e]),
                (this[1] = t[e + 1]),
                (this[2] = t[e + 2]),
                (this[3] = t[e + 3]),
                this
            );
        }
        fromVectors(t, e) {
            return ln(this, t, e), this;
        }
    }
    const hn = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
    class dn extends Array {
        constructor(t = 0, e = t, s = t, i = "YXZ", n = new cn()) {
            return super(t, e, s), (this.order = i), (this.quat = n), this;
        }
        onChange() {
            this.quat.fromEuler(this);
        }
        set(t, e = t, s = t) {
            return (
                (this[0] = t),
                (this[1] = e),
                (this[2] = s),
                this.onChange(),
                this
            );
        }
        copy(t) {
            return wi(this, t), this.onChange(), this;
        }
        reorder(t) {
            return (this.order = t), this.onChange(), this;
        }
        fromRotationMatrix(t, e = this.order) {
            return (
                (function (t, e, s = "YXZ") {
                    "XYZ" === s
                        ? ((t[1] = Math.asin(Math.min(Math.max(e[8], -1), 1))),
                          Math.abs(e[8]) < 0.99999
                              ? ((t[0] = Math.atan2(-e[9], e[10])),
                                (t[2] = Math.atan2(-e[4], e[0])))
                              : ((t[0] = Math.atan2(e[6], e[5])), (t[2] = 0)))
                        : "YXZ" === s
                        ? ((t[0] = Math.asin(-Math.min(Math.max(e[9], -1), 1))),
                          Math.abs(e[9]) < 0.99999
                              ? ((t[1] = Math.atan2(e[8], e[10])),
                                (t[2] = Math.atan2(e[1], e[5])))
                              : ((t[1] = Math.atan2(-e[2], e[0])), (t[2] = 0)))
                        : "ZXY" === s
                        ? ((t[0] = Math.asin(Math.min(Math.max(e[6], -1), 1))),
                          Math.abs(e[6]) < 0.99999
                              ? ((t[1] = Math.atan2(-e[2], e[10])),
                                (t[2] = Math.atan2(-e[4], e[5])))
                              : ((t[1] = 0), (t[2] = Math.atan2(e[1], e[0]))))
                        : "ZYX" === s
                        ? ((t[1] = Math.asin(-Math.min(Math.max(e[2], -1), 1))),
                          Math.abs(e[2]) < 0.99999
                              ? ((t[0] = Math.atan2(e[6], e[10])),
                                (t[2] = Math.atan2(e[1], e[0])))
                              : ((t[0] = 0), (t[2] = Math.atan2(-e[4], e[5]))))
                        : "YZX" === s
                        ? ((t[2] = Math.asin(Math.min(Math.max(e[1], -1), 1))),
                          Math.abs(e[1]) < 0.99999
                              ? ((t[0] = Math.atan2(-e[9], e[5])),
                                (t[1] = Math.atan2(-e[2], e[0])))
                              : ((t[0] = 0), (t[1] = Math.atan2(e[8], e[10]))))
                        : "XZY" === s &&
                          ((t[2] = Math.asin(-Math.min(Math.max(e[4], -1), 1))),
                          Math.abs(e[4]) < 0.99999
                              ? ((t[0] = Math.atan2(e[6], e[5])),
                                (t[1] = Math.atan2(e[8], e[0])))
                              : ((t[0] = Math.atan2(-e[9], e[10])),
                                (t[1] = 0)));
                })(this, t, e),
                this
            );
        }
        fromQuaternion(t, e = this.order) {
            return (
                (function (t, e) {
                    const s = e[0],
                        i = e[1],
                        n = e[2],
                        a = e[3],
                        r = s + s,
                        o = i + i,
                        l = n + n,
                        c = s * r,
                        h = i * r,
                        d = i * o,
                        u = n * r,
                        m = n * o,
                        p = n * l,
                        f = a * r,
                        g = a * o,
                        v = a * l;
                    (t[0] = 1 - d - p),
                        (t[1] = h + v),
                        (t[2] = u - g),
                        (t[3] = 0),
                        (t[4] = h - v),
                        (t[5] = 1 - c - p),
                        (t[6] = m + f),
                        (t[7] = 0),
                        (t[8] = u + g),
                        (t[9] = m - f),
                        (t[10] = 1 - c - d),
                        (t[11] = 0),
                        (t[12] = 0),
                        (t[13] = 0),
                        (t[14] = 0),
                        (t[15] = 1);
                })(hn, t),
                this.fromRotationMatrix(hn, e)
            );
        }
    }
    class un {
        constructor(t = {}) {
            (this.parent = null),
                (this.children = []),
                (this.visible = !0),
                (this.geometry = void 0),
                (this.matrix = [
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1
                ]),
                (this.VN = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
                (this.matrixAutoUpdate = !0),
                (this.worldMatrixNeedsUpdate = !1),
                (this.position = [0, 0, 0]),
                (this.scale = [1, 1, 1]),
                (this.quaternion = new cn()),
                (this.rotation = new dn(0, 0, 0, "YXZ", this.quaternion)),
                (this.data = t);
        }
        reset() {
            (this.data = {}),
                (this.geometry = void 0),
                (this.visible = !0),
                xi(this.position, 0, 0, 0),
                xi(this.scale, 1, 1, 1),
                this.rotation.set(0, 0, 0),
                this.rotation.reorder("YXZ"),
                this.setParent(null, !0),
                this.children.forEach(t => {
                    t.setParent(null);
                }),
                (this.children.length = 0);
        }
        setParent(t, e = !0) {
            e &&
                this.parent &&
                t !== this.parent &&
                this.parent.removeChild(this, !1),
                (this.parent = t),
                e && t && t.addChild(this, !1);
        }
        addChild(t, e = !0) {
            ~this.children.indexOf(t) || this.children.push(t),
                e && t.setParent(this, !1);
        }
        removeChild(t, e = !0) {
            ~this.children.indexOf(t) &&
                this.children.splice(this.children.indexOf(t), 1),
                e && t.setParent(null, !1);
        }
        updateMatrixWorld(t) {
            if (this.visible) {
                this.matrixAutoUpdate && this.updateMatrix(),
                    (this.worldMatrixNeedsUpdate || t) &&
                        (null === this.parent
                            ? ji(this.VN, this.matrix)
                            : Vi(this.VN, this.parent.VN, this.matrix),
                        (this.worldMatrixNeedsUpdate = !1),
                        (t = !0));
                for (let e = 0, s = this.children.length; e < s; e++)
                    this.children[e].updateMatrixWorld(t);
            }
        }
        updateMatrix() {
            !(function (t, e, s, i) {
                const n = e[0],
                    a = e[1],
                    r = e[2],
                    o = e[3],
                    l = n + n,
                    c = a + a,
                    h = r + r,
                    d = n * l,
                    u = n * c,
                    m = n * h,
                    p = a * c,
                    f = a * h,
                    g = r * h,
                    v = o * l,
                    y = o * c,
                    b = o * h,
                    w = i[0],
                    x = i[1],
                    k = i[2];
                (t[0] = (1 - (p + g)) * w),
                    (t[1] = (u + b) * w),
                    (t[2] = (m - y) * w),
                    (t[3] = 0),
                    (t[4] = (u - b) * x),
                    (t[5] = (1 - (d + g)) * x),
                    (t[6] = (f + v) * x),
                    (t[7] = 0),
                    (t[8] = (m + y) * k),
                    (t[9] = (f - v) * k),
                    (t[10] = (1 - (d + p)) * k),
                    (t[11] = 0),
                    (t[12] = s[0]),
                    (t[13] = s[1]),
                    (t[14] = s[2]),
                    (t[15] = 1);
            })(this.matrix, this.quaternion, this.position, this.scale),
                (this.worldMatrixNeedsUpdate = !0);
        }
        traverse(t) {
            if (!t(this))
                for (let e = 0, s = this.children.length; e < s; e++)
                    this.children[e].traverse(t);
        }
        decompose() {
            Yi(this.position, this.matrix),
                Xi(this.quaternion, this.matrix),
                Ji(this.scale, this.matrix),
                this.rotation.fromQuaternion(this.quaternion);
        }
        lookAt(t, e = !1, s) {
            e
                ? Qi(this.matrix, this.position, t, s)
                : Qi(this.matrix, t, this.position, s),
                Xi(this.quaternion, this.matrix),
                this.rotation.fromQuaternion(this.quaternion);
        }
    }
    const mn = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        pn = [0, 0, 0],
        fn = [0, 0, 0];
    class gn extends un {
        constructor(
            t,
            {
                near: e = 0.1,
                CR: s = 100,
                fov: i = 45,
                aspect: n = 1,
                left: a,
                right: r,
                bottom: o,
                top: l
            } = {}
        ) {
            super(),
                (this.near = e),
                (this.CR = s),
                (this.fov = i),
                (this.aspect = n),
                (this.Ux = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
                (this.QA = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
                (this.kX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
                (this.worldPosition = [0, 0, 0]),
                a || r
                    ? this.orthographic({
                          left: a,
                          right: r,
                          bottom: o,
                          top: l
                      })
                    : this.perspective(),
                (this.frustum = [
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0],
                    [0, 0, 0]
                ]),
                (this.frustumConstants = [0, 0, 0, 0, 0, 0]);
        }
        perspective({
            near: t = this.near,
            CR: e = this.CR,
            fov: s = this.fov,
            aspect: i = this.aspect
        } = {}) {
            return (
                (function (t, e, s, i, n) {
                    const a = 1 / Math.tan(e / 2),
                        r = 1 / (i - n);
                    (t[0] = a / s),
                        (t[1] = 0),
                        (t[2] = 0),
                        (t[3] = 0),
                        (t[4] = 0),
                        (t[5] = a),
                        (t[6] = 0),
                        (t[7] = 0),
                        (t[8] = 0),
                        (t[9] = 0),
                        (t[10] = (n + i) * r),
                        (t[11] = -1),
                        (t[12] = 0),
                        (t[13] = 0),
                        (t[14] = 2 * n * i * r),
                        (t[15] = 0);
                })(this.Ux, s * (Math.PI / 180), i, t, e),
                (this.type = "perspective"),
                this
            );
        }
        orthographic({
            near: t = this.near,
            CR: e = this.CR,
            left: s = -1,
            right: i = 1,
            bottom: n = -1,
            top: a = 1
        } = {}) {
            return (
                (function (t, e, s, i, n, a, r) {
                    const o = 1 / (e - s),
                        l = 1 / (i - n),
                        c = 1 / (a - r);
                    (t[0] = -2 * o),
                        (t[1] = 0),
                        (t[2] = 0),
                        (t[3] = 0),
                        (t[4] = 0),
                        (t[5] = -2 * l),
                        (t[6] = 0),
                        (t[7] = 0),
                        (t[8] = 0),
                        (t[9] = 0),
                        (t[10] = 2 * c),
                        (t[11] = 0),
                        (t[12] = (e + s) * o),
                        (t[13] = (n + i) * l),
                        (t[14] = (r + a) * c),
                        (t[15] = 1);
                })(this.Ux, s, i, n, a, t, e),
                (this.type = "orthographic"),
                this
            );
        }
        updateMatrixWorld() {
            return (
                super.updateMatrixWorld(),
                Gi(this.QA, this.VN),
                Vi(this.kX, this.Ux, this.QA),
                Yi(this.worldPosition, this.VN),
                this
            );
        }
        lookAt(t, e) {
            return super.lookAt(t, !0, e), this;
        }
        project(t) {
            return Ii(t, t, this.QA), Ii(t, t, this.Ux), this;
        }
        unproject(t) {
            return Ii(t, t, Gi(mn, this.Ux)), Ii(t, t, this.VN), this;
        }
        updateFrustum() {
            const t = this.kX;
            xi(this.frustum[0], t[3] - t[0], t[7] - t[4], t[11] - t[8]),
                xi(this.frustum[1], t[3] + t[0], t[7] + t[4], t[11] + t[8]),
                xi(this.frustum[2], t[3] + t[1], t[7] + t[5], t[11] + t[9]),
                xi(this.frustum[3], t[3] - t[1], t[7] - t[5], t[11] - t[9]),
                xi(this.frustum[4], t[3] - t[2], t[7] - t[6], t[11] - t[10]),
                xi(this.frustum[5], t[3] + t[2], t[7] + t[6], t[11] + t[10]),
                (this.frustumConstants[0] = t[15] - t[12]),
                (this.frustumConstants[1] = t[15] + t[12]),
                (this.frustumConstants[2] = t[15] + t[13]),
                (this.frustumConstants[3] = t[15] - t[13]),
                (this.frustumConstants[4] = t[15] - t[14]),
                (this.frustumConstants[5] = t[15] + t[14]);
            for (let t = 0; t < 6; t++) {
                const e = this.frustum[t],
                    s = 1 / bi(e);
                Mi(e, e, s), (this.frustumConstants[t] *= s);
            }
        }
        frustumIntersectsMesh(t) {
            t.geometry.bounds.radius === 1 / 0 &&
                t.geometry.computeBoundingSphere(),
                wi(pn, t.geometry.bounds.center),
                Ii(pn, pn, t.VN);
            const e =
                t.geometry.bounds.radius *
                (function (t) {
                    const e = t[0],
                        s = t[1],
                        i = t[2],
                        n = t[4],
                        a = t[5],
                        r = t[6],
                        o = t[8],
                        l = t[9],
                        c = t[10],
                        h = e * e + s * s + i * i,
                        d = n * n + a * a + r * r,
                        u = o * o + l * l + c * c;
                    return Math.sqrt(Math.max(h, d, u));
                })(t.VN);
            return this.frustumIntersectsSphere(pn, e);
        }
        frustumIntersectsSphere(t, e) {
            for (let s = 0; s < 6; s++) {
                if (
                    Pi(wi(fn, this.frustum[s]), t) + this.frustumConstants[s] <
                    -e
                )
                    return !1;
            }
            return !0;
        }
    }
    let vn = 0;
    class yn extends un {
        constructor(
            t,
            {
                geometry: e,
                program: s,
                mode: i = t.TRIANGLES,
                frustumCulled: n = !0,
                renderOrder: a = 0,
                shadowProgram: r = null,
                throwShadow: o = new Set(),
                receiveShadow: l = new Set(),
                matrixAutoUpdate: c = !0
            } = {}
        ) {
            super(t),
                (this.gl = t),
                (this.id = vn++),
                (this.geometry = e),
                (this.program = s),
                (this.shadowProgram = r),
                (this.throwShadow = o),
                (this.receiveShadow = l),
                (this.mode = i),
                (this.matrixAutoUpdate = c),
                (this.frustumCulled = n),
                (this.renderOrder = a),
                (this.Cq = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);
        }
        draw({ camera: t, shadowTarget: e = null } = {}) {
            if (!this.program.active) return;
            this.onBeforeRender &&
                this.onBeforeRender({ mesh: this, camera: t, shadowTarget: e });
            const s = e ? this.shadowProgram : this.program;
            if (e && !this.throwShadow.has(e)) return;
            t &&
                s &&
                (s.uniforms.Ux && (s.uniforms.Ux.value = t.Ux),
                s.uniforms.AQ && (s.uniforms.AQ.value = t.worldPosition),
                s.uniforms.QA && (s.uniforms.QA.value = t.QA),
                s.uniforms.kX && (s.uniforms.kX.value = t.kX),
                s.uniforms.Cq &&
                    (Vi(this.Cq, t.QA, this.VN),
                    (s.uniforms.Cq.value = this.Cq)),
                s.uniforms.zd && (s.uniforms.zd.value = this.matrix)),
                s.autoUniforms.forEach(t => {
                    s.uniforms[t].value = this[t];
                });
            const i =
                    s.cullFace &&
                    (function (t) {
                        const e = t[0],
                            s = t[1],
                            i = t[2],
                            n = t[3],
                            a = t[4],
                            r = t[5],
                            o = t[6],
                            l = t[7],
                            c = t[8],
                            h = t[9],
                            d = t[10],
                            u = t[11],
                            m = t[12],
                            p = t[13],
                            f = t[14],
                            g = t[15];
                        return (
                            (e * r - s * a) * (d * g - u * f) -
                            (e * o - i * a) * (h * g - u * p) +
                            (e * l - n * a) * (h * f - d * p) +
                            (s * o - i * r) * (c * g - u * m) -
                            (s * l - n * r) * (c * f - d * m) +
                            (i * l - n * o) * (c * p - h * m)
                        );
                    })(this.VN) < 0,
                n = this.gl.renderer.currentProgram === s.id,
                a = this.gl.renderer.currentGeometry === this.geometry.id;
            s.use({ programActive: n, flipFaces: i, shadowTarget: e }),
                this.geometry.draw({
                    mode: this.mode,
                    program: s,
                    geometryBound: a
                }),
                this.onAfterRender &&
                    this.onAfterRender({ mesh: this, camera: t });
        }
    }
    const bn = [],
        wn = () => {
            if (bn.length > 0) {
                return bn.pop();
            }
            return new un();
        },
        xn = t => {
            t.reset(),
                bn.indexOf(t) < 0
                    ? bn.push(t)
                    : console.error(
                          "tried returning transform that is already known"
                      );
        },
        kn = [0, 0, 0];
    class $n extends yn {
        constructor(
            t,
            {
                geometryAttributes: e,
                program: s,
                mode: i = t.TRIANGLES,
                renderOrder: n = 0,
                shadowProgram: a = null,
                throwShadow: r = new Set(),
                receiveShadow: o = new Set(),
                dynamic: l = !1,
                frustum: c
            } = {}
        ) {
            super(t, {
                program: s,
                mode: i,
                renderOrder: n,
                shadowProgram: a,
                throwShadow: r,
                receiveShadow: o,
                geometry: new Li(t),
                frustumCulled: !1,
                matrixAutoUpdate: !1
            }),
                (this.visible = !1),
                (this.individualFrustums = c),
                (this.Eo = !1),
                (this.dynamicThrowShadwos = !1),
                (this.dynamic = l),
                (this.needsUpdate = !1),
                (this.lastUpdateCamPos = [0, 0, 0]),
                (this.instances = []);
        }
        create() {
            const t = wn();
            return (
                (t.matrixAutoUpdate = this.dynamic),
                (t.geometry = this.geometry),
                (t.data.VN = t.VN),
                (t.data.multi = this),
                this.instances.indexOf(t) < 0
                    ? this.instances.push(t)
                    : console.log("error, instance already present"),
                (this.needsUpdate = !0),
                t
            );
        }
        remove(t) {
            this.instances.splice(this.instances.indexOf(t), 1),
                (this.needsUpdate = !0),
                xn(t);
        }
        rebuild(t) {
            if (
                !this.needsUpdate &&
                Ti(this.lastUpdateCamPos, t.worldPosition) < 100
            )
                return;
            wi(this.lastUpdateCamPos, t.worldPosition),
                (this.needsUpdate = this.dynamic);
            const e = this.instances.filter(
                e =>
                    !!e.visible &&
                    (Yi(kn, e.VN),
                    (e.data.distToCam = Ti(kn, t.worldPosition)),
                    e.data.distToCam < (t.CR + 10) ** 2 &&
                        (!this.dynamic ||
                            !this.individualFrustums ||
                            t.frustumIntersectsMesh(e)))
            );
            (this.drawCount = e.length),
                this.geometry.setInstancedCount(this.drawCount),
                0 != this.drawCount &&
                    this.instanced.forEach(t => {
                        t.data =
                            t.data.byteLength >= t.size * this.drawCount * 4
                                ? t.data
                                : new Float32Array(
                                      t.size * (this.drawCount + 5)
                                  );
                        for (let s = 0; s < this.drawCount; ++s)
                            t.size > 1
                                ? t.data.set(e[s].data[t.name], s * t.size)
                                : (t.data[s] = e[s].data[t.name]);
                        this.geometry.updateAttribute(t);
                    });
        }
        draw({
            camera: t,
            shadowTarget: e = null,
            sceneCamera: s,
            update: i
        } = {}) {
            this.visible &&
                (((i && this.dynamicThrowShadwos) ||
                    (!this.dynamicThrowShadwos && !e)) &&
                    this.rebuild(s || t),
                this.drawCount > 0 &&
                    super.draw({ camera: t, shadowTarget: e }));
        }
        setAttributes(t) {
            const e = [],
                s = { ...t },
                i = { ...this.program.instanced, VN: { size: 16 } };
            for (const t in i)
                (s[t] = {
                    name: t,
                    instanced: !0,
                    bufferMode: this.dynamic ? 35048 : 35044,
                    size: i[t].size,
                    data: new Float32Array(i[t].size)
                }),
                    e.push(s[t]);
            this.geometry.addAttributes(s), (this.instanced = e);
        }
    }
    const Sn = new Uint8Array(4);
    function Mn(t) {
        return 0 == (t & (t - 1));
    }
    let En = 1;
    class Cn {
        constructor(
            t,
            {
                image: e,
                target: s = t.TEXTURE_2D,
                type: i = t.UNSIGNED_BYTE,
                format: n = t.RGBA,
                internalFormat: a = n,
                wrapS: r = t.CLAMP_TO_EDGE,
                wrapT: o = t.CLAMP_TO_EDGE,
                generateMipmaps: l = !0,
                minFilter: c = l ? t.NEAREST_MIPMAP_LINEAR : t.LINEAR,
                magFilter: h = t.LINEAR,
                premultiplyAlpha: d = !1,
                flipY: u = !0,
                level: m = 0,
                width: p,
                height: f = p,
                compareMode: g = t.NONE,
                compareFunc: v = t.LEQUAL
            } = {}
        ) {
            (this.gl = t),
                (this.id = En++),
                (this.image = e),
                (this.target = s),
                (this.type = i),
                (this.format = n),
                (this.internalFormat = a),
                (this.minFilter = c),
                (this.magFilter = h),
                (this.wrapS = r),
                (this.wrapT = o),
                (this.generateMipmaps = l),
                (this.premultiplyAlpha = d),
                (this.flipY = u),
                (this.level = m),
                (this.width = p),
                (this.height = f),
                (this.compareMode = g),
                (this.texture = this.gl.createTexture()),
                (this.store = { image: null }),
                (this.glState = this.gl.renderer.state),
                (this.state = {}),
                (this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR),
                (this.state.magFilter = this.gl.LINEAR),
                (this.state.wrapS = this.gl.REPEAT),
                (this.state.wrapT = this.gl.REPEAT),
                (this.state.premultiplyAlpha = !1);
        }
        bind() {
            this.glState.textureUnits[this.glState.activeTextureUnit] !==
                this.id &&
                (this.gl.bindTexture(this.target, this.texture),
                (this.glState.textureUnits[
                    this.glState.activeTextureUnit
                ] = this.id));
        }
        update(t = 0) {
            const e = !(this.image === this.store.image && !this.needsUpdate);
            (e || this.glState.textureUnits[t] !== this.id) &&
                (this.gl.renderer.activeTexture(t), this.bind()),
                e &&
                    ((this.needsUpdate = !1),
                    this.flipY !== this.glState.flipY &&
                        (this.gl.pixelStorei(
                            this.gl.UNPACK_FLIP_Y_WEBGL,
                            this.flipY
                        ),
                        (this.glState.flipY = this.flipY)),
                    this.premultiplyAlpha !== this.state.premultiplyAlpha &&
                        (this.gl.pixelStorei(
                            this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                            this.premultiplyAlpha
                        ),
                        (this.state.premultiplyAlpha = this.premultiplyAlpha)),
                    this.minFilter !== this.state.minFilter &&
                        (this.gl.texParameteri(
                            this.target,
                            this.gl.TEXTURE_MIN_FILTER,
                            this.minFilter
                        ),
                        (this.state.minFilter = this.minFilter)),
                    this.magFilter !== this.state.magFilter &&
                        (this.gl.texParameteri(
                            this.target,
                            this.gl.TEXTURE_MAG_FILTER,
                            this.magFilter
                        ),
                        (this.state.magFilter = this.magFilter)),
                    this.wrapS !== this.state.wrapS &&
                        (this.gl.texParameteri(
                            this.target,
                            this.gl.TEXTURE_WRAP_S,
                            this.wrapS
                        ),
                        (this.state.wrapS = this.wrapS)),
                    this.wrapT !== this.state.wrapT &&
                        (this.gl.texParameteri(
                            this.target,
                            this.gl.TEXTURE_WRAP_T,
                            this.wrapT
                        ),
                        (this.state.wrapT = this.wrapT)),
                    this.compareMode !== this.state.compareMode &&
                        (this.gl.texParameteri(
                            this.target,
                            this.gl.TEXTURE_COMPARE_MODE,
                            this.compareMode
                        ),
                        (this.state.compareMode = this.compareMode)),
                    this.compareFunc !== this.state.compareFunc &&
                        (this.gl.texParameteri(
                            this.target,
                            this.gl.TEXTURE_COMPARE_FUNC,
                            this.compareFunc
                        ),
                        (this.state.compareFunc = this.compareFunc)),
                    this.image
                        ? (this.image.width &&
                              ((this.width = this.image.width),
                              (this.height = this.image.height)),
                          this.gl.renderer.isWebgl2 ||
                          ArrayBuffer.isView(this.image)
                              ? this.gl.texImage2D(
                                    this.target,
                                    this.level,
                                    this.internalFormat,
                                    this.width,
                                    this.height,
                                    0,
                                    this.format,
                                    this.type,
                                    this.image
                                )
                              : this.gl.texImage2D(
                                    this.target,
                                    this.level,
                                    this.internalFormat,
                                    this.format,
                                    this.type,
                                    this.image
                                ),
                          this.generateMipmaps &&
                              (this.gl.renderer.isWebgl2 ||
                              (Mn(this.image.width) && Mn(this.image.height))
                                  ? this.gl.generateMipmap(this.target)
                                  : ((this.generateMipmaps = !1),
                                    (this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE),
                                    (this.minFilter = this.gl.LINEAR))))
                        : this.width
                        ? this.gl.texImage2D(
                              this.target,
                              this.level,
                              this.internalFormat,
                              this.width,
                              this.height,
                              0,
                              this.format,
                              this.type,
                              null
                          )
                        : this.gl.texImage2D(
                              this.target,
                              0,
                              this.gl.RGBA,
                              1,
                              1,
                              0,
                              this.gl.RGBA,
                              this.gl.UNSIGNED_BYTE,
                              Sn
                          ),
                    (this.store.image = this.image),
                    this.onUpdate && this.onUpdate());
        }
    }
    class Tn {
        constructor(
            t,
            {
                width: e = t.canvas.width,
                height: s = t.canvas.height,
                target: i = t.FRAMEBUFFER,
                color: n = 1,
                Jw: a = !0,
                stencil: r = !1,
                depthTexture: o = !1,
                depthCompareMode: l = t.NONE,
                wrapS: c = t.CLAMP_TO_EDGE,
                wrapT: h = t.CLAMP_TO_EDGE,
                minFilter: d = t.LINEAR,
                magFilter: u = t.LINEAR
            } = {}
        ) {
            (this.gl = t),
                (this.width = e),
                (this.height = s),
                (this.buffer = this.gl.createFramebuffer()),
                (this.target = i),
                this.gl.bindFramebuffer(this.target, this.buffer),
                (this.textures = []);
            for (let i = 0; i < n; i++)
                this.textures.push(
                    new Cn(t, {
                        width: e,
                        height: s,
                        wrapS: c,
                        wrapT: h,
                        minFilter: d,
                        magFilter: u,
                        flipY: !1,
                        generateMipmaps: !1
                    })
                ),
                    this.textures[i].update(),
                    this.gl.framebufferTexture2D(
                        this.target,
                        this.gl.COLOR_ATTACHMENT0 + i,
                        this.gl.TEXTURE_2D,
                        this.textures[i].texture,
                        0
                    );
            if (
                ((this.texture = this.textures[0]),
                o &&
                    (this.gl.renderer.isWebgl2 ||
                        this.gl.renderer.getExtension("WEBGL_depth_texture")))
            ) {
                const i =
                    l == this.gl.COMPARE_REF_TO_TEXTURE
                        ? this.gl.LINEAR
                        : this.gl.NEAREST;
                (this.depthTexture = new Cn(t, {
                    width: e,
                    height: s,
                    wrapS: c,
                    wrapT: h,
                    minFilter: i,
                    magFilter: i,
                    flipY: !1,
                    format: this.gl.DEPTH_COMPONENT,
                    internalFormat: t.renderer.isWebgl2
                        ? this.gl.DEPTH_COMPONENT24
                        : this.gl.DEPTH_COMPONENT,
                    type: this.gl.UNSIGNED_INT,
                    generateMipmaps: !1,
                    compareMode: l
                })),
                    this.depthTexture.update(),
                    this.gl.framebufferTexture2D(
                        this.target,
                        this.gl.DEPTH_ATTACHMENT,
                        this.gl.TEXTURE_2D,
                        this.depthTexture.texture,
                        0
                    );
            } else
                a &&
                    !r &&
                    ((this.depthBuffer = this.gl.createRenderbuffer()),
                    this.gl.bindRenderbuffer(
                        this.gl.RENDERBUFFER,
                        this.depthBuffer
                    ),
                    this.gl.renderbufferStorage(
                        this.gl.RENDERBUFFER,
                        this.gl.DEPTH_COMPONENT16,
                        e,
                        s
                    ),
                    this.gl.framebufferRenderbuffer(
                        this.target,
                        this.gl.DEPTH_ATTACHMENT,
                        this.gl.RENDERBUFFER,
                        this.depthBuffer
                    )),
                    r &&
                        !a &&
                        ((this.stencilBuffer = this.gl.createRenderbuffer()),
                        this.gl.bindRenderbuffer(
                            this.gl.RENDERBUFFER,
                            this.stencilBuffer
                        ),
                        this.gl.renderbufferStorage(
                            this.gl.RENDERBUFFER,
                            this.gl.STENCIL_INDEX8,
                            e,
                            s
                        ),
                        this.gl.framebufferRenderbuffer(
                            this.target,
                            this.gl.STENCIL_ATTACHMENT,
                            this.gl.RENDERBUFFER,
                            this.stencilBuffer
                        )),
                    a &&
                        r &&
                        ((this.depthStencilBuffer = this.gl.createRenderbuffer()),
                        this.gl.bindRenderbuffer(
                            this.gl.RENDERBUFFER,
                            this.depthStencilBuffer
                        ),
                        this.gl.renderbufferStorage(
                            this.gl.RENDERBUFFER,
                            this.gl.DEPTH_STENCIL,
                            e,
                            s
                        ),
                        this.gl.framebufferRenderbuffer(
                            this.target,
                            this.gl.DEPTH_STENCIL_ATTACHMENT,
                            this.gl.RENDERBUFFER,
                            this.depthStencilBuffer
                        ));
            this.gl.bindFramebuffer(this.target, null);
        }
    }
    function _n(t, e) {
        return (t[0] = e[0]), (t[1] = e[1]), t;
    }
    function Pn(t, e, s) {
        return (t[0] = e), (t[1] = s), t;
    }
    function Un(t, e, s) {
        return (t[0] = e[0] - s[0]), (t[1] = e[1] - s[1]), t;
    }
    function In(t, e, s) {
        return (t[0] = e[0] * s), (t[1] = e[1] * s), t;
    }
    function zn(t, e, s, i) {
        return (t[0] = e[0] + s[0] * i), (t[1] = e[1] + s[1] * i), t;
    }
    function An(t) {
        const e = t[0],
            s = t[1];
        return Math.sqrt(e * e + s * s);
    }
    function Dn(t, e) {
        const s = e[0],
            i = e[1];
        let n = s * s + i * i;
        return (
            n > 0 && (n = 1 / Math.sqrt(n)),
            (t[0] = e[0] * n),
            (t[1] = e[1] * n),
            t
        );
    }
    const Rn =
            "#version 300 es\nin vec2 Lz;\nin vec3 position;\nout vec2 Jl;\nvoid main() {\n    Jl = Lz;\n    gl_Position = vec4(position, 1.0);\n}",
        Bn =
            "#version 300 es\nprecision highp float;\nuniform sampler2D JE;\nin vec2 Jl;\nout vec4 CN;\nvoid main() {\n    CN = texture2D(JE, Jl);\n}";
    let Fn, Nn, Ln, On, qn, Hn, Wn;
    const Zn = [0, 1, 0],
        jn = [0, 0, 0],
        Gn = [0, 0, 0],
        Vn = [0, 0, 0],
        Yn = [0, 0, 0],
        Jn = [0, 0, 0],
        Xn = [0, 0, 0],
        Qn = [0, 0, 0],
        Kn = [0, 0, 0, 0],
        ta = [0, 0],
        ea = [0, 0],
        sa = new cn(),
        ia = (new dn(), 256 / (2 * Math.PI)),
        na = (t, e, s) => Math.min(Math.max(t, e), s),
        aa = (t, e) => ((t % e) + e) % e,
        ra = (t, e, s) => {
            const i = na((s - t) / (e - t), 0, 1);
            return i * i * (3 - 2 * i);
        },
        oa = (t, e) => {
            const s = [
                ((t >> 16) & 255) / 255,
                ((t >> 8) & 255) / 255,
                (255 & t) / 255
            ];
            return void 0 !== e && s.push(e), s;
        },
        la = {
            linear: t => t,
            easeInQuad: t => t * t,
            easeInQuart: t => t ** 4,
            easeOutExpo: t => 1 - Math.pow(2, -10 * t),
            easeOutFlick: t => 1 - Math.pow(1 - t, 10),
            easeOutQuad: t => t * (2 - t),
            sin: t => Math.sin(3.14 * t),
            sinReverse: t => 1 - Math.sin(3.14 * t),
            easeInOutCubic: t =>
                t < 0.5
                    ? 4 * t * t * t
                    : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,
            easeInOutQuint: t =>
                t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t,
            easeBounce: t =>
                t < 1 / 2.75
                    ? 7.5625 * t * t
                    : t < 2 / 2.75
                    ? 7.5625 * (t -= 1.5 / 2.75) * t + 0.75
                    : t < 2.5 / 2.75
                    ? 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375
                    : 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375,
            anticipate: t =>
                -1 / (1 + Math.exp(50 * (t - 0.5))) +
                1.4 * Math.sin(6.2 * (t - 0.5)) * (1 - 0.5 * t) +
                1
        },
        ca = (t, e, s, i) => (
            Si(Vn, i, s), Si(Gn, e, s), Ui(Vn, Vn, Gn), _i(t, Vn)
        ),
        ha = 2 * Math.PI,
        da = 3 * Math.PI,
        ua = t => ((t % ha) + ha) % ha,
        ma = t => {
            let e = Math.atan2(t[0], t[1]);
            return e < 0 && (e += 2 * Math.PI), e;
        },
        pa = t => {
            let e = Math.atan2(t[0], t[2]);
            return e < 0 && (e += 2 * Math.PI), e;
        },
        fa = (t, e) => ((e - t + da) % ha) - Math.PI,
        ga = (t, e, s, i) => {
            Mi(Gn, e, 1 - i), Mi(Vn, s, i), $i(t, Gn, Vn);
        },
        va = (t, e) => ((t[0] = e[0]), (t[1] = e[2]), t),
        ya = (t, e, s) => ((t[0] = e[0] + s[0]), (t[2] = e[2] + s[1]), t);
    function ba(t) {
        if (t > La)
            throw new RangeError(
                'The value "' + t + '" is invalid for option "size"'
            );
        const e = new Uint8Array(t);
        return (e.__proto__ = wa.prototype), e;
    }
    function wa(t, e, s) {
        if ("number" == typeof t) {
            if ("string" == typeof e)
                throw new TypeError(
                    'The "string" argument must be of type string. Received type number'
                );
            return ka(t);
        }
        return xa(t, e, s);
    }
    function xa(t, e, s) {
        if ("string" == typeof t)
            return (function (t, e) {
                ("string" == typeof e && "" !== e) || (e = "utf8");
                if (!wa.isEncoding(e))
                    throw new TypeError("Unknown encoding: " + e);
                const s = 0 | Ma(t, e);
                let i = ba(s);
                const n = i.write(t, e);
                n !== s && (i = i.slice(0, n));
                return i;
            })(t, e);
        if (ArrayBuffer.isView(t)) return $a(t);
        if (null == t)
            throw TypeError(
                "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                    typeof t
            );
        if (Fa(t, ArrayBuffer) || (t && Fa(t.buffer, ArrayBuffer)))
            return (function (t, e, s) {
                if (e < 0 || t.byteLength < e)
                    throw new RangeError(
                        '"offset" is outside of buffer bounds'
                    );
                if (t.byteLength < e + (s || 0))
                    throw new RangeError(
                        '"length" is outside of buffer bounds'
                    );
                let i;
                i =
                    void 0 === e && void 0 === s
                        ? new Uint8Array(t)
                        : void 0 === s
                        ? new Uint8Array(t, e)
                        : new Uint8Array(t, e, s);
                return (i.__proto__ = wa.prototype), i;
            })(t, e, s);
        if ("number" == typeof t)
            throw new TypeError(
                'The "value" argument must not be of type number. Received type number'
            );
        const i = t.valueOf && t.valueOf();
        if (null != i && i !== t) return wa.from(i, e, s);
        const n = (function (t) {
            if (wa.isBuffer(t)) {
                const e = 0 | Sa(t.length),
                    s = ba(e);
                return 0 === s.length ? s : (t.copy(s, 0, 0, e), s);
            }
            if (void 0 !== t.length)
                return "number" != typeof t.length ||
                    (function (t) {
                        return t != t;
                    })(t.length)
                    ? ba(0)
                    : $a(t);
            if ("Buffer" === t.type && Array.isArray(t.data)) return $a(t.data);
        })(t);
        if (n) return n;
        if (
            "undefined" != typeof Symbol &&
            null != Symbol.toPrimitive &&
            "function" == typeof t[Symbol.toPrimitive]
        )
            return wa.from(t[Symbol.toPrimitive]("string"), e, s);
        throw new TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                typeof t
        );
    }
    function ka(t) {
        return ba(t < 0 ? 0 : 0 | Sa(t));
    }
    function $a(t) {
        const e = t.length < 0 ? 0 : 0 | Sa(t.length),
            s = ba(e);
        for (let i = 0; i < e; i += 1) s[i] = 255 & t[i];
        return s;
    }
    function Sa(t) {
        return 0 | t;
    }
    function Ma(t, e) {
        if (wa.isBuffer(t)) return t.length;
        if (ArrayBuffer.isView(t) || Fa(t, ArrayBuffer)) return t.byteLength;
        if ("string" != typeof t)
            throw new TypeError(
                'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                    typeof t
            );
        const s = t.length,
            i = arguments.length > 2 && !0 === arguments[2];
        if (!i && 0 === s) return 0;
        let n = !1;
        for (;;)
            switch (e) {
                case "ascii":
                    return s;
                case "utf8":
                case "utf-8":
                    return Ra(t).length;
                case "hex":
                    return s >>> 1;
                default:
                    if (n) return i ? -1 : Ra(t).length;
                    (e = ("" + e).toLowerCase()), (n = !0);
            }
    }
    function Ea(t, e, s) {
        let i = !1;
        if (((void 0 === e || e < 0) && (e = 0), e > this.length)) return "";
        if (((void 0 === s || s > this.length) && (s = this.length), s <= 0))
            return "";
        if ((s >>>= 0) <= (e >>>= 0)) return "";
        for (t || (t = "utf8"); ; )
            switch (t) {
                case "hex":
                    return Ia(this, e, s);
                case "utf8":
                case "utf-8":
                    return _a(this, e, s);
                case "ascii":
                    return Ua(this, e, s);
                default:
                    if (i) throw new TypeError("Unknown encoding: " + t);
                    (t = (t + "").toLowerCase()), (i = !0);
            }
    }
    function Ca(t, e, s, i) {
        return Ba(Ra(e, t.length - s), t, s, i);
    }
    function Ta(t, e, s, i) {
        return Ba(
            (function (t) {
                const e = [];
                for (let s = 0; s < t.length; ++s)
                    e.push(255 & t.charCodeAt(s));
                return e;
            })(e),
            t,
            s,
            i
        );
    }
    function _a(t, e, s) {
        s = Math.min(t.length, s);
        const i = [];
        let n = e;
        for (; n < s; ) {
            const e = t[n];
            let a = null,
                r = e > 239 ? 4 : e > 223 ? 3 : e > 191 ? 2 : 1;
            if (n + r <= s) {
                let s, i, o, l;
                switch (r) {
                    case 1:
                        e < 128 && (a = e);
                        break;
                    case 2:
                        128 == (192 & (s = t[n + 1])) &&
                            (l = ((31 & e) << 6) | (63 & s)) > 127 &&
                            (a = l);
                        break;
                    case 3:
                        (s = t[n + 1]),
                            (i = t[n + 2]),
                            128 == (192 & s) &&
                                128 == (192 & i) &&
                                (l =
                                    ((15 & e) << 12) |
                                    ((63 & s) << 6) |
                                    (63 & i)) > 2047 &&
                                (l < 55296 || l > 57343) &&
                                (a = l);
                        break;
                    case 4:
                        (s = t[n + 1]),
                            (i = t[n + 2]),
                            (o = t[n + 3]),
                            128 == (192 & s) &&
                                128 == (192 & i) &&
                                128 == (192 & o) &&
                                (l =
                                    ((15 & e) << 18) |
                                    ((63 & s) << 12) |
                                    ((63 & i) << 6) |
                                    (63 & o)) > 65535 &&
                                l < 1114112 &&
                                (a = l);
                }
            }
            null === a
                ? ((a = 65533), (r = 1))
                : a > 65535 &&
                  ((a -= 65536),
                  i.push(((a >>> 10) & 1023) | 55296),
                  (a = 56320 | (1023 & a))),
                i.push(a),
                (n += r);
        }
        return (function (t) {
            const e = t.length;
            if (e <= Pa) return String.fromCharCode.apply(String, t);
            let s = "",
                i = 0;
            for (; i < e; )
                s += String.fromCharCode.apply(String, t.slice(i, (i += Pa)));
            return s;
        })(i);
    }
    "undefined" != typeof Symbol &&
        null != Symbol.species &&
        wa[Symbol.species] === wa &&
        Object.defineProperty(wa, Symbol.species, {
            value: null,
            configurable: !0,
            enumerable: !1,
            writable: !1
        }),
        (wa.from = function (t, e, s) {
            return xa(t, e, s);
        }),
        (wa.prototype.__proto__ = Uint8Array.prototype),
        (wa.__proto__ = Uint8Array),
        (wa.allocUnsafe = function (t) {
            return ka(t);
        }),
        (wa.isBuffer = function (t) {
            return null != t && !0 === t._isBuffer && t !== wa.prototype;
        }),
        (wa.isEncoding = function (t) {
            switch (String(t).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                    return !0;
                default:
                    return !1;
            }
        }),
        (wa.byteLength = Ma),
        (wa.prototype._isBuffer = !0),
        (wa.prototype.toString = function () {
            const t = this.length;
            return 0 === t
                ? ""
                : 0 === arguments.length
                ? _a(this, 0, t)
                : Ea.apply(this, arguments);
        }),
        (wa.prototype.write = function (t, e, s, i) {
            if (void 0 === e) (i = "utf8"), (s = this.length), (e = 0);
            else if (void 0 === s && "string" == typeof e)
                (i = e), (s = this.length), (e = 0);
            else {
                if (!isFinite(e))
                    throw new Error(
                        "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                    );
                (e >>>= 0),
                    isFinite(s)
                        ? ((s >>>= 0), void 0 === i && (i = "utf8"))
                        : ((i = s), (s = void 0));
            }
            const n = this.length - e;
            if (
                ((void 0 === s || s > n) && (s = n),
                (t.length > 0 && (s < 0 || e < 0)) || e > this.length)
            )
                throw new RangeError("Attempt to write outside buffer bounds");
            i || (i = "utf8");
            let a = !1;
            for (;;)
                switch (i) {
                    case "hex":
                        return hexWrite(this, t, e, s);
                    case "utf8":
                    case "utf-8":
                        return Ca(this, t, e, s);
                    case "ascii":
                        return Ta(this, t, e, s);
                    default:
                        if (a) throw new TypeError("Unknown encoding: " + i);
                        (i = ("" + i).toLowerCase()), (a = !0);
                }
        }),
        (wa.prototype.toJSON = function () {
            return {
                type: "Buffer",
                data: Array.prototype.slice.call(this._arr || this, 0)
            };
        });
    const Pa = 4096;
    function Ua(t, e, s) {
        let i = "";
        s = Math.min(t.length, s);
        for (let n = e; n < s; ++n) i += String.fromCharCode(127 & t[n]);
        return i;
    }
    function Ia(t, e, s) {
        const i = t.length;
        (!e || e < 0) && (e = 0), (!s || s < 0 || s > i) && (s = i);
        let n = "";
        for (let i = e; i < s; ++i) n += Da(t[i]);
        return n;
    }
    function za(t, e, s) {
        if (t % 1 != 0 || t < 0) throw new RangeError("offset is not uint");
        if (t + e > s)
            throw new RangeError("Trying to access beyond buffer length");
    }
    function Aa(t, e, s, i, n, a) {
        if (!wa.isBuffer(t))
            throw new TypeError('"buffer" argument must be a Buffer instance');
        if (e > n || e < a)
            throw new RangeError('"value" argument is out of bounds');
        if (s + i > t.length) throw new RangeError("Index out of range");
    }
    function Da(t) {
        return t < 16 ? "0" + t.toString(16) : t.toString(16);
    }
    function Ra(t, e) {
        let s;
        e = e || 1 / 0;
        const i = t.length;
        let n = null;
        const a = [];
        for (let r = 0; r < i; ++r) {
            if ((s = t.charCodeAt(r)) > 55295 && s < 57344) {
                if (!n) {
                    if (s > 56319) {
                        (e -= 3) > -1 && a.push(239, 191, 189);
                        continue;
                    }
                    if (r + 1 === i) {
                        (e -= 3) > -1 && a.push(239, 191, 189);
                        continue;
                    }
                    n = s;
                    continue;
                }
                if (s < 56320) {
                    (e -= 3) > -1 && a.push(239, 191, 189), (n = s);
                    continue;
                }
                s = 65536 + (((n - 55296) << 10) | (s - 56320));
            } else n && (e -= 3) > -1 && a.push(239, 191, 189);
            if (((n = null), s < 128)) {
                if ((e -= 1) < 0) break;
                a.push(s);
            } else if (s < 2048) {
                if ((e -= 2) < 0) break;
                a.push((s >> 6) | 192, (63 & s) | 128);
            } else if (s < 65536) {
                if ((e -= 3) < 0) break;
                a.push((s >> 12) | 224, ((s >> 6) & 63) | 128, (63 & s) | 128);
            } else {
                if (!(s < 1114112)) throw new Error("Invalid code point");
                if ((e -= 4) < 0) break;
                a.push(
                    (s >> 18) | 240,
                    ((s >> 12) & 63) | 128,
                    ((s >> 6) & 63) | 128,
                    (63 & s) | 128
                );
            }
        }
        return a;
    }
    function Ba(t, e, s, i) {
        let n = 0;
        for (; n < i && !(n + s >= e.length || n >= t.length); ++n)
            e[n + s] = t[n];
        return n;
    }
    function Fa(t, e) {
        return (
            t instanceof e ||
            (null != t &&
                null != t.constructor &&
                null != t.constructor.name &&
                t.constructor.name === e.name)
        );
    }
    (wa.prototype.readUIntLE = function (t, e, s) {
        (t >>>= 0), (e >>>= 0), s || za(t, e, this.length);
        let i = this[t],
            n = 1,
            a = 0;
        for (; ++a < e && (n *= 256); ) i += this[t + a] * n;
        return i;
    }),
        (wa.prototype.readUIntBE = function (t, e, s) {
            (t >>>= 0), (e >>>= 0), s || za(t, e, this.length);
            let i = this[t + --e],
                n = 1;
            for (; e > 0 && (n *= 256); ) i += this[t + --e] * n;
            return i;
        }),
        (wa.prototype.readUInt8 = function (t, e) {
            return (t >>>= 0), e || za(t, 1, this.length), this[t];
        }),
        (wa.prototype.readUInt16LE = function (t, e) {
            return (
                (t >>>= 0),
                e || za(t, 2, this.length),
                this[t] | (this[t + 1] << 8)
            );
        }),
        (wa.prototype.readUInt16BE = function (t, e) {
            return (
                (t >>>= 0),
                e || za(t, 2, this.length),
                (this[t] << 8) | this[t + 1]
            );
        }),
        (wa.prototype.readUInt32LE = function (t, e) {
            return (
                (t >>>= 0),
                e || za(t, 4, this.length),
                (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
                    16777216 * this[t + 3]
            );
        }),
        (wa.prototype.readUInt32BE = function (t, e) {
            return (
                (t >>>= 0),
                e || za(t, 4, this.length),
                16777216 * this[t] +
                    ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
            );
        }),
        (wa.prototype.readIntLE = function (t, e, s) {
            (t >>>= 0), (e >>>= 0), s || za(t, e, this.length);
            let i = this[t],
                n = 1,
                a = 0;
            for (; ++a < e && (n *= 256); ) i += this[t + a] * n;
            return i >= (n *= 128) && (i -= Math.pow(2, 8 * e)), i;
        }),
        (wa.prototype.readIntBE = function (t, e, s) {
            (t >>>= 0), (e >>>= 0), s || za(t, e, this.length);
            let i = e,
                n = 1,
                a = this[t + --i];
            for (; i > 0 && (n *= 256); ) a += this[t + --i] * n;
            return a >= (n *= 128) && (a -= Math.pow(2, 8 * e)), a;
        }),
        (wa.prototype.readInt8 = function (t, e) {
            return (
                (t >>>= 0),
                e || za(t, 1, this.length),
                128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
            );
        }),
        (wa.prototype.readInt16LE = function (t, e) {
            (t >>>= 0), e || za(t, 2, this.length);
            const s = this[t] | (this[t + 1] << 8);
            return 32768 & s ? 4294901760 | s : s;
        }),
        (wa.prototype.readInt16BE = function (t, e) {
            (t >>>= 0), e || za(t, 2, this.length);
            const s = this[t + 1] | (this[t] << 8);
            return 32768 & s ? 4294901760 | s : s;
        }),
        (wa.prototype.readInt32LE = function (t, e) {
            return (
                (t >>>= 0),
                e || za(t, 4, this.length),
                this[t] |
                    (this[t + 1] << 8) |
                    (this[t + 2] << 16) |
                    (this[t + 3] << 24)
            );
        }),
        (wa.prototype.readInt32BE = function (t, e) {
            return (
                (t >>>= 0),
                e || za(t, 4, this.length),
                (this[t] << 24) |
                    (this[t + 1] << 16) |
                    (this[t + 2] << 8) |
                    this[t + 3]
            );
        }),
        (wa.prototype.writeUIntLE = function (t, e, s, i) {
            if (((t = +t), (e >>>= 0), (s >>>= 0), !i)) {
                Aa(this, t, e, s, Math.pow(2, 8 * s) - 1, 0);
            }
            let n = 1,
                a = 0;
            for (this[e] = 255 & t; ++a < s && (n *= 256); )
                this[e + a] = (t / n) & 255;
            return e + s;
        }),
        (wa.prototype.writeUIntBE = function (t, e, s, i) {
            if (((t = +t), (e >>>= 0), (s >>>= 0), !i)) {
                Aa(this, t, e, s, Math.pow(2, 8 * s) - 1, 0);
            }
            let n = s - 1,
                a = 1;
            for (this[e + n] = 255 & t; --n >= 0 && (a *= 256); )
                this[e + n] = (t / a) & 255;
            return e + s;
        }),
        (wa.prototype.writeUInt8 = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 1, 255, 0),
                (this[e] = 255 & t),
                e + 1
            );
        }),
        (wa.prototype.writeUInt16LE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 2, 65535, 0),
                (this[e] = 255 & t),
                (this[e + 1] = t >>> 8),
                e + 2
            );
        }),
        (wa.prototype.writeUInt16BE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 2, 65535, 0),
                (this[e] = t >>> 8),
                (this[e + 1] = 255 & t),
                e + 2
            );
        }),
        (wa.prototype.writeUInt32LE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 4, 4294967295, 0),
                (this[e + 3] = t >>> 24),
                (this[e + 2] = t >>> 16),
                (this[e + 1] = t >>> 8),
                (this[e] = 255 & t),
                e + 4
            );
        }),
        (wa.prototype.writeUInt32BE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 4, 4294967295, 0),
                (this[e] = t >>> 24),
                (this[e + 1] = t >>> 16),
                (this[e + 2] = t >>> 8),
                (this[e + 3] = 255 & t),
                e + 4
            );
        }),
        (wa.prototype.writeIntLE = function (t, e, s, i) {
            if (((t = +t), (e >>>= 0), !i)) {
                const i = Math.pow(2, 8 * s - 1);
                Aa(this, t, e, s, i - 1, -i);
            }
            let n = 0,
                a = 1,
                r = 0;
            for (this[e] = 255 & t; ++n < s && (a *= 256); )
                t < 0 && 0 === r && 0 !== this[e + n - 1] && (r = 1),
                    (this[e + n] = (((t / a) >> 0) - r) & 255);
            return e + s;
        }),
        (wa.prototype.writeIntBE = function (t, e, s, i) {
            if (((t = +t), (e >>>= 0), !i)) {
                const i = Math.pow(2, 8 * s - 1);
                Aa(this, t, e, s, i - 1, -i);
            }
            let n = s - 1,
                a = 1,
                r = 0;
            for (this[e + n] = 255 & t; --n >= 0 && (a *= 256); )
                t < 0 && 0 === r && 0 !== this[e + n + 1] && (r = 1),
                    (this[e + n] = (((t / a) >> 0) - r) & 255);
            return e + s;
        }),
        (wa.prototype.writeInt8 = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 1, 127, -128),
                t < 0 && (t = 255 + t + 1),
                (this[e] = 255 & t),
                e + 1
            );
        }),
        (wa.prototype.writeInt16LE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 2, 32767, -32768),
                (this[e] = 255 & t),
                (this[e + 1] = t >>> 8),
                e + 2
            );
        }),
        (wa.prototype.writeInt16BE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 2, 32767, -32768),
                (this[e] = t >>> 8),
                (this[e + 1] = 255 & t),
                e + 2
            );
        }),
        (wa.prototype.writeInt32LE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 4, 2147483647, -2147483648),
                (this[e] = 255 & t),
                (this[e + 1] = t >>> 8),
                (this[e + 2] = t >>> 16),
                (this[e + 3] = t >>> 24),
                e + 4
            );
        }),
        (wa.prototype.writeInt32BE = function (t, e, s) {
            return (
                (t = +t),
                (e >>>= 0),
                s || Aa(this, t, e, 4, 2147483647, -2147483648),
                t < 0 && (t = 4294967295 + t + 1),
                (this[e] = t >>> 24),
                (this[e + 1] = t >>> 16),
                (this[e + 2] = t >>> 8),
                (this[e + 3] = 255 & t),
                e + 4
            );
        }),
        (wa.prototype.copy = function (t, e, s, i) {
            if (!wa.isBuffer(t))
                throw new TypeError("argument should be a Buffer");
            if (
                (s || (s = 0),
                i || 0 === i || (i = this.length),
                e >= t.length && (e = t.length),
                e || (e = 0),
                i > 0 && i < s && (i = s),
                i === s)
            )
                return 0;
            if (0 === t.length || 0 === this.length) return 0;
            if (e < 0) throw new RangeError("targetStart out of bounds");
            if (s < 0 || s >= this.length)
                throw new RangeError("Index out of range");
            if (i < 0) throw new RangeError("sourceEnd out of bounds");
            i > this.length && (i = this.length),
                t.length - e < i - s && (i = t.length - e + s);
            const n = i - s;
            if (
                this === t &&
                "function" == typeof Uint8Array.prototype.copyWithin
            )
                this.copyWithin(e, s, i);
            else if (this === t && s < e && e < i)
                for (let i = n - 1; i >= 0; --i) t[i + e] = this[i + s];
            else Uint8Array.prototype.set.call(t, this.subarray(s, i), e);
            return n;
        });
    var Na = (wa = wa);
    const La = 2147483647;
    let Oa = 0;
    const qa = "utf8",
        Ha = function (t) {
            const e = Na.byteLength(t, qa);
            return Qa(e) + e;
        },
        Wa = function (t) {
            return Qa(t);
        },
        Za = function (t) {
            const e = t.length;
            return Qa(e) + e;
        };
    function ja(t, e) {
        for (; t > 127; ) (e[Oa++] = (127 & t) | 128), (t >>= 7);
        e[Oa++] = 127 & t;
    }
    function Ga(t) {
        let e,
            s = 0,
            i = 0;
        do {
            (s |= (127 & (e = t[Oa++])) << (7 * i)), i++;
        } while (128 & e);
        return s;
    }
    function Va(t, e) {
        const s = Na.byteLength(t || "", qa);
        ja(s, e), (Oa += e.write(t || "", Oa, s, qa));
    }
    function Ya(t) {
        const e = Ga(t),
            s = t.toString(qa, Oa, Oa + e);
        return (Oa += e), s;
    }
    function Ja(t, e) {
        const s = t.length;
        ja(s, e), t.copy(e, Oa), (Oa += s);
    }
    function Xa(t) {
        const e = Ga(t),
            s = Ka(e);
        return t.copy(s, 0, Oa, Oa + e), (Oa += e), s;
    }
    function Qa(t) {
        return t <= 0 ? 1 : Math.floor(Math.log(t) / Math.log(128)) + 1;
    }
    const Ka = function (t) {
            return Na.allocUnsafe(t);
        },
        tr = {
            clientPlayerInput: {
                decode: t => {
                    const e = {};
                    return (
                        (Oa = 0),
                        (e._header = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.jump = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.wU = t.readUInt32BE(Oa, !0)),
                        (Oa += 4),
                        (e.rot = t.readUInt16BE(Oa, !0)),
                        (Oa += 2),
                        (e.steer = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.tickId = t.readUInt32BE(Oa, !0)),
                        (Oa += 4),
                        e
                    );
                },
                encode: t => {
                    const e = t;
                    let s = 0;
                    (s += 1), (s += 1), (s += 4), (s += 2), (s += 1), (s += 4);
                    const i = Ka(13);
                    return (
                        (Oa = 0),
                        (Oa = i.writeUInt8(e._header, Oa, !0)),
                        (Oa = i.writeUInt8(e.jump, Oa, !0)),
                        (Oa = i.writeUInt32BE(e.wU, Oa, !0)),
                        (Oa = i.writeUInt16BE(e.rot, Oa, !0)),
                        (Oa = i.writeUInt8(e.steer, Oa, !0)),
                        (Oa = i.writeUInt32BE(e.tickId, Oa, !0)),
                        i
                    );
                }
            },
            clientPlayerChangeTarget: {
                decode: t => {
                    const e = {};
                    return (
                        (Oa = 0),
                        (e._header = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.target = t.readUInt16BE(Oa, !0)),
                        (Oa += 2),
                        e
                    );
                },
                encode: t => {
                    const e = t;
                    let s = 0;
                    (s += 1), (s += 2);
                    const i = Ka(3);
                    return (
                        (Oa = 0),
                        (Oa = i.writeUInt8(e._header, Oa, !0)),
                        (Oa = i.writeUInt16BE(e.target, Oa, !0)),
                        i
                    );
                }
            },
            clientPlayerSkill: {
                decode: t => {
                    const e = {};
                    (Oa = 0),
                        (e._header = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.id = t.readUInt16BE(Oa, !0)),
                        (Oa += 2);
                    const s = [];
                    e.info = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++)
                        (s[e] = t.readUInt32BE(Oa, !0)), (Oa += 4);
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.info;
                    let i = 0;
                    (i += 1), (i += 2), (i += Qa(s.length));
                    for (let t = 0; t < s.length; t++) i += 4;
                    const n = Ka(i);
                    (Oa = 0),
                        (Oa = n.writeUInt8(e._header, Oa, !0)),
                        (Oa = n.writeUInt16BE(e.id, Oa, !0)),
                        ja(s.length, n);
                    for (let t = 0; t < s.length; t++)
                        Oa = n.writeUInt32BE(s[t], Oa, !0);
                    return n;
                }
            },
            clientPlayerInteract: {
                decode: t => {
                    const e = {};
                    return (
                        (Oa = 0),
                        (e._header = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.id = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        e
                    );
                },
                encode: t => {
                    const e = t;
                    let s = 0;
                    (s += 1), (s += 1);
                    const i = Ka(2);
                    return (
                        (Oa = 0),
                        (Oa = i.writeUInt8(e._header, Oa, !0)),
                        (Oa = i.writeUInt8(e.id, Oa, !0)),
                        i
                    );
                }
            },
            clientCommand: {
                decode: t => {
                    const e = {};
                    return (
                        (Oa = 0),
                        (e._header = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.command = Ya(t)),
                        (e.string = Ya(t)),
                        e
                    );
                },
                encode: t => {
                    const e = t;
                    let s = 0;
                    (s += 1), (s += Ha(e.command)), (s += Ha(e.string));
                    const i = Ka(s);
                    return (
                        (Oa = 0),
                        (Oa = i.writeUInt8(e._header, Oa, !0)),
                        Va(e.command, i),
                        Va(e.string, i),
                        i
                    );
                }
            },
            serverOnClientConnect: {
                decode: t => {
                    const e = {};
                    return (
                        (Oa = 0),
                        (e._header = t.readUInt8(Oa, !0)),
                        (Oa += 1),
                        (e.playerId = t.readUInt16BE(Oa, !0)),
                        (Oa += 2),
                        (e.world = Ya(t)),
                        e
                    );
                },
                encode: t => {
                    const e = t;
                    let s = 0;
                    (s += 1), (s += 2), (s += Ha(e.world));
                    const i = Ka(s);
                    return (
                        (Oa = 0),
                        (Oa = i.writeUInt8(e._header, Oa, !0)),
                        (Oa = i.writeUInt16BE(e.playerId, Oa, !0)),
                        Va(e.world, i),
                        i
                    );
                }
            },
            serverEntityDelta: {
                decode: t => {
                    const e = {};
                    (Oa = 0), (e._header = t.readUInt8(Oa, !0)), (Oa += 1);
                    const s = [];
                    e.data = s;
                    const i = [];
                    s[0] = i;
                    const n = Ga(t);
                    for (let e = 0; e < n; e++) {
                        const s = [];
                        i[e] = s;
                        const n = Ga(t);
                        for (let e = 0; e < n; e++)
                            (s[e] = t.readUInt8(Oa, !0)), (Oa += 1);
                    }
                    const a = [];
                    s[1] = a;
                    const r = Ga(t);
                    for (let e = 0; e < r; e++) {
                        const s = [];
                        a[e] = s;
                        const i = Ga(t);
                        for (let e = 0; e < i; e++)
                            (s[e] = t.readUInt16BE(Oa, !0)), (Oa += 2);
                    }
                    const o = Ga(t);
                    for (let e = 2; e < o; e++) {
                        const i = [];
                        s[e] = i;
                        const n = Ga(t);
                        for (let e = 0; e < n; e++) {
                            const s = [];
                            i[e] = s;
                            const n = Ga(t);
                            for (let e = 0; e < n; e++)
                                (s[e] = t.readUInt32BE(Oa, !0)), (Oa += 4);
                        }
                    }
                    const l = [];
                    e.ids = l;
                    const c = Ga(t);
                    for (let e = 0; e < c; e++) {
                        const s = [];
                        l[e] = s;
                        const i = Ga(t);
                        for (let e = 0; e < i; e++)
                            (s[e] = t.readUInt16BE(Oa, !0)), (Oa += 2);
                    }
                    const h = [];
                    e.log = h;
                    const d = Ga(t);
                    for (let e = 0; e < d; e++) {
                        const s = {};
                        h[e] = s;
                        const i = [];
                        (s.data = i), (s.type = t.readUInt8(Oa, !0)), (Oa += 1);
                        const n = Ga(t);
                        for (let e = 0; e < n; e++) i[e] = Ga(t);
                    }
                    return (e.tickId = t.readUInt32BE(Oa, !0)), (Oa += 4), e;
                },
                encode: t => {
                    const e = t,
                        s = e.data,
                        i = s[0],
                        n = s[1],
                        a = e.ids,
                        r = e.log;
                    let o = 0;
                    (o += 1), (o += Qa(i.length));
                    for (let t = 0; t < i.length; t++) {
                        const e = i[t];
                        o += Qa(e.length);
                        for (let t = 0; t < e.length; t++) o += 1;
                    }
                    o += Qa(n.length);
                    for (let t = 0; t < n.length; t++) {
                        const e = n[t];
                        o += Qa(e.length);
                        for (let t = 0; t < e.length; t++) o += 2;
                    }
                    o += Qa(s.length);
                    for (let t = 2; t < s.length; t++) {
                        const e = s[t];
                        o += Qa(e.length);
                        for (let t = 0; t < e.length; t++) {
                            const s = e[t];
                            o += Qa(s.length);
                            for (let t = 0; t < s.length; t++) o += 4;
                        }
                    }
                    o += Qa(a.length);
                    for (let t = 0; t < a.length; t++) {
                        const e = a[t];
                        o += Qa(e.length);
                        for (let t = 0; t < e.length; t++) o += 2;
                    }
                    o += Qa(r.length);
                    for (let t = 0; t < r.length; t++) {
                        const e = r[t].data;
                        (o += 1), (o += Qa(e.length));
                        for (let t = 0; t < e.length; t++) o += Wa(e[t]);
                    }
                    const l = Ka((o += 4));
                    (Oa = 0),
                        (Oa = l.writeUInt8(e._header, Oa, !0)),
                        ja(i.length, l);
                    for (let t = 0; t < i.length; t++) {
                        const e = i[t];
                        ja(e.length, l);
                        for (let t = 0; t < e.length; t++)
                            Oa = l.writeUInt8(e[t], Oa, !0);
                    }
                    ja(n.length, l);
                    for (let t = 0; t < n.length; t++) {
                        const e = n[t];
                        ja(e.length, l);
                        for (let t = 0; t < e.length; t++)
                            Oa = l.writeUInt16BE(e[t], Oa, !0);
                    }
                    ja(s.length, l);
                    for (let t = 2; t < s.length; t++) {
                        const e = s[t];
                        ja(e.length, l);
                        for (let t = 0; t < e.length; t++) {
                            const s = e[t];
                            ja(s.length, l);
                            for (let t = 0; t < s.length; t++)
                                Oa = l.writeUInt32BE(s[t], Oa, !0);
                        }
                    }
                    ja(a.length, l);
                    for (let t = 0; t < a.length; t++) {
                        const e = a[t];
                        ja(e.length, l);
                        for (let t = 0; t < e.length; t++)
                            Oa = l.writeUInt16BE(e[t], Oa, !0);
                    }
                    ja(r.length, l);
                    for (let t = 0; t < r.length; t++) {
                        const e = r[t],
                            s = e.data;
                        (Oa = l.writeUInt8(e.type, Oa, !0)), ja(s.length, l);
                        for (let t = 0; t < s.length; t++) ja(s[t], l);
                    }
                    return (Oa = l.writeUInt32BE(e.tickId, Oa, !0)), l;
                }
            },
            serverPartyUpdate: {
                decode: t => {
                    const e = {};
                    (Oa = 0), (e._header = t.readUInt8(Oa, !0)), (Oa += 1);
                    const s = [];
                    e.members = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) {
                        const i = {};
                        (s[e] = i),
                            (i.class = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.entityid = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (i.level = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.name = Ya(t)),
                            (i.role = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (i.world = Ya(t));
                    }
                    const n = [];
                    e.queues = n;
                    const a = Ga(t);
                    for (let e = 0; e < a; e++) n[e] = Ya(t);
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.members,
                        i = e.queues;
                    let n = 0;
                    (n += 1), (n += Qa(s.length));
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        (n += 1),
                            (n += 2),
                            (n += 1),
                            (n += Ha(e.name)),
                            (n += 2),
                            (n += Ha(e.world));
                    }
                    n += Qa(i.length);
                    for (let t = 0; t < i.length; t++) n += Ha(i[t]);
                    const a = Ka(n);
                    (Oa = 0),
                        (Oa = a.writeUInt8(e._header, Oa, !0)),
                        ja(s.length, a);
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        (Oa = a.writeUInt8(e.class, Oa, !0)),
                            (Oa = a.writeUInt16BE(e.entityid, Oa, !0)),
                            (Oa = a.writeUInt8(e.level, Oa, !0)),
                            Va(e.name, a),
                            (Oa = a.writeUInt16BE(e.role, Oa, !0)),
                            Va(e.world, a);
                    }
                    ja(i.length, a);
                    for (let t = 0; t < i.length; t++) Va(i[t], a);
                    return a;
                }
            },
            serverPartyPositions: {
                decode: t => {
                    const e = {};
                    (Oa = 0), (e._header = t.readUInt8(Oa, !0)), (Oa += 1);
                    const s = [];
                    e.members = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) {
                        const i = {};
                        (s[e] = i),
                            (i.entityid = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (i.wU = t.readUInt32BE(Oa, !0)),
                            (Oa += 4);
                    }
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.members;
                    let i = 0;
                    (i += 1), (i += Qa(s.length));
                    for (let t = 0; t < s.length; t++) {
                        s[t];
                        (i += 2), (i += 4);
                    }
                    const n = Ka(i);
                    (Oa = 0),
                        (Oa = n.writeUInt8(e._header, Oa, !0)),
                        ja(s.length, n);
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        (Oa = n.writeUInt16BE(e.entityid, Oa, !0)),
                            (Oa = n.writeUInt32BE(e.wU, Oa, !0));
                    }
                    return n;
                }
            },
            serverPersonalLog: {
                decode: t => {
                    const e = {};
                    (Oa = 0), (e._header = t.readUInt8(Oa, !0)), (Oa += 1);
                    const s = [];
                    e.log = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) {
                        const i = {};
                        s[e] = i;
                        const n = [];
                        (i.data = n), (i.type = t.readUInt8(Oa, !0)), (Oa += 1);
                        const a = Ga(t);
                        for (let e = 0; e < a; e++) n[e] = Ga(t);
                    }
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.log;
                    let i = 0;
                    (i += 1), (i += Qa(s.length));
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t].data;
                        (i += 1), (i += Qa(e.length));
                        for (let t = 0; t < e.length; t++) i += Wa(e[t]);
                    }
                    const n = Ka(i);
                    (Oa = 0),
                        (Oa = n.writeUInt8(e._header, Oa, !0)),
                        ja(s.length, n);
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t],
                            i = e.data;
                        (Oa = n.writeUInt8(e.type, Oa, !0)), ja(i.length, n);
                        for (let t = 0; t < i.length; t++) ja(i[t], n);
                    }
                    return n;
                }
            },
            serverChat: {
                decode: t => {
                    const e = {};
                    (Oa = 0), (e._header = t.readUInt8(Oa, !0)), (Oa += 1);
                    const s = [];
                    e.messages = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) {
                        const i = {};
                        (s[e] = i),
                            (i.channel = Ya(t)),
                            (i.clan = Ya(t)),
                            (i.class = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.faction = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.from = Ya(t)),
                            (i.level = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.message = Ya(t)),
                            (i.subscribed = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.to = Ya(t));
                    }
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.messages;
                    let i = 0;
                    (i += 1), (i += Qa(s.length));
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        (i += Ha(e.channel)),
                            (i += Ha(e.clan)),
                            (i += 1),
                            (i += 1),
                            (i += Ha(e.from)),
                            (i += 1),
                            (i += Ha(e.message)),
                            (i += 1),
                            (i += Ha(e.to));
                    }
                    const n = Ka(i);
                    (Oa = 0),
                        (Oa = n.writeUInt8(e._header, Oa, !0)),
                        ja(s.length, n);
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        Va(e.channel, n),
                            Va(e.clan, n),
                            (Oa = n.writeUInt8(e.class, Oa, !0)),
                            (Oa = n.writeUInt8(e.faction, Oa, !0)),
                            Va(e.from, n),
                            (Oa = n.writeUInt8(e.level, Oa, !0)),
                            Va(e.message, n),
                            (Oa = n.writeUInt8(e.subscribed, Oa, !0)),
                            Va(e.to, n);
                    }
                    return n;
                }
            },
            serverSystemMessage: {
                decode: t => {
                    const e = {};
                    (Oa = 0), (e._header = t.readUInt8(Oa, !0)), (Oa += 1);
                    const s = [];
                    e.messages = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) {
                        const i = {};
                        (s[e] = i), (i.message = Ya(t)), (i.type = Ya(t));
                    }
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.messages;
                    let i = 0;
                    (i += 1), (i += Qa(s.length));
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        (i += Ha(e.message)), (i += Ha(e.type));
                    }
                    const n = Ka(i);
                    (Oa = 0),
                        (Oa = n.writeUInt8(e._header, Oa, !0)),
                        ja(s.length, n);
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        Va(e.message, n), Va(e.type, n);
                    }
                    return n;
                }
            }
        },
        er = {
            world: {
                decode: t => {
                    const e = {};
                    (Oa = 0), (e.chunkAmount = t.readUInt8(Oa, !0)), (Oa += 1);
                    const s = [];
                    e.cols = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) {
                        const i = {};
                        (s[e] = i),
                            (i.ambient = t.readUInt32BE(Oa, !0)),
                            (Oa += 4),
                            (i.directional = t.readUInt32BE(Oa, !0)),
                            (Oa += 4),
                            (i.fog = t.readUInt32BE(Oa, !0)),
                            (Oa += 4),
                            (i.sky = t.readUInt32BE(Oa, !0)),
                            (Oa += 4);
                    }
                    const n = [];
                    e.settings = n;
                    const a = Ga(t);
                    for (let e = 0; e < a; e++) {
                        const s = {};
                        (n[e] = s), (s.id = Ya(t)), (s.value = Ya(t));
                    }
                    const r = [];
                    e.spawns = r;
                    const o = Ga(t);
                    for (let e = 0; e < o; e++) {
                        const s = {};
                        (r[e] = s),
                            (s.class = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (s.faction = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (s.id = t.readUInt16BE(Oa, !0)),
                            (Oa += 2);
                        const i = [];
                        (s.meta = i),
                            (s.name = Ya(t)),
                            (s.wU = t.readUInt32BE(Oa, !0)),
                            (Oa += 4),
                            (s.rot = t.readUInt8(Oa, !0)),
                            (Oa += 1);
                        const n = Ga(t);
                        for (let e = 0; e < n; e++)
                            (i[e] = t.readUInt32BE(Oa, !0)), (Oa += 4);
                    }
                    const l = [];
                    e.water = l;
                    const c = Ga(t);
                    for (let e = 0; e < c; e++) {
                        const s = {};
                        (l[e] = s),
                            (s.qZ = t.readUInt32BE(Oa, !0)),
                            (Oa += 4),
                            (s.YM = t.readUInt32BE(Oa, !0)),
                            (Oa += 4),
                            (s.Vf = t.readUInt32BE(Oa, !0)),
                            (Oa += 4);
                        const i = [];
                        (s.wU = i),
                            (i[0] = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (i[1] = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (s.rot = t.readInt8(Oa, !0)),
                            (Oa += 1),
                            (s.speed = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (s.sx = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (s.sz = t.readUInt16BE(Oa, !0)),
                            (Oa += 2),
                            (s.visibility = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (s.Xj = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (s.KP = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (s.Dq = t.readUInt8(Oa, !0)),
                            (Oa += 1);
                        const n = Ga(t);
                        for (let e = 2; e < n; e++)
                            (i[e] = t.readUInt16BE(Oa, !0)), (Oa += 2);
                    }
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.cols,
                        i = e.settings,
                        n = e.spawns,
                        a = e.water;
                    let r = 0;
                    (r += 1), (r += Qa(s.length));
                    for (let t = 0; t < s.length; t++) {
                        s[t];
                        (r += 4), (r += 4), (r += 4), (r += 4);
                    }
                    r += Qa(i.length);
                    for (let t = 0; t < i.length; t++) {
                        const e = i[t];
                        (r += Ha(e.id)), (r += Ha(e.value));
                    }
                    r += Qa(n.length);
                    for (let t = 0; t < n.length; t++) {
                        const e = n[t];
                        (r += 2), (r += 1), (r += 2);
                        const s = e.meta;
                        (r += Ha(e.name)),
                            (r += 4),
                            (r += 1),
                            (r += Qa(s.length));
                        for (let t = 0; t < s.length; t++) r += 4;
                    }
                    r += Qa(a.length);
                    for (let t = 0; t < a.length; t++) {
                        (r += 4), (r += 4), (r += 4);
                        const e = a[t].wU;
                        (r += 2),
                            (r += 2),
                            (r += 1),
                            (r += 1),
                            (r += 2),
                            (r += 2),
                            (r += 1),
                            (r += 1),
                            (r += 1),
                            (r += 1),
                            (r += Qa(e.length));
                        for (let t = 2; t < e.length; t++) r += 2;
                    }
                    const o = Ka(r);
                    (Oa = 0),
                        (Oa = o.writeUInt8(e.chunkAmount, Oa, !0)),
                        ja(s.length, o);
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        (Oa = o.writeUInt32BE(e.ambient, Oa, !0)),
                            (Oa = o.writeUInt32BE(e.directional, Oa, !0)),
                            (Oa = o.writeUInt32BE(e.fog, Oa, !0)),
                            (Oa = o.writeUInt32BE(e.sky, Oa, !0));
                    }
                    ja(i.length, o);
                    for (let t = 0; t < i.length; t++) {
                        const e = i[t];
                        Va(e.id, o), Va(e.value, o);
                    }
                    ja(n.length, o);
                    for (let t = 0; t < n.length; t++) {
                        const e = n[t];
                        (Oa = o.writeUInt16BE(e.class, Oa, !0)),
                            (Oa = o.writeUInt8(e.faction, Oa, !0)),
                            (Oa = o.writeUInt16BE(e.id, Oa, !0));
                        const s = e.meta;
                        Va(e.name, o),
                            (Oa = o.writeUInt32BE(e.wU, Oa, !0)),
                            (Oa = o.writeUInt8(e.rot, Oa, !0)),
                            ja(s.length, o);
                        for (let t = 0; t < s.length; t++)
                            Oa = o.writeUInt32BE(s[t], Oa, !0);
                    }
                    ja(a.length, o);
                    for (let t = 0; t < a.length; t++) {
                        const e = a[t];
                        (Oa = o.writeUInt32BE(e.qZ, Oa, !0)),
                            (Oa = o.writeUInt32BE(e.YM, Oa, !0)),
                            (Oa = o.writeUInt32BE(e.Vf, Oa, !0));
                        const s = e.wU;
                        (Oa = o.writeUInt16BE(s[0], Oa, !0)),
                            (Oa = o.writeUInt16BE(s[1], Oa, !0)),
                            (Oa = o.writeInt8(e.rot, Oa, !0)),
                            (Oa = o.writeUInt8(e.speed, Oa, !0)),
                            (Oa = o.writeUInt16BE(e.sx, Oa, !0)),
                            (Oa = o.writeUInt16BE(e.sz, Oa, !0)),
                            (Oa = o.writeUInt8(e.visibility, Oa, !0)),
                            (Oa = o.writeUInt8(e.Xj, Oa, !0)),
                            (Oa = o.writeUInt8(e.KP, Oa, !0)),
                            (Oa = o.writeUInt8(e.Dq, Oa, !0)),
                            ja(s.length, o);
                        for (let t = 2; t < s.length; t++)
                            Oa = o.writeUInt16BE(s[t], Oa, !0);
                    }
                    return o;
                }
            },
            chunk: {
                decode: t => {
                    const e = {};
                    (Oa = 0),
                        (e.color = Xa(t)),
                        (e.foliage = Xa(t)),
                        (e.id = t.readUInt16BE(Oa, !0)),
                        (Oa += 2);
                    const s = [];
                    e.props = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) {
                        const i = {};
                        (s[e] = i),
                            (i.id = t.readUInt32BE(Oa, !0)),
                            (Oa += 4),
                            (i.rx = t.readInt8(Oa, !0)),
                            (Oa += 1),
                            (i.ry = t.readInt8(Oa, !0)),
                            (Oa += 1),
                            (i.rz = t.readInt8(Oa, !0)),
                            (Oa += 1),
                            (i.scale = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.x = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.y = t.readUInt8(Oa, !0)),
                            (Oa += 1),
                            (i.z = t.readUInt8(Oa, !0)),
                            (Oa += 1);
                    }
                    return (e.terrain = Xa(t)), e;
                },
                encode: t => {
                    const e = t,
                        s = e.props;
                    let i = 0;
                    (i += Za(e.color)),
                        (i += Za(e.foliage)),
                        (i += 2),
                        (i += Qa(s.length));
                    for (let t = 0; t < s.length; t++) {
                        s[t];
                        (i += 4),
                            (i += 1),
                            (i += 1),
                            (i += 1),
                            (i += 1),
                            (i += 1),
                            (i += 1),
                            (i += 1);
                    }
                    i += Za(e.terrain);
                    const n = Ka(i);
                    (Oa = 0),
                        Ja(e.color, n),
                        Ja(e.foliage, n),
                        (Oa = n.writeUInt16BE(e.id, Oa, !0)),
                        ja(s.length, n);
                    for (let t = 0; t < s.length; t++) {
                        const e = s[t];
                        (Oa = n.writeUInt32BE(e.id, Oa, !0)),
                            (Oa = n.writeInt8(e.rx, Oa, !0)),
                            (Oa = n.writeInt8(e.ry, Oa, !0)),
                            (Oa = n.writeInt8(e.rz, Oa, !0)),
                            (Oa = n.writeUInt8(e.scale, Oa, !0)),
                            (Oa = n.writeUInt8(e.x, Oa, !0)),
                            (Oa = n.writeUInt8(e.y, Oa, !0)),
                            (Oa = n.writeUInt8(e.z, Oa, !0));
                    }
                    return Ja(e.terrain, n), n;
                }
            },
            modelformat: {
                decode: t => {
                    const e = {};
                    Oa = 0;
                    const s = [];
                    e.index = s;
                    const i = Ga(t);
                    for (let e = 0; e < i; e++) s[e] = Ga(t);
                    (e.normalmode = t.readUInt8(Oa, !0)), (Oa += 1);
                    const n = [];
                    e.position = n;
                    const a = Ga(t);
                    for (let e = 0; e < a; e++)
                        (n[e] = t.readInt8(Oa, !0)), (Oa += 1);
                    (e.sx = t.readUInt32BE(Oa, !0)),
                        (Oa += 4),
                        (e.sy = t.readUInt32BE(Oa, !0)),
                        (Oa += 4),
                        (e.sz = t.readUInt32BE(Oa, !0)),
                        (Oa += 4);
                    const r = [];
                    e.Lz = r;
                    const o = Ga(t);
                    for (let e = 0; e < o; e++)
                        (r[e] = t.readUInt8(Oa, !0)), (Oa += 1);
                    return e;
                },
                encode: t => {
                    const e = t,
                        s = e.index,
                        i = e.position,
                        n = e.Lz;
                    let a = 0;
                    a += Qa(s.length);
                    for (let t = 0; t < s.length; t++) a += Wa(s[t]);
                    (a += 1), (a += Qa(i.length));
                    for (let t = 0; t < i.length; t++) a += 1;
                    (a += 4), (a += 4), (a += 4), (a += Qa(n.length));
                    for (let t = 0; t < n.length; t++) a += 1;
                    const r = Ka(a);
                    (Oa = 0), ja(s.length, r);
                    for (let t = 0; t < s.length; t++) ja(s[t], r);
                    (Oa = r.writeUInt8(e.normalmode, Oa, !0)), ja(i.length, r);
                    for (let t = 0; t < i.length; t++)
                        Oa = r.writeInt8(i[t], Oa, !0);
                    (Oa = r.writeUInt32BE(e.sx, Oa, !0)),
                        (Oa = r.writeUInt32BE(e.sy, Oa, !0)),
                        (Oa = r.writeUInt32BE(e.sz, Oa, !0)),
                        ja(n.length, r);
                    for (let t = 0; t < n.length; t++)
                        Oa = r.writeUInt8(n[t], Oa, !0);
                    return r;
                }
            }
        },
        sr = [];
    let ir = 0;
    for (const t in tr)
        tr[t] &&
            ((tr[t].header = ir++),
            (tr[t].packData = function (t) {
                return (
                    this.prepareData && this.prepareData(t),
                    (t._header = this.header),
                    this.encode(t)
                );
            }),
            sr.push(tr[t]));
    const nr = [0, 0, 0],
        ar = [0, 0, 0],
        rr = [0, 0, 0],
        or = [0, 0, 0],
        lr = [0, 0, 0],
        cr = [0, 0, 0],
        hr = [0, 0, 0],
        dr = [0, 0, 0],
        ur = [0, 0, 0],
        mr = [0, 0, 0],
        pr = async (t, e, s, i, n, a = 3) => {
            switch (e.split(".").pop()) {
                case "jpg":
                case "png":
                case "webp": {
                    const a = new Image();
                    (a.onload = () => {
                        (s[e] = i(a)), n(s[e], t + e), (a.onload = void 0);
                    }),
                        (a.src = t + e + "?v=35201089");
                    break;
                }
                default:
                    fetch(t + e + "?v=35201089")
                        .then(a => {
                            if (!a.ok) throw new Error();
                            a.arrayBuffer().then(async a => {
                                (s[e] = await i(a)), n(s[e], t + e);
                            });
                        })
                        .catch(r => {
                            console.log(e + " fetch failed, retrying"),
                                a > 1 && pr(t, e, s, i, n, --a);
                        });
            }
        },
        fr = {},
        gr = (t, e) => {
            for (let s = 0, i = fr[e].length; s < i; ++s) fr[e][s](t);
            fr[e] = void 0;
        },
        vr = async (t, e, s, i, n) => {
            s[e]
                ? n(s[e])
                : fr[t + e]
                ? fr[t + e].push(n)
                : ((fr[t + e] = []), fr[t + e].push(n), pr(t, e, s, i, gr));
        },
        yr = t => {
            const e = (t => {
                const e =
                        127 /
                        ((2 ** 32 - 1) / (t = er.modelformat.decode(t)).sx),
                    s = 127 / ((2 ** 32 - 1) / t.sy),
                    i = 127 / ((2 ** 32 - 1) / t.sz);
                for (let n = 0; n < t.position.length; n += 3)
                    (t.position[n + 0] = t.position[n + 0] / e),
                        (t.position[n + 1] = t.position[n + 1] / s),
                        (t.position[n + 2] = t.position[n + 2] / i);
                if (0 == t.Lz.length)
                    (t.Lz.length = (t.position.length / 3) * 2),
                        (t.emptyUv = !0);
                else for (let e = 0; e < t.Lz.length; ++e) t.Lz[e] /= 254;
                switch (((t.hZ = []), t.normalmode)) {
                    case 0: {
                        const e = {};
                        for (let e = 0, s = t.position.length; e < s; ++e)
                            t.hZ[e] = 0;
                        for (let s = 0, i = t.index.length; s < i; s += 3) {
                            const i = 3 * t.index[s],
                                n = 3 * t.index[s + 2],
                                a = 3 * t.index[s + 1];
                            xi(
                                lr,
                                t.position[i],
                                t.position[i + 1],
                                t.position[i + 2]
                            ),
                                xi(
                                    cr,
                                    t.position[n],
                                    t.position[n + 1],
                                    t.position[n + 2]
                                ),
                                xi(
                                    hr,
                                    t.position[a],
                                    t.position[a + 1],
                                    t.position[a + 2]
                                ),
                                Si(dr, lr, cr),
                                Si(ur, hr, cr),
                                Ui(mr, dr, ur),
                                (t.hZ[i] += mr[0]),
                                (t.hZ[i + 1] += mr[1]),
                                (t.hZ[i + 2] += mr[2]),
                                (t.hZ[n] += mr[0]),
                                (t.hZ[n + 1] += mr[1]),
                                (t.hZ[n + 2] += mr[2]),
                                (t.hZ[a] += mr[0]),
                                (t.hZ[a + 1] += mr[1]),
                                (t.hZ[a + 2] += mr[2]),
                                [
                                    [lr, i],
                                    [cr, n],
                                    [hr, a]
                                ].forEach(t => {
                                    const s = t[0][0] + t[0][1] + t[0][2];
                                    (e[s] = e[s] || new Set()), e[s].add(t[1]);
                                });
                        }
                        for (let e = 0, s = t.hZ.length; e < s; e += 3)
                            xi(mr, t.hZ[e], t.hZ[e + 1], t.hZ[e + 2]),
                                _i(mr, mr),
                                (t.hZ[e] = mr[0]),
                                (t.hZ[e + 1] = mr[1]),
                                (t.hZ[e + 2] = mr[2]);
                        for (const s in e) {
                            const i = e[s];
                            i.size <= 1 ||
                                (xi(mr, 0, 0, 0),
                                i.forEach(e => {
                                    (mr[0] += t.hZ[e + 0]),
                                        (mr[1] += t.hZ[e + 1]),
                                        (mr[2] += t.hZ[e + 2]);
                                }),
                                _i(mr, mr),
                                i.forEach(e => {
                                    xi(lr, t.hZ[e], t.hZ[e + 1], t.hZ[e + 2]),
                                        Pi(lr, mr) < 0.75 ||
                                            ((t.hZ[e + 0] = mr[0]),
                                            (t.hZ[e + 1] = mr[1]),
                                            (t.hZ[e + 2] = mr[2]));
                                }));
                        }
                        break;
                    }
                    case 1:
                        Ni(t.position, nr, ar, rr, or);
                        for (let e = 0, s = t.position.length; e < s; e += 3)
                            xi(
                                lr,
                                t.position[e],
                                t.position[e + 1],
                                t.position[e + 2]
                            ),
                                Si(lr, lr, rr),
                                _i(lr, lr),
                                (t.hZ[e] = lr[0]),
                                (t.hZ[e + 1] = lr[1]),
                                (t.hZ[e + 2] = lr[2]);
                }
                return t;
            })(Na(t));
            return {
                position: { size: 3, data: new Float32Array(e.position) },
                index: { type: 5125, data: new Uint32Array(e.index) },
                Lz: { size: 2, data: new Float32Array(e.Lz) },
                hZ: { size: 3, data: new Float32Array(e.hZ) }
            };
        },
        br = {},
        wr = (t, e) => {
            vr("assets/geometry/", t, br, yr, e);
        },
        xr =
            0 ==
            document
                .createElement("canvas")
                .toDataURL("image/webp")
                .indexOf("data:image/webp"),
        kr = xr ? "webp" : "png",
        $r = xr ? "webp" : "jpg";
    let Sr;
    const Mr = { terrain: [] };
    let Er;
    const Cr = t => {
            const e = new Cn(Fn, {
                wrapS: Fn.REPEAT,
                wrapT: Fn.REPEAT,
                minFilter: Fn.LINEAR_MIPMAP_LINEAR
            });
            return (e.image = t), (e.element = t), e;
        },
        Tr = {},
        _r = (t, e) => {
            if (Wn && Wn.data) {
                const e = Wn.data.settings.find(e => e.id === t);
                e && (t = e.value);
            }
            xr && (t = t.split(".")[0] + ".webp"),
                vr("assets/textures/", t, Tr, Cr, e);
        },
        Pr = (t, e, s) => {
            Sr.program = new qi(s.gl, {
                vertex: Rn,
                fragment: t,
                uniforms: { seed: { value: Date.now() % 1e3 } }
            });
            const i = new Tn(s.gl, {
                width: e,
                height: e,
                wrapT: s.gl.REPEAT,
                wrapS: s.gl.REPEAT
            });
            return s.render({ scene: Sr, target: i }), i.texture;
        };
    let Ur;
    const Ir = (t, e, s) => {
            (Ur = e), vr("assets/audio/", t + ".ogg", Tr, zr, s);
        },
        zr = async t => await Ur.decodeAudioData(t);
    var Ar = Object.freeze({
        __proto__: null,
        textures: Mr,
        get itemAtlas() {
            return Er;
        },
        init: () => {
            (Sr = new yn(Fn, { geometry: On.geometry })),
                fetch("/assets/items/atlas.json?v=35201089").then(async t => {
                    Er = await t.json();
                    for (const t in Er)
                        "s" != t && (Er[t] = Er[t].map(t => t / Er.s));
                });
        },
        loadTexture: _r,
        makeTexture: Pr,
        loadSound: Ir,
        load: vr,
        geometry: br,
        loadGeometry: wr
    });
    const Dr = (t, e) => t + Math.random() * (e - t),
        Rr = (t, e) => Math.floor(Math.random() * (e - t + 1)) + t,
        Br = t => Fr(t, Math.random()),
        Fr = (t, e) => t[Math.floor(e * t.length)],
        Nr = {
            hammer: { audio: "weaponmetal", rot: 1 },
            bow: { audio: "weaponwood", rot: 1 },
            staff: { audio: "weaponwood", rot: 1 },
            sword: { audio: "weaponmetal", rot: 1 },
            armlet: { audio: "leather" },
            armor: { audio: "armor" },
            bag: { audio: "leather" },
            boot: { audio: "leather" },
            glove: { audio: "leather" },
            ring: { audio: "small" },
            amulet: { audio: "small" },
            quiver: { audio: "leather", rot: 1 },
            shield: { audio: "armor" },
            totem: { audio: "armor", rot: 1 },
            orb: { audio: "armor" },
            rune: { audio: "small", rot: 0 },
            misc: { audio: "potion", rot: 1 },
            book: { audio: "leather" },
            mount: { audio: "leather", rot: 0 },
            box: { audio: "box", rot: 0 },
            gold: { audio: "gold" }
        },
        Lr = {
            hammer: {
                baselvl: 0,
                slot: 101,
                tiers: 17,
                drop: 0.4,
                weight: 1,
                class: 3,
                stats: {
                    10: { base: 1, min: 0.6, max: 1 },
                    11: { base: 3, min: 0.8, max: 1.7 },
                    17: { base: 15, min: 0.05, max: 0.1 }
                }
            },
            bow: {
                baselvl: 0,
                slot: 101,
                tiers: 17,
                drop: 0.4,
                weight: 1,
                class: 2,
                stats: {
                    10: { base: 1, min: 0.6, max: 1 },
                    11: { base: 3, min: 0.8, max: 1.7 },
                    17: { base: 10, min: 0.05, max: 0.1 }
                }
            },
            staff: {
                baselvl: 0,
                slot: 101,
                tiers: 17,
                drop: 0.4,
                weight: 1,
                class: 1,
                stats: {
                    10: { base: 1, min: 0.6, max: 1 },
                    11: { base: 3, min: 0.8, max: 1.7 },
                    17: { base: 10, min: 0.05, max: 0.1 }
                }
            },
            sword: {
                baselvl: 0,
                slot: 101,
                tiers: 17,
                drop: 0.4,
                weight: 1,
                class: 0,
                stats: {
                    10: { base: 1, min: 0.6, max: 1 },
                    11: { base: 3, min: 0.8, max: 1.7 },
                    17: { base: 20, min: 0.05, max: 0.1 }
                }
            },
            armlet: {
                baselvl: 1,
                slot: 102,
                tiers: 13,
                drop: 1,
                weight: 0.3,
                stats: {
                    6: { base: 10, min: 0.5, max: 0.9 },
                    12: { base: 7, min: 0.5, max: 0.9 }
                }
            },
            armor: {
                baselvl: 2,
                slot: 103,
                tiers: 11,
                drop: 1,
                weight: 1,
                stats: {
                    12: { base: 10, min: 1.5, max: 3 },
                    6: { base: 20, min: 1, max: 2 }
                }
            },
            bag: {
                baselvl: 5,
                slot: 104,
                tiers: 5,
                drop: 1,
                weight: 0.1,
                stats: { 19: { base: 1, min: 0.1, max: 0.3 } }
            },
            boot: {
                baselvl: 2,
                slot: 105,
                tiers: 13,
                drop: 1,
                weight: 0.4,
                stats: {
                    6: { base: 10, min: 0.6, max: 1 },
                    12: { base: 8, min: 0.6, max: 1.2 },
                    15: { base: 5, min: 0.03, max: 0.15 }
                }
            },
            glove: {
                baselvl: 2,
                slot: 106,
                tiers: 13,
                drop: 1,
                weight: 0.4,
                stats: {
                    6: { base: 10, min: 0.6, max: 1 },
                    12: { base: 8, min: 0.7, max: 1.2 },
                    14: { base: 1, min: 0.1, max: 1.5 }
                }
            },
            ring: {
                baselvl: 5,
                slot: 107,
                tiers: 12,
                drop: 0.8,
                weight: 0.2,
                stats: {
                    6: { base: 10, min: 0.5, max: 0.9 },
                    7: { base: 5, min: 0.6, max: 1 }
                }
            },
            amulet: {
                baselvl: 7,
                slot: 108,
                tiers: 12,
                drop: 0.8,
                weight: 0.3,
                stats: {
                    7: { base: 10, min: 1, max: 1.8 },
                    9: { base: 1, min: 0.2, max: 0.3 }
                }
            },
            quiver: {
                baselvl: 2,
                slot: 109,
                tiers: 10,
                drop: 0.7,
                weight: 0.5,
                class: 2,
                stats: { 14: { base: 2, min: 0.1, max: 0.5 } }
            },
            shield: {
                baselvl: 2,
                slot: 109,
                tiers: 10,
                drop: 0.7,
                weight: 0.5,
                class: 0,
                stats: {
                    12: { base: 20, min: 0.9, max: 1.5 },
                    13: { base: 4, min: 1, max: 3 }
                }
            },
            totem: {
                baselvl: 2,
                slot: 109,
                tiers: 10,
                drop: 0.7,
                weight: 0.5,
                class: 3,
                stats: {
                    12: { base: 10, min: 0.3, max: 0.8 },
                    9: { base: 1, min: 0.1, max: 0.2 }
                }
            },
            orb: {
                baselvl: 2,
                slot: 109,
                tiers: 10,
                drop: 0.7,
                weight: 0.5,
                class: 1,
                stats: {
                    3: { base: 10, min: 0.3, max: 0.8 },
                    9: { base: 1, min: 0.1, max: 0.3 }
                }
            },
            rune: { baselvl: 1, tiers: 11, drop: 0.8, quality: 70 },
            misc: { drop: 7, weight: 0.1 },
            book: { drop: 1.5, weight: 0.5 },
            mount: { noupgrade: !0, undroppable: !0, drop: 0, stackable: !1 },
            box: { noupgrade: !0, undroppable: !0, drop: 0, stackable: !1 },
            gold: { drop: 20 }
        },
        Or = Object.keys(Lr),
        qr = {
            6: { min: 0.2, max: 0.8, round: !0 },
            7: { min: 0.2, max: 0.5, round: !0 },
            8: { min: 0.1, max: 0.5 },
            9: { min: 0.1, max: 0.2 },
            10: { min: 0.03, max: 0.13, round: !0 },
            11: { min: 0.1, max: 0.2, round: !0 },
            12: { min: 0.1, max: 1, round: !0 },
            13: { min: 0.1, max: 0.3 },
            14: { min: 0.1, max: 0.4 },
            16: { min: 0.1, max: 0.5 },
            2: { min: 0.08, max: 0.45, round: !0 },
            0: { min: 0.08, max: 0.45, round: !0 },
            3: { min: 0.08, max: 0.45, round: !0 },
            4: { min: 0.08, max: 0.45, round: !0 },
            1: { min: 0.08, max: 0.45, round: !0 },
            5: { min: 0.08, max: 0.45, round: !0 },
            18: { min: 0.01, max: 0.15, round: !0 }
        },
        Hr = {
            6: 3,
            7: 3,
            8: 3,
            9: 2,
            10: 1,
            11: 1,
            12: 5,
            13: 5,
            14: 5,
            15: 0.5,
            16: 5,
            17: 0,
            2: 2,
            0: 2,
            3: 2,
            4: 2,
            1: 2,
            5: 2,
            19: 1,
            18: 3
        };
    let Wr,
        Zr,
        jr,
        Gr = [];
    const Vr = new Map(),
        Yr = t => {
            Vr.set(t, Math.max(0, Vr.get(t) - 1));
        },
        Jr = ({
            id: t,
            loop: e,
            transform: s,
            music: i,
            distance: n,
            gain: a,
            delay: r,
            rndDelay: o = !1,
            rnd: l,
            pitch: c,
            force: h,
            dynamic: d = !1
        }) => {
            if (s && !h) {
                if (
                    ((1 /
                        ((Vr.get(t) || 0) + 10 + Ci(Ln.position, s.position))) *
                        1e3) /
                        (Gr.length + 20) ** 1.2 <
                    0.4
                )
                    return;
            }
            if (
                (Gr.length > 35 && !h) ||
                void 0 === Wr ||
                "suspended" == Wr.state
            )
                return;
            if (
                !(t => {
                    if (Vr.has(t)) {
                        if (Vr.get(t) > 3) return !1;
                        Vr.set(t, Vr.get(t) + 1);
                    } else Vr.set(t, 1);
                    return !0;
                })(t) &&
                !h
            )
                return;
            const u = Wr.createBufferSource();
            (u.id = t),
                l && (t += Rr(1, l)),
                (u.loop = e || !1),
                -1 !== c && (u.playbackRate.value = (c || 1) * Dr(0.95, 1.05)),
                Qr(t).then(t => {
                    u.buffer = t;
                });
            const m = i ? jr : Zr,
                p = a ? Wr.createGain() : m;
            return (
                a && ((u.gain = p), p.connect(m)),
                s
                    ? ((u.panner = Wr.createPanner()),
                      (u.panner.distanceModel = "exponential"),
                      (u.panner.refDistance = n),
                      (u.panner.rolloffFactor = 1),
                      (u.transform = s),
                      (u.dynamic = d),
                      u.connect(u.panner),
                      u.panner.connect(p),
                      to(u.panner, s.VN))
                    : u.connect(p),
                (u.onended = eo),
                r ? (u.delay = o ? Dr(0, r) : r) : u.start(),
                Gr.push(u),
                u
            );
        },
        Xr = {},
        Qr = async t =>
            Xr[t]
                ? Xr[t]
                : await new Promise(e => {
                      Ir(t, Wr, s => {
                          (Xr[t] = s), e(Xr[t]);
                      });
                  }),
        Kr = t => {
            (Wr = new (window.AudioContext || window.webkitAudioContext)()),
                (Zr = Wr.createGain()).connect(Wr.destination),
                (jr = Wr.createGain()).connect(Wr.destination),
                (Zr.gain.value = 0.1),
                Be.subscribe(t => {
                    Zr && (Zr.gain.value = (t / 100) ** 2);
                }),
                (jr.gain.value = 0.1),
                Fe.subscribe(t => {
                    jr && (jr.gain.value = (t / 100) ** 2);
                }),
                qt.set(!0),
                document.removeEventListener("click", Kr);
        };
    document.addEventListener("click", Kr);
    const to = (t, e) => {
            t.setPosition(e[12], e[13], e[14]);
        },
        eo = function () {
            this.ended = !0;
        },
        so = t => {
            Jr({ id: "item/" + Nr[t].audio, loop: !1 });
        };
    var io = Object.freeze({
        __proto__: null,
        tick: ({ dt: t, cameraPivot: e, camera: s }) => {
            Wr &&
                (to(Wr.listener, s.VN),
                Xi(Kn, e.VN),
                xi(Gn, 0, 0, 1),
                zi(Gn, Gn, Kn),
                xi(Vn, 0, 1, 0),
                zi(Vn, Vn, Kn),
                Wr.listener.setOrientation(
                    Gn[0],
                    Gn[1],
                    Gn[2],
                    Vn[0],
                    Vn[1],
                    Vn[2]
                ),
                Gr.forEach(e => {
                    e.transform && e.dynamic && to(e.panner, e.transform.VN),
                        e.delay > 0 &&
                            ((e.delay -= t), e.delay <= 0 && e.start()),
                        e.ended && Yr(e.id);
                }),
                (Gr = Gr.filter(t => !t.ended)));
        },
        sound: Jr,
        onUserActivate: Kr,
        itemsound: so,
        onWorldDestroy: ({ world: t }) => {
            (Gr.length = 0), Vr.clear();
        }
    });
    const no = [0, 0],
        ao = [0, 0],
        ro = [0, 0],
        oo = {},
        lo = {},
        co = function (t) {
            return this.press.push(t), t;
        },
        ho = function (t) {
            return this.release.push(t), t;
        },
        uo = (t, e) => (
            e.press ||
                ((e.down = !1),
                (e.onPress = co),
                (e.onRelease = ho),
                (e.press = []),
                (e.release = []),
                (e.mappings = []),
                e.store || (e.store = It(!1))),
            (t = Array.isArray(t) ? t : [t]).forEach(t => {
                (lo[t] = e), e.mappings.push(t);
            }),
            Ot.set(oo),
            e
        );
    let mo = 0;
    const po = t => {
        if (
            (Pn(
                no,
                ((t.x * vi.resolutionScale) / Fn.canvas.width) * 2 - 1,
                2 * (1 - (t.y * vi.resolutionScale) / Fn.canvas.height) - 1
            ),
            Pn(ao, t.x, t.y),
            oo.rmb.down || oo.lmb.down)
        ) {
            const e = na(t.movementX, -100, 100),
                s = na(t.movementY, -100, 100);
            (ro[1] =
                ro[1] +
                0.004 *
                    s *
                    (vi.invertMouseY
                        ? -vi.mouseSensitivity
                        : vi.mouseSensitivity)),
                (ro[0] = ua(
                    ro[0] -
                        0.005 *
                            e *
                            (vi.invertMouseX
                                ? -vi.mouseSensitivity
                                : vi.mouseSensitivity)
                )),
                (mo += Math.abs(s) + Math.abs(e));
        }
    };
    let fo = !1;
    Vt.subscribe(t => {
        fo = void 0 !== t;
    });
    let go = !1;
    const vo = t => {
            (t.target != Fn.canvas && "chat" != t.target.id) ||
                (vi.pointerlock && ((go = !0), Fn.canvas.requestPointerLock()),
                xo("m" + t.button, !0),
                fo &&
                    Vt.update(t => {
                        t && t.discard && t.discard();
                    }));
        },
        yo = t => {
            xo("m" + t.button, !1),
                (mo = 0),
                !vi.pointerlock ||
                    oo.lmb.down ||
                    oo.rmb.down ||
                    (document.exitPointerLock(), (go = !1));
        },
        bo = t => {
            t.target == Fn.canvas &&
                ss.update(e => na(e + (t.deltaY > 0 ? 1 : -1), 2, 18));
        },
        wo = t => {
            t.preventDefault();
        },
        xo = (t, e, s) => {
            const i = lo[t];
            return (
                void 0 !== i &&
                (i.down != e &&
                    ((i.down = e),
                    i[e ? "press" : "release"].forEach(t => {
                        t(s);
                    }),
                    i.store.set(i.down)),
                s && s.preventDefault(),
                !0)
            );
        },
        ko = t => {
            if (!So(t)) return;
            const e = t.key.toLowerCase();
            (t.ctrlKey && xo("ctrl+" + e, !0, t)) ||
                (t.shiftKey && xo("shift+" + e, !0, t)) ||
                xo(e, !0, t);
        },
        $o = t => {
            if (!So(t)) return;
            const e = t.key.toLowerCase();
            xo("ctrl+" + e, !1), xo("shift+" + e, !1), xo(e, !1);
        },
        So = t => "input" !== t.target.tagName.toLowerCase();
    const Mo = {
            frag:
                "snippet version;out vec4 CN;in vec2 Jl;in vec3 qa;snippet zj;uniform float time;uniform float QZ;uniform sampler2D Dc;void main(){gl_FragDepth=0.999997;vec2 wU=vec2(Jl.x+time*0.005,Jl.y);float GW=texture(Dc,wU).r;GW+=sin(QZ*6.28)*0.04-0.035;if(GW<0.17){discard;}GW=smoothstep(0.3,0.6,GW);GW*=smoothstep(0.0,0.3,qa.y);float wV=max(dot(Vr,normalize(qa)),0.0);float wN=max(0.0,pow(wV,6.0))*0.3;vec3 base=mix(PF+wN+vec3(0.3),PF+wN+vec3(0.1),GW);CN=vec4(base,GW);}"
        },
        Eo = {
            frag:
                "snippet version;precision highp float;in vec2 Jl;uniform float seed;snippet qg;snippet Qr;out vec4 CN;void main(){vec2 wU=vec2(Jl.x*0.7+seed,Jl.y)*1.5;float GW=0.0;const int Ek=8;for(int i=1;i<Ek;++i){float Oq=float(i);GW+=noise(wU*pow(Oq,1.2+Oq*0.05)+vec2(pow(Oq,3.5)*0.0002,Oq))/Oq;}GW+=noise(wU*25.0)/15.0;GW+=noise(wU*40.0)/35.0;GW=GW/(float(Ek)-5.0)*0.8+0.05;GW-=pow(max(0.0,abs(Jl.x-0.5)),5.0)*18.0;CN.rgb+=GW;}"
        },
        Co = {
            frag:
                "snippet version;out vec4 CN;snippet zj;uniform sampler2D KW;uniform float time;in vec2 Jl;in vec4 Vl;void main(){snippet Wl;vec4 result=texture(KW,Jl);if(result.a<0.25)discard;result.rgb=mix(result.rgb*Kp,result.rgb*1.1,smoothstep(-0.7,0.7,sin(time*6.0+Vl.x)));snippet Dy;CN=result;}",
            vert:
                "snippet version;snippet zj;in vec2 Lz;in vec3 position;in vec3 hZ;in mat4 VN;in vec4 MW;in vec4 Pw;uniform mat4 kX;out vec4 Vl;out vec2 Jl;void main(){Vl=Pw;Xr=VN*vec4(position,1.0);Jl=MW.zw-Lz*MW.xy;snippet YL;gl_Position=kX*VN*vec4(position,1.0);}"
        },
        To = {
            frag:
                "snippet version;snippet zj;uniform sampler2D RK;in vec3 PV;in float iD;out vec4 CN;in vec3 Zi;uniform float time;in vec2 oK;void main(){snippet Wl;vec2 Lz=vec2(gl_PointCoord.x,gl_PointCoord.y)+vec2(cos(time*0.5+Zi.x*0.2)*sin(time*4.0+Zi.z*0.5)*(1.0-gl_PointCoord.y)*0.08,0.0);Lz.x=clamp(Lz.x,0.,1.)*0.25;Lz.y=1.0-clamp(Lz.y,0.,1.)*0.25;Lz+=oK;vec4 result=texture(RK,Lz);if(result.a<max(0.3,0.6-uG*0.003))discard;float xu=iD*(0.9+sin(Zi.x*0.5)*0.05+cos(Zi.z*0.3)*0.05);result.rgb=result.rgb*PV+result.rgb*KK*xu+result.rgb*Kp;snippet Dy;CN=result;}",
            vert:
                "snippet version;precision highp sampler2DShadow;snippet zj;snippet JG;snippet shadowsEnabled;uniform mat4 QA;uniform mat4 Ux;uniform mat4 Ua;uniform sampler2DShadow LG;uniform vec2 resolution;in vec4 position;in float info;out vec3 Zi;out vec2 oK;out float iD;snippet xK;void main(){float id=1.0;oK=vec2(fract(info*0.25),-floor(info/4.0)*0.25);if(shadowsEnabled==1){vec4 Bc=xK(Ua*vec4(position.xyz,1));vec3 uA=(Bc.xyz/Bc.w)*0.5+0.5;iD=texture(LG,uA);}else{iD=1.0;}iD*=0.65;Zi=position.xyz;vec4 Xr=QA*vec4(position.xyz,1);vec3 xu=vec3(0.0);for(int i=0;i<Pm;++i){vec3 WH=Ck[i]-Zi.xyz;float Hs=vH[i].w-dot(WH,WH);if(Hs>0.0){Hs/=(vH[i].w);Hs=Hs*Hs;xu+=max(0.2,dot(normalize(WH),vec3(0.0,1.0,0.0)))*vH[i].rgb*Hs;;}}PV=xu*0.65;uG=length(Xr.xyz);if(uG>min(100.0,Ft*0.6)){gl_PointSize=0.;gl_Position.w=0.0;}else{gl_PointSize=resolution[1]/(uG)*position.w;}gl_Position=Ux*Xr;}"
        },
        _o = {
            frag:
                "snippet version;precision highp sampler2DShadow;snippet zj;snippet shadowsEnabled;uniform sampler2DShadow LG;uniform int Eo;in vec3 PV;in vec4 BM;in vec3 hR;in vec3 PY;out vec4 CN;\n#define RECIPROCAL_PI 0.31830988618\n#define LOG2 1.442695\n#define PI 3.14159265359\nvoid main(){snippet Wl;float fX=(float(gl_FrontFacing)*2.0-1.0);float cX=1.0;if(shadowsEnabled==1&&Eo==1){cX=texture(LG,PY+vec3(0.0,0.0,-0.001*fX));}vec3 Ug=reflect(Vr,hR);float Ij=max(0.0,dot(normalize(AQ-Xr.xyz),-Ug));Ij=pow(Ij*max(0.0,min(1.0,BM[3]*2.0))*1.5,5.0);vec3 KW=BM.rgb;vec3 ambient=Kp*PI;ambient*=RECIPROCAL_PI*KW;float fJ=clamp(dot(hR*fX,Vr),0.0,1.0);vec3 directional=PI*PV+(fJ*(PI*KK)+Ij)*cX;directional*=RECIPROCAL_PI*KW;vec3 bE=BM.rgb*max(BM[3]*0.5-0.5,-BM[3]);vec4 result=vec4(directional+ambient+bE,1.0);snippet Dy;CN=result;}",
            vert:
                "snippet version;snippet JG;snippet zj;snippet shadowsEnabled;in vec3 position;in vec3 hZ;in vec4 color;in mat4 VN;uniform mat4 kX;uniform mat4 Ua;out vec4 BM;out vec3 hR;out vec3 PY;snippet xK;void main(){hR=normalize(mat3(VN)*hZ);Xr=VN*vec4(position,1.0);BM=color;snippet YL;snippet rq;if(shadowsEnabled==1){vec4 HQ=xK(Ua*Xr);PY=(HQ.xyz/HQ.w)*0.5+0.5;}gl_Position=kX*Xr;}"
        },
        Po = {
            frag:
                "snippet version;in vec4 BM;out vec4 CN;void main(){CN=BM;CN.a=1.0;}",
            vert:
                "snippet version;in vec3 position;in vec4 color;in mat4 VN;uniform mat4 kX;out vec4 BM;void main(){BM=color;gl_Position=kX*VN*vec4(position,1.0);;}"
        },
        Uo = {
            frag:
                "snippet version;precision highp sampler2DShadow;snippet zj;snippet shadowsEnabled;in vec3 PV;uniform sampler2D KW;uniform sampler2DShadow LG;uniform int Eo;in vec3 hR;in vec3 PY;in vec2 Jl;out vec4 CN;void main(){snippet Wl;vec4 result=texture(KW,Jl);if(result.a<0.5)discard;float fX=(float(gl_FrontFacing)*2.0-1.0);float DZ=max(dot(hR*fX,Vr),0.0);if(shadowsEnabled==1&&Eo==1&&DZ>0.0){float Xs=texture(LG,PY+vec3(0.0,0.0,-0.001*fX));snippet TG;DZ*=max(Xs,TG);}result.rgb=result.rgb*PV+result.rgb*KK*DZ+result.rgb*Kp;snippet Dy;CN=result;}",
            vert:
                "snippet version;snippet JG;snippet zj;snippet shadowsEnabled;in vec2 Lz;in vec3 position;in vec3 hZ;in mat4 VN;uniform mat4 kX;uniform mat4 Ua;out vec3 hR;out vec2 Jl;out vec3 PY;snippet xK;void main(){hR=normalize(mat3(VN)*hZ);Jl=Lz;Xr=VN*vec4(position,1.0);snippet YL;snippet rq;if(shadowsEnabled==1){vec4 HQ=xK(Ua*Xr);PY=(HQ.xyz/HQ.w)*0.5+0.5;}gl_Position=kX*Xr;}"
        },
        Io = {
            vert:
                "snippet version;snippet JG;snippet zj;snippet shadowsEnabled;in vec2 Lz;in vec3 position;in vec3 hZ;in float qt;in mat4 VN;uniform mat4 kX;uniform mat4 Ua;out vec3 hR;out vec2 Jl;out vec3 PY;snippet xK;void main(){hR=normalize(mat3(VN)*hZ);Jl=Lz*qt;Xr=VN*vec4(position,1.0);snippet YL;snippet rq;if(shadowsEnabled==1){vec4 HQ=xK(Ua*Xr);PY=(HQ.xyz/HQ.w)*0.5+0.5;}gl_Position=kX*Xr;}"
        },
        zo = {
            frag:
                "snippet version;uniform sampler2D Hl;in vec4 Rz;in vec2 oK;in float IJ;out vec4 CN;void main(){float Dn=0.5;vec2 Lz=vec2(-0.1+gl_PointCoord.x*1.2,-0.1+gl_PointCoord.y*1.2);if(IJ!=0.0){Lz=vec2(cos(IJ)*(Lz.x-Dn)+sin(IJ)*(Lz.y-Dn)+Dn,cos(IJ)*(Lz.y-Dn)-sin(IJ)*(Lz.x-Dn)+Dn);}Lz.x=clamp(Lz.x,0.,1.)*0.125;Lz.y=1.0-clamp(Lz.y,0.,1.)*0.125;vec4 result=texture(Hl,Lz+oK);result*=Rz;if(result.a<0.01){discard;}CN=result;CN.rgb*=CN.a;CN.a*=0.33;}",
            vert:
                "snippet version;in vec3 wU;uniform mat4 QA;uniform mat4 Ux;uniform vec2 resolution;in vec4 info;in vec4 WU;in vec4 uT;in vec4 Tp;out vec4 Rz;out float IJ;out vec2 oK;void main(){float id=round(mix(info[2],info[3],info[0]));oK=vec2(fract(id*0.125),-floor(id/8.0)*0.125);Rz=mix(uT,Tp,info[0]);IJ=mix(WU[2],WU[3],info[0]);vec4 Xr=QA*vec4(wU,1);gl_PointSize=(resolution[1]*mix(WU[0],WU[1],info[0]))/length(Xr.xyz);gl_Position=Ux*Xr;}"
        },
        Ao = {
            frag:
                "snippet version;precision highp float;uniform sampler2D Dt;uniform vec2 resolution;in vec2 Jl;out vec4 CN;\n#define texTop(t, p) texture(t, p, 0.0)\n#define texOff(t, p, o, r) texture(t, p + (o * r), 0.0)\nvec4 FxaaPixelShader(vec2 wU,sampler2D tex,vec2 fxaaQualityRcpFrame,float fxaaQualitySubpix,float fxaaQualityEdgeThreshold,float fxaaQualityEdgeThresholdMin){vec2 Zk;Zk.x=wU.x;Zk.y=wU.y;vec4 AZ=texTop(tex,Zk);\n#define lumaM AZ.y\nfloat Ee=texOff(tex,Zk,vec2(0.0,1.0),fxaaQualityRcpFrame.xy).y;float jS=texOff(tex,Zk,vec2(1.0,0.0),fxaaQualityRcpFrame.xy).y;float Uh=texOff(tex,Zk,vec2(0.0,-1.0),fxaaQualityRcpFrame.xy).y;float VM=texOff(tex,Zk,vec2(-1.0,0.0),fxaaQualityRcpFrame.xy).y;float hG=max(Ee,lumaM);float TQ=min(Ee,lumaM);float eJ=max(jS,hG);float jN=min(jS,TQ);float lQ=max(Uh,VM);float Uk=min(Uh,VM);float rangeMax=max(lQ,eJ);float rangeMin=min(Uk,jN);float qE=rangeMax*fxaaQualityEdgeThreshold;float range=rangeMax-rangeMin;float Mw=max(fxaaQualityEdgeThresholdMin,qE);bool earlyExit=range<Mw;if(earlyExit)return AZ;float ql=texOff(tex,Zk,vec2(-1.0,-1.0),fxaaQualityRcpFrame.xy).y;float Zy=texOff(tex,Zk,vec2(1.0,1.0),fxaaQualityRcpFrame.xy).y;float fG=texOff(tex,Zk,vec2(1.0,-1.0),fxaaQualityRcpFrame.xy).y;float iN=texOff(tex,Zk,vec2(-1.0,1.0),fxaaQualityRcpFrame.xy).y;float Pg=Uh+Ee;float QC=VM+jS;float zn=1.0/range;float Ul=Pg+QC;float tj=(-2.0*lumaM)+Pg;float BR=(-2.0*lumaM)+QC;float jg=fG+Zy;float TN=ql+fG;float QQ=(-2.0*jS)+jg;float Mr=(-2.0*Uh)+TN;float GF=ql+iN;float Iy=iN+Zy;float Qg=(abs(tj)*2.0)+abs(QQ);float pQ=(abs(BR)*2.0)+abs(Mr);float Ws=(-2.0*VM)+GF;float TV=(-2.0*Ee)+Iy;float zT=abs(Ws)+Qg;float nx=abs(TV)+pQ;float Ss=GF+jg;float GA=fxaaQualityRcpFrame.x;bool horzSpan=zT>=nx;float qv=Ul*2.0+Ss;if(!horzSpan)Uh=VM;if(!horzSpan)Ee=jS;if(horzSpan)GA=fxaaQualityRcpFrame.y;float Oe=(qv*(1.0/12.0))-lumaM;float PN=Uh-lumaM;float jw=Ee-lumaM;float Je=Uh+lumaM;float GJ=Ee+lumaM;bool pairN=abs(PN)>=abs(jw);float qh=max(abs(PN),abs(jw));if(pairN)GA=-GA;float JP=clamp(abs(Oe)*zn,0.0,1.0);vec2 QE;QE.x=Zk.x;QE.y=Zk.y;vec2 gY;gY.x=(!horzSpan)? 0.0 : fxaaQualityRcpFrame.x;gY.y=(horzSpan)? 0.0 : fxaaQualityRcpFrame.y;if(!horzSpan)QE.x+=GA*0.5;if(horzSpan)QE.y+=GA*0.5;vec2 Nf;Nf.x=QE.x-gY.x;Nf.y=QE.y-gY.y;vec2 Kv;Kv.x=QE.x+gY.x;Kv.y=QE.y+gY.y;float Hn=((-2.0)*JP)+3.0;float FX=texTop(tex,Nf).y;float Lm=JP*JP;float Ng=texTop(tex,Kv).y;if(!pairN)Je=GJ;float Tv=qh*1.0/4.0;float Ud=lumaM-Je*0.5;float OY=Hn*Lm;bool lumaMLTZero=Ud<0.0;FX-=Je*0.5;Ng-=Je*0.5;bool doneN=abs(FX)>=Tv;bool doneP=abs(Ng)>=Tv;if(!doneN)Nf.x-=gY.x*1.5;if(!doneN)Nf.y-=gY.y*1.5;bool doneNP=(!doneN)||(!doneP);if(!doneP)Kv.x+=gY.x*1.5;if(!doneP)Kv.y+=gY.y*1.5;if(doneNP){if(!doneN)FX=texTop(tex,Nf.xy).y;if(!doneP)Ng=texTop(tex,Kv.xy).y;if(!doneN)FX=FX-Je*0.5;if(!doneP)Ng=Ng-Je*0.5;doneN=abs(FX)>=Tv;doneP=abs(Ng)>=Tv;if(!doneN)Nf.x-=gY.x*2.0;if(!doneN)Nf.y-=gY.y*2.0;doneNP=(!doneN)||(!doneP);if(!doneP)Kv.x+=gY.x*2.0;if(!doneP)Kv.y+=gY.y*2.0;if(doneNP){if(!doneN)FX=texTop(tex,Nf.xy).y;if(!doneP)Ng=texTop(tex,Kv.xy).y;if(!doneN)FX=FX-Je*0.5;if(!doneP)Ng=Ng-Je*0.5;doneN=abs(FX)>=Tv;doneP=abs(Ng)>=Tv;if(!doneN)Nf.x-=gY.x*4.0;if(!doneN)Nf.y-=gY.y*4.0;doneNP=(!doneN)||(!doneP);if(!doneP)Kv.x+=gY.x*4.0;if(!doneP)Kv.y+=gY.y*4.0;if(doneNP){if(!doneN)FX=texTop(tex,Nf.xy).y;if(!doneP)Ng=texTop(tex,Kv.xy).y;if(!doneN)FX=FX-Je*0.5;if(!doneP)Ng=Ng-Je*0.5;doneN=abs(FX)>=Tv;doneP=abs(Ng)>=Tv;if(!doneN)Nf.x-=gY.x*12.0;if(!doneN)Nf.y-=gY.y*12.0;doneNP=(!doneN)||(!doneP);if(!doneP)Kv.x+=gY.x*12.0;if(!doneP)Kv.y+=gY.y*12.0;}}}float Ff=Zk.x-Nf.x;float Pp=Kv.x-Zk.x;if(!horzSpan)Ff=Zk.y-Nf.y;if(!horzSpan)Pp=Kv.y-Zk.y;bool goodSpanN=(FX<0.0)!=lumaMLTZero;float jz=(Pp+Ff);bool goodSpanP=(Ng<0.0)!=lumaMLTZero;float RZ=1.0/jz;bool directionN=Ff<Pp;float XC=min(Ff,Pp);bool goodSpan=directionN ? goodSpanN : goodSpanP;float WV=OY*OY;float Rn=(XC*(-RZ))+0.5;float OZ=WV*fxaaQualitySubpix;float Qx=goodSpan ? Rn : 0.0;float jH=max(Qx,OZ);if(!horzSpan)Zk.x+=jH*GA;if(horzSpan)Zk.y+=jH*GA;return vec4(texTop(tex,Zk).xyz,lumaM);}void main(){vec4 Za=FxaaPixelShader(Jl,Dt,1.0/resolution,0.5,0.2,0.0833);CN=Za;}"
        },
        Do = {
            frag:
                "snippet version;precision highp float;uniform sampler2D JE;uniform sampler2D Dt;uniform sampler2D Nh;uniform vec3 Kp;uniform vec2 resolution;uniform float DY;uniform float Ft;in vec2 Jl;out vec4 CN;const int LX=16;const float qn=float(LX);const vec3 Jp[LX]=vec3[](vec3(0.5381,0.1856,-0.4319),vec3(0.1379,0.2486,0.4430),vec3(0.3371,0.5679,-0.0057),vec3(-0.6999,-0.0451,-0.0019),vec3(0.0689,-0.1598,-0.8547),vec3(0.0560,0.0069,-0.1843),vec3(-0.0146,0.1402,0.0762),vec3(0.0100,-0.1924,-0.0344),vec3(-0.3577,-0.5301,-0.4358),vec3(-0.3169,0.1063,0.0158),vec3(0.0103,-0.5869,0.0046),vec3(-0.0897,-0.4940,0.3287),vec3(0.7119,-0.0154,-0.0918),vec3(-0.0533,0.0596,-0.5411),vec3(0.0352,-0.0631,0.5460),vec3(-0.4776,0.2847,-0.0271));float rand(vec2 co){return fract(sin(dot(co.xy,vec2(12.9898,78.233)))*43758.5453);}const float Yu=0.03;const float SG=0.0000005;const float radius=0.004;const vec2 Yv=vec2(0.0,0.001);const vec2 Mt=vec2(0.001,0.0);vec3 normal_from_depth(float Jw,vec2 texcoords){float Tt=texture(Nh,texcoords+Yv).r;float Fj=texture(Nh,texcoords+Mt).r;vec3 p1=vec3(Yv,Tt-Jw);vec3 p2=vec3(Mt,Fj-Jw);vec3 hZ=cross(p1,p2);hZ.z=-hZ.z;return normalize(hZ);}void main(){float Jw=texture(Nh,Jl).r;vec3 wU=vec3(Jl.xy,Jw);vec3 hZ=normal_from_depth(Jw,Jl);float CR=Ft;float Cz=(2.0*0.1*CR)/(CR+0.1-Jw*(CR-0.1))/CR;float WW=radius/Cz;float TL=0.0;vec3 Hz=normalize(vec3(rand(Jl.xy),rand(Jl.yx),rand(Jl.xy*1.5)));for(int i=0;i<LX;i++){vec3 YD=WW*reflect(Jp[i],Hz);vec3 Aq=wU+sign(dot(YD,hZ))*YD;float EI=texture(Nh,clamp(Aq.xy,0.0,1.0)).r;float Yy=Jw-EI;TL+=step(SG,Yy)*(1.0-smoothstep(SG,Yu,Yy));}TL*=(1.0-smoothstep(0.6,1.0,Cz));TL*=(1.0/qn);TL=pow(TL,1.7);float MY=clamp(0.1+1.0-TL,0.0,1.0);CN=vec4(mix(Kp*0.2,vec3(1.0),MY),1.0);}"
        },
        Ro = {
            frag:
                "snippet version;precision highp float;uniform sampler2D JE;uniform sampler2D Dt;uniform vec2 resolution;in vec2 Jl;uniform int step;float weight[5]=float[5](0.227027,0.1945946,0.1216216,0.054054,0.016216);out vec4 CN;void main(){vec2 pP=2.0/resolution;vec3 result=vec3(1.0);if(step==0){result=texture(JE,Jl).rgb*weight[0];for(int i=1;i<5;++i){result+=texture(JE,Jl+vec2(pP.x*float(i),0.0)).rgb*weight[i];result+=texture(JE,Jl-vec2(pP.x*float(i),0.0)).rgb*weight[i];}}else{result=texture(JE,Jl).rgb*weight[0];for(int i=1;i<5;++i){result+=texture(JE,Jl+vec2(0.0,pP.y*float(i))).rgb*weight[i];result+=texture(JE,Jl-vec2(0.0,pP.y*float(i))).rgb*weight[i];}}if(step==1){result=result*texture(Dt,Jl).rgb;}CN=vec4(result,1.0);}"
        },
        Bo = {
            frag:
                "snippet version;uniform vec4 uT;uniform vec4 Tp;uniform vec3 offset;in vec2 Jl;out vec4 CN;void main(){float Qj=min(1.,max(0.,Jl.x+offset.x));CN=mix(uT,Tp,abs(sin(Qj*3.141*offset.z))*offset.y);CN.a*=sin(Jl.y*3.14);if(CN.a<0.01){discard;}CN.rgb*=CN.a;CN.a*=0.33;}",
            vert:
                "snippet version;in vec3 position;in vec2 Lz;out vec2 Jl;uniform mat4 kX;void main(){Jl=Lz;gl_Position=kX*vec4(position,1.0);}"
        },
        Fo = {
            frag: "snippet version;void main(){}",
            vert:
                "snippet version;in vec3 position;in vec2 Lz;in mat4 VN;uniform mat4 kX;out vec2 Jl;snippet xK;void main(){Jl=Lz;gl_Position=xK(kX*VN*vec4(position,1.0));}"
        },
        No = {
            frag:
                "snippet version;in vec2 Jl;uniform sampler2D KW;void main(){if(texture(KW,Jl).a<0.5)discard;}"
        },
        Lo = {
            frag:
                "snippet version;uniform sampler2D jx[8];in vec4 ZC;in vec4 Zn;in vec2 Jl;uniform int pG;float height;float count;snippet Hd;void computeColor(vec4 color,float value,vec4 info){float XG=(color.r+color.g+color.b)/3.0;height+=pow(smoothstep(info[1],info[2],XG)*value,2.5);count+=value;}void main(){height=0.0;if(pG==1){if(ZC[0]>0.0)computeColor(texture(jx[0],Jl*tinf0[0]),ZC[0],tinf0);if(ZC[1]>0.0)computeColor(texture(jx[1],Jl*tinf1[0]),ZC[1],tinf1);if(ZC[2]>0.0)computeColor(texture(jx[2],Jl*tinf2[0]),ZC[2],tinf2);if(ZC[3]>0.0)computeColor(texture(jx[3],Jl*tinf3[0]),ZC[3],tinf3);if(Zn[0]>0.0)computeColor(texture(jx[4],Jl*tinf4[0]),Zn[0],tinf4);if(Zn[1]>0.0)computeColor(texture(jx[5],Jl*tinf5[0]),Zn[1],tinf5);if(Zn[2]>0.0)computeColor(texture(jx[6],Jl*tinf6[0]),Zn[2],tinf6);if(Zn[3]>0.0)computeColor(texture(jx[7],Jl*tinf7[0]),Zn[3],tinf7);height/=count;}gl_FragDepth=gl_FragCoord.z-height*0.003;}",
            vert:
                "snippet version;in vec3 position;in vec2 Lz;in vec4 Bh;in vec4 Gb;uniform mat4 Cq;uniform mat4 Ux;out vec2 Jl;out vec4 ZC;out vec4 Zn;out vec3 jQ;snippet xK;void main(){ZC=Bh;Zn=Gb;Jl=Lz*16.0;gl_Position=xK(Ux*Cq*vec4(position,1.0));}"
        },
        Oo = {
            frag:
                "snippet version;uniform vec4 color;out vec4 CN;void main(){CN=color;}",
            vert:
                "snippet version;in vec3 position;in vec2 Lz;in vec3 hZ;out vec2 Jl;out vec3 hR;out vec3 qa;uniform mat4 Cq;uniform mat4 Ux;void main(){Jl=Lz;hR=hZ;qa=position;gl_Position=Ux*Cq*vec4(position,1.0);}"
        },
        qo = {
            frag:
                "snippet version;precision highp sampler2DShadow;snippet zj;snippet shadowsEnabled;uniform sampler2DShadow LG;uniform int Eo;uniform vec4 color;in vec3 hR;in vec3 PY;out vec4 CN;void main(){snippet Wl;vec4 result=color;float fX=(float(gl_FrontFacing)*2.0-1.0);float DZ=max(dot(hR*fX,Vr),0.0);if(shadowsEnabled==1&&Eo==1&&DZ>0.0&&PY.x>0.0&&PY.x<1.0&&PY.z>0.0&&PY.z<1.0){float Xs=texture(LG,PY+vec3(0.0,0.0,-0.001*fX));DZ*=Xs;}result.rgb=result.rgb*KK*DZ+result.rgb*Kp;snippet Dy;CN=result;}",
            vert:
                "snippet version;in vec3 position;in vec3 hZ;snippet zj;snippet shadowsEnabled;out vec3 hR;out vec2 Jl;out vec3 PY;snippet xK;uniform mat4 zd;uniform mat4 kX;uniform mat4 Ua;void main(){hR=hZ;vec4 Xr=zd*vec4(position,1.0);snippet YL;if(shadowsEnabled==1){vec4 HQ=xK(Ua*Xr);PY=(HQ.xyz/HQ.w)*0.5+0.5;}gl_Position=kX*Xr;}"
        },
        Ho = {
            frag:
                "snippet version;uniform sampler2D KW;in vec2 Jl;in vec3 hR;out vec4 CN;void main(){vec4 Za=texture(KW,Jl);vec3 hZ=normalize(hR);vec3 xu=normalize(vec3(1.0,1.0,0.3));float PZ=dot(hZ,xu)*0.5;CN=Za;if(CN.a<0.2)discard;CN.rgb*=vec3(0.5)+PZ;}",
            vert:
                "snippet version;in vec2 Lz;in vec3 position;in vec3 hZ;uniform mat4 Cq;uniform mat4 Ux;out vec2 Jl;out vec3 hR;void main(){Jl=Lz;hR=hZ;gl_Position=Ux*Cq*vec4(position,1.0);}"
        },
        Wo = {
            frag:
                "snippet version;snippet zj;uniform float QZ;uniform sampler2D Oh;in vec2 Jl;in vec3 qa;out vec4 CN;void main(){gl_FragDepth=0.999999;vec3 result=vec3(0.0);float wV=dot(Vr,normalize(qa));float wN=pow((1.0+wV)*0.5,3.0);vec3 JJ=UO;vec3 hA=PF;float c=pow(max(0.0,min(1.0,(1.0-(0.5+qa.y))*2.0)),3.0);float vQ=0.0;if(c<0.85){vQ=smoothstep(0.85-wN*0.8,0.85,c);}else{vQ=1.0-smoothstep(0.85,1.0,c);}c=pow(c,(1.0-wN)*3.0);hA+=KK*vQ*0.4*wN;JJ=mix(UO*0.8,JJ,wN);result=mix(JJ,hA,c);float Sj=1.0-sin(QZ*6.28)+0.02;float xg=max(0.0,min(1.0,qa.y*5.0))*0.4;result+=texture(Oh,vec2(Vr.x*0.5-Jl.x,Jl.y)).rgb*Sj*xg;CN=vec4(result,1.0);}",
            vert:
                "snippet version;in vec3 position;in vec2 Lz;uniform mat4 Cq;uniform mat4 Ux;out vec2 Jl;out vec3 qa;void main(){Jl=Lz;qa=position;gl_Position=Ux*Cq*vec4(qa,1.0);}"
        },
        Zo = {
            frag:
                "snippet version;precision highp float;in vec2 Jl;uniform float seed;float stars(in vec2 Lz,float scale){Lz*=scale;vec2 s=floor(Lz),f=fract(Lz),p;float k=3.,d;p=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*5.))-f;d=length(p);k=min(d,k);return smoothstep(0.,k,sin(f.x+f.y)*0.003);}snippet qg;snippet Qr;out vec4 CN;void main(){vec2 wU=vec2(Jl.x+seed,Jl.y);float n=stars(Jl,10.0);n+=stars(Jl,20.0)*0.5;n+=stars(Jl,30.0)*0.2;n*=noise(Jl*20.0);vec2 UW=vec2(Jl.x*3.0+5.0,Jl.y*5.0);float vk=noise(UW)*0.9;vk+=noise(UW*1.5)*0.5;vk+=noise(UW*2.9)*0.25;vk*=noise(UW*0.3)*0.1;vk*=1.0-distance(vec2(0.5),Jl)*2.0;CN.rgb+=n*4.0+vk*2.5;}"
        },
        jo = {
            frag:
                "snippet version;snippet zj;uniform float QZ;in vec2 Jl;out vec4 CN;void main(){gl_FragDepth=0.999998;float height=max(0.0,min(1.0,abs(sin(QZ*6.282))+Jl.y*0.1-0.15));float Wm=min(1.0,pow((1.0-height*height),100.0));float circle=0.5-length(vec2(0.5,0.5)-Jl);float alpha=smoothstep(0.0,1.0,circle)*2.0;alpha+=smoothstep(0.4,0.45,circle);CN.rgba=vec4(mix(vec3(1.0),PF,Wm),alpha);}"
        },
        Go = {
            frag:
                "snippet version;precision highp sampler2DShadow;in vec3 hR;in vec3 uh;in vec3 qa;in vec3 jQ;uniform vec4 zW;snippet zj;snippet shadowsEnabled;snippet Hd;in vec3 PV;in vec2 Jl;uniform sampler2D jx[8];in vec4 ZC;in vec4 Zn;vec4 result;float detail;uniform sampler2DShadow LG;in vec3 PY;void computeColor(vec4 color,float value,vec4 info){float XG=max(max(color.x,color.y),color.z);color.a=pow(smoothstep(info[1],info[2],XG)*value,2.5);detail+=info[3]*color.a;color.rgb=color.rgb*min(1.0,value*0.5+0.7)*color.a;result+=color;}out vec4 CN;void main(){snippet Wl;if(ZC[0]>0.0)computeColor(texture(jx[0],Jl*tinf0[0]),ZC[0],tinf0);if(ZC[1]>0.0)computeColor(texture(jx[1],Jl*tinf1[0]),ZC[1],tinf1);if(ZC[2]>0.0)computeColor(texture(jx[2],Jl*tinf2[0]),ZC[2],tinf2);if(ZC[3]>0.0)computeColor(texture(jx[3],Jl*tinf3[0]),ZC[3],tinf3);if(Zn[0]>0.0)computeColor(texture(jx[4],Jl*tinf4[0]),Zn[0],tinf4);if(Zn[1]>0.0)computeColor(texture(jx[5],Jl*tinf5[0]),Zn[1],tinf5);if(Zn[2]>0.0)computeColor(texture(jx[6],Jl*tinf6[0]),Zn[2],tinf6);if(Zn[3]>0.0)computeColor(texture(jx[7],Jl*tinf7[0]),Zn[3],tinf7);result.rgb/=result.a*0.85;detail/=result.a;result.a=1.0;float DZ=dot(hR,Vr);float Dz=0.0;if(DZ>0.0){if(shadowsEnabled==1&&PY.x>0.0&&PY.x<1.0&&PY.y>0.0&&PY.y<1.0){float Xs=texture(LG,PY);snippet TG;DZ=min(clamp(DZ,0.0,1.0),max(Xs,TG));}vec3 Ug=reflect(-Vr,hR);float Gh=max(dot(Ug,uh),0.0);Dz=pow(Gh,8.5)*2.0;}float TX=length(result.rgb)*3.0*detail;float DV=pow((TX-0.5),3.0)*0.5+0.2;float vG=pow((TX-0.5)*DZ,3.0)*1.2;if(TX>1.2){vG*=1.3;DV*=1.3;}Dz*=vG;vec3 KD=result.rgb*KK*DZ*0.65;vec3 QP=result.rgb*Kp;result.rgb=QP+KD+vec3(Dz)*0.15+PV*DV;float xb=distance(qa.xz,jQ.xz);result.rgb=mix(result.rgb,zW.rgb,zW.a*((xb<jQ.y ? xb/jQ.y : 0.0)*0.5+max(0.,(0.11-abs(jQ.y-xb))/0.1)));snippet Dy;CN=result;}",
            vert:
                "snippet version;snippet zj;snippet JG;snippet xK;snippet shadowsEnabled;in vec3 position;in vec3 hZ;in vec2 Lz;in vec4 Bh;in vec4 Gb;uniform mat4 zd;uniform mat4 kX;uniform mat4 Ua;uniform vec3 oZ;out vec3 QW;out vec3 hR;out vec3 qa;out vec2 Jl;out vec4 HQ;out vec3 PY;out vec4 ZC;out vec4 Zn;out vec3 uh;out vec3 jQ;void main(){jQ.xz=oZ.xz-(zd*vec4(0.0,0.0,0.0,1.0)).xz;jQ.y=oZ.y;qa=position;hR=hZ;ZC=Bh;Zn=Gb;Jl=Lz*16.0;Xr=zd*vec4(position,1.0);snippet rq;snippet YL;uh=-normalize(Xr.xyz-AQ);if(shadowsEnabled==1){vec4 Bc=xK(Ua*(Xr));PY=(Bc.xyz/Bc.w)*0.5+0.5;}gl_Position=kX*Xr;}"
        },
        Vo = {
            frag:
                "snippet version;in vec3 qa;in vec3 jQ;out vec4 CN;void main(){float xb=distance(qa.xz,jQ.xz);if(xb>jQ.y){CN.rgba=vec4(0.0,0.0,0.0,1.0);}else{CN.rgba=mix(vec4(0.0,1.0,0.0,1.0),vec4(0.0,0.0,0.0,1.0),xb/jQ.y);}}",
            vert:
                "snippet version;in vec3 position;in vec3 hZ;uniform mat4 zd;uniform mat4 Cq;uniform mat4 Ux;uniform vec3 oZ;out vec3 qa;out vec3 jQ;void main(){jQ.xz=oZ.xz-(zd*vec4(0.0,0.0,0.0,1.0)).xz;jQ.y=oZ.y;qa=position;gl_Position=Ux*Cq*vec4(position+hZ*0.001,1.0);}"
        },
        Yo = {
            frag:
                "snippet version;snippet zj;snippet shadowsEnabled;uniform float time;uniform mat4 TW;uniform float visibility;uniform float speed;uniform vec3 YM;uniform vec3 Vf;uniform vec3 qZ;uniform sampler2D Eg;uniform sampler2D pk;uniform sampler2D WY;in vec2 Jl;in vec3 hR;out vec4 CN;snippet xK;float getWaterDepth(vec2 wU,float z){return texture(Eg,wU).r-z;}void main(){snippet Wl;ivec2 Rs=textureSize(Eg,0);float HW=1.0/float(Rs.x);vec4 WO=xK(TW*Xr);vec3 GH=(WO.xyz/WO.w)*0.5+0.5;float Jw=1.0;if(shadowsEnabled==1){if(GH.x>0.0&&GH.x<1.0&&GH.y>0.0&&GH.y<1.0){float YF=GH.z;float Rv=HW*0.5;float ZI=getWaterDepth(GH.xy+vec2(-Rv,-Rv),GH.z);float Yx=getWaterDepth(GH.xy+vec2(Rv,-Rv),GH.z);float JK=getWaterDepth(GH.xy+vec2(-Rv,Rv),GH.z);float NH=getWaterDepth(GH.xy+vec2(Rv,Rv),GH.z);float SZ=mod(GH.x-Rv,HW)/HW;float Ku=mod(GH.y-Rv,HW)/HW;Jw=mix(mix(ZI,Yx,SZ),mix(JK,NH,SZ),Ku);}else{Jw=1.0;}Jw*=50.0;}float speed=speed*0.01;float MT=0.0;vec3 hZ=normalize(hR);vec2 dir=normalize(hR.xz);float kZ=1.0;for(int i=0;i<2;++i){float Ae=1.0/3.0*float(i);float t=mod(time*0.2+Ae,1.0)*3.141;float Tz=speed+0.2;vec2 shift=vec2(Tz*dir.y*t+Ae,Tz*dir.x*t+Ae);float curve=abs(sin(t));MT+=texture(pk,Jl.yx*0.5+shift).r*curve;kZ+=((sin((Jl.x+shift.y)*10.0)+cos((Jl.y+shift.x)*10.0))*curve*(0.2+Tz*0.6));}float rF=visibility/100.0;vec4 Fm=texture(WY,Jl.yx+time*speed*2.0+MT*0.1);vec4 hJ=vec4(YM,0.0);vec4 BT=vec4(YM,0.9);vec4 HF=vec4(mix(YM,Vf,0.9)*0.8,0.5)+speed*0.1;vec4 uY=vec4(Vf,0.4)+Fm*0.05;vec4 PQ=vec4(mix(Vf,qZ,0.5),0.8-rF*0.4)+Fm*0.08;vec4 fj=vec4(qZ,1.4-rF*0.8)+Fm*0.12;float cH=0.03+0.01*MT;float PP=cH+0.02+speed*0.05+0.03*MT+kZ*0.02;float WK=PP+(0.05+speed*0.5*MT+kZ*0.05)*rF;float Iq=WK+(0.2+speed*0.2-MT*0.1)*rF;float Nz=Iq+(0.2)*rF;vec4 result=vec4(0.0);if(Jw<cH){result=mix(hJ,BT,smoothstep(0.0,cH,Jw));}else if(Jw<PP){result=mix(BT,HF,smoothstep(cH,PP,Jw));}else if(Jw<WK){result=mix(HF,uY,smoothstep(PP+(WK-PP)*0.3,WK,Jw));}else if(Jw<Iq){result=mix(uY,PQ,smoothstep(WK+(Iq-WK)*0.4,Iq,Jw));}else{result=mix(PQ,fj,smoothstep(Nz,1.0,Jw));}result.rgb+=(abs(hZ.x)+abs(hZ.z))*0.5-0.2;float DZ=max(dot(Vr,hZ),0.0);float Ij=0.0;vec3 Ug=reflect(-Vr,hZ);vec3 vu=-normalize(Xr.xyz-AQ);float Gh=max(dot(Ug,vu),0.0);Ij=min(1.0,max(0.0,pow(Gh,10.0)))*0.6;result.rgb=result.rgb*KK*DZ+result.rgb*Kp+Ij*KK;snippet Dy;CN=result;}",
            vert:
                "snippet version;snippet zj;uniform mat4 zd;uniform mat4 kX;uniform float time;uniform int Xj;uniform float KP;uniform float Dq;uniform float speed;in vec3 position;in vec3 hZ;in vec2 Lz;out vec3 hR;out vec2 Jl;out vec3 CP;void main(){vec4 wU=vec4(position,1.0);if(Xj==0){if(wU.x<=-0.5)wU.x-=10.0;if(wU.z<=-0.5)wU.z-=10.0;if(wU.x>=0.5)wU.x+=10.0;if(wU.z>=0.5)wU.z+=10.0;}Xr=zd*wU;Xr.y+=cos(Xr.z*Dq*0.005)*sin(Xr.x*0.1+Xr.z*Dq*0.008+time*speed*0.1)*KP*0.03;snippet YL;Jl=Xr.xz/2.0;hR=vec3(0.01,0.8,0.002)*6.5;gl_Position=kX*Xr;}"
        };
    var Jo = Object.freeze({
        __proto__: null,
        clouds: Mo,
        cloudsTex: Eo,
        drop: Co,
        foliage: To,
        multimeshFlat: _o,
        multimeshSimple: Po,
        multimeshTextured: Uo,
        multimeshTileable: Io,
        particles: zo,
        post: Ao,
        ssao: Do,
        ssaoBlur: Ro,
        ribbon: Bo,
        shadowInstanced: Fo,
        shadowInstancedAlpha: No,
        shadowTerrain: Lo,
        simple: Oo,
        simpleShaded: qo,
        simpleTextured: Ho,
        sky: Wo,
        skyStarTex: Zo,
        sun: jo,
        terrain: Go,
        terrainDebug: Vo,
        water: Yo
    });
    const Xo = {
            version:
                "#version 300 es\n    precision highp float;\n    precision highp int;\n  ",
            zj:
                "\n    uniform vec3 Kp;\n    uniform vec3 Vr;\n    uniform vec3 KK;\n    uniform vec3 UO;\n    uniform vec3 PF;\n    uniform float DY;\n    uniform float Ft;\n    uniform vec3 AQ;\n    out float uG; // V\n    out vec4 Xr; // V\n    in float uG; // F\n    in vec4 Xr; // F\n  ",
            shadowsEnabled: `\n    const int shadowsEnabled = ${
                vi.shadows ? 1 : 0
            };\n  `,
            JG:
                "\n    uniform vec4 vH[16];\n    uniform vec3 Ck[16];\n    uniform int Pm;\n    out vec3 PV;\n  ",
            rq:
                "\n    vec3 xu = vec3(0.0);\n    for(int i = 0; i < Pm; ++i){\n      vec3 WH = Ck[i] - Xr.xyz;\n      float Hs = vH[i].w-dot(WH,WH);\n      if(Hs > 0.0){\n        Hs /= (vH[i].w);\n        Hs = Hs*Hs;\n        xu += max(0.0,dot(normalize(WH), hR)) * vH[i].rgb*Hs;\n      } \n    }\n    PV = xu;\n  ",
            YL: "\n    uG = length(AQ - Xr.xyz);\n  ",
            Wl:
                "\n    float fogValue = uG;\n    if(fogValue > Ft){\n      float fogFade = Ft*0.1;\n      float fogPatt = 0.5 - sin(Xr.x*2.0)*0.25+sin(Xr.y*2.0)*0.25;\n      if(fogValue + fogPatt*fogFade  >= Ft+fogFade) discard;\n    } ",
            TG: "\n    float TG = smoothstep(DY*1.5, Ft*0.75, fogValue);\n  ",
            Dy:
                "\n    result.rgb = mix(result.rgb, PF, smoothstep(DY, Ft, fogValue));",
            xK:
                "\n    vec4 xK(vec4 wU){\n      wU.x = 2.0 / (1.0+exp(-10.0*wU.x)) - 1.0;\n      wU.y = 2.0 / (1.0+exp(-10.0*wU.y)) - 1.0;\n      return wU;\n    }",
            qg:
                "\n    vec2 hash( vec2 p ) {\n    p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n    return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n  }",
            Qr:
                "float noise( in vec2 p ) {\n    const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n    vec2 i = floor(p + (p.x+p.y)*K1); \n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0);\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n    vec3 n =h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    float d = dot(n, vec3(70.0));\n    return smoothstep(-1.0,1.0,d);\n  }",
            Hd: Array(8)
                .fill(0)
                .map((t, e) => `uniform vec4 tinf${e};`)
                .join("")
        },
        Qo = (t, e) =>
            t.replace(/snippet (\w+);/g, (t, s) => {
                let i = Xo[s].split("\n");
                return (i = i.filter(
                    t =>
                        !(0 == e && t.indexOf("// F") > -1) &&
                        !(1 == e && t.indexOf("// V") > -1)
                )).join("\n");
            });
    let Ko = 0,
        tl = 0;
    const el = [0, 0, 0];
    let sl = !1;
    const il = {},
        nl = {},
        al = [0, 0, 0],
        rl = {},
        ol = t => {
            sl = t;
        },
        ll = t => {
            wi(al, t);
        };
    var cl = Object.freeze({
        __proto__: null,
        get needUpdate() {
            return sl;
        },
        targets: il,
        targetSets: nl,
        size: 1024,
        cameras: rl,
        init: () => {
            (rl.LG = new gn(Fn)),
                (rl.water = new gn(Fn)),
                Hn.addChild(rl.LG),
                Hn.addChild(rl.water),
                (il.shadowStatic = new Tn(Fn, {
                    width: 1024,
                    height: 1024,
                    color: 0,
                    depthTexture: !0,
                    depthCompareMode: Fn.COMPARE_REF_TO_TEXTURE
                })),
                (il.LG = new Tn(Fn, {
                    width: 1024,
                    height: 1024,
                    color: 0,
                    depthTexture: !0,
                    depthCompareMode: Fn.COMPARE_REF_TO_TEXTURE
                })),
                (il.water = new Tn(Fn, {
                    width: 1024,
                    height: 1024,
                    color: 0,
                    depthTexture: !0
                }));
            for (const t in il) nl[t] = new Set([il[t]]);
        },
        tick: ({ dt: t, viewRange: e, world: s, camera: i }) => {
            const n = i.CR;
            if (Ko != n) {
                (Ko = n), (sl = !0);
                for (const t in rl)
                    rl[t].orthographic({
                        near: 0.1,
                        CR: "LG" == t ? 2 * n : 200,
                        left: -n,
                        right: n,
                        bottom: -n,
                        top: n
                    }),
                        rl[t].updateMatrixWorld();
            }
            (sl || s.time - tl > 10 || Ci(Ln.position, el) > 15) &&
                (wi(rl.LG.position, al),
                Mi(rl.LG.position, rl.LG.position, n),
                rl.LG.lookAt(jn, Zn),
                $i(rl.LG.position, rl.LG.position, Ln.position),
                xi(rl.water.position, 1e-4, 100, 0),
                rl.water.lookAt(jn, Zn),
                $i(rl.water.position, rl.water.position, Ln.position),
                (rl.water.position[1] = 200),
                wi(el, Ln.position),
                (sl = !0),
                (tl = s.time));
        },
        setNeedUpdate: ol,
        setDirectional: ll
    });
    let hl = {};
    const dl = (t, e) => {
            t.value !== t.cache && (t.state++, (t.cache = t.value));
        },
        ul = (t, e) => {
            if (!t.value) return;
            (t.value.length ? t.value : [t.value]).forEach(s => {
                s.id !== e.state.textureUnits[s.textureUnit] && t.state++;
            });
        },
        ml = (t, e) => {
            (t.cache &&
                (function (t, e) {
                    return t[0] === e[0] && t[1] === e[1];
                })(t.value, t.cache)) ||
                (t.state++,
                t.cache ? _n(t.cache, t.value) : (t.cache = t.value.slice()));
        },
        pl = (t, e) => {
            (t.cache &&
                (function (t, e) {
                    return t[0] === e[0] && t[1] === e[1] && t[2] === e[2];
                })(t.value, t.cache)) ||
                (t.state++,
                t.cache ? wi(t.cache, t.value) : (t.cache = t.value.slice()));
        },
        fl = (t, e) => {
            (t.cache &&
                (function (t, e) {
                    return (
                        t[0] === e[0] &&
                        t[1] === e[1] &&
                        t[2] === e[2] &&
                        t[3] === e[3]
                    );
                })(t.value, t.cache)) ||
                (t.state++,
                t.cache ? tn(t.cache, t.value) : (t.cache = t.value.slice()));
        },
        gl = (t, e) => {
            (t.cache &&
                (function (t, e) {
                    return (
                        t[0] === e[0] &&
                        t[1] === e[1] &&
                        t[2] === e[2] &&
                        t[3] === e[3] &&
                        t[4] === e[4] &&
                        t[5] === e[5] &&
                        t[6] === e[6] &&
                        t[7] === e[7] &&
                        t[8] === e[8] &&
                        t[9] === e[9] &&
                        t[10] === e[10] &&
                        t[11] === e[11] &&
                        t[12] === e[12] &&
                        t[13] === e[13] &&
                        t[14] === e[14] &&
                        t[15] === e[15]
                    );
                })(t.value, t.cache)) ||
                (t.state++,
                t.cache ? ji(t.cache, t.value) : (t.cache = t.value.slice()));
        },
        vl = {},
        yl = t => {
            hl.kX.state++,
                (vl.shadowTerrain.frontFace = t.CW),
                (vl.shadowTerrain.uniforms.pG.value = 0);
        },
        bl = t => {
            hl.kX.state++,
                (vl.shadowTerrain.frontFace = t.CCW),
                (vl.shadowTerrain.uniforms.pG.value = 1);
        },
        wl = t => {
            hl.Ua.state++, hl.kX.state++;
        },
        xl = t => {
            hl.TW.state++;
        };
    var kl = Object.freeze({
        __proto__: null,
        shaders: vl,
        tick: ({ dt: t, world: e, renderer: s }) => {
            (({ dt: t, world: e, renderer: s }) => {
                hl.time.value = e.smoothtime % 600;
                for (const t in hl) {
                    const e = hl[t];
                    null !== e.c && e.c(e, s);
                }
            })({ dt: t, world: e, renderer: s });
        },
        init: () => {
            if (
                ((() => {
                    hl = {
                        resolution: { c: ml, value: [0, 0] },
                        time: { c: dl, value: 0 },
                        QZ: { c: dl, value: 0 },
                        Kp: { c: pl, value: [0, 0, 0] },
                        UO: { c: pl, value: [0, 0, 0] },
                        Vr: { c: pl, value: [0, 0, 0] },
                        KK: { c: pl, value: [0, 0, 0] },
                        DY: { c: dl, value: 0 },
                        Ft: { c: dl, value: 0 },
                        PF: { c: pl, value: [0, 0, 0] },
                        AQ: { c: pl, value: Nn.worldPosition },
                        Ua: { c: gl, value: rl.LG.kX },
                        LG: { c: ul, value: il.LG.depthTexture },
                        TW: { c: gl, value: rl.water.kX },
                        Eg: { c: ul, value: il.water.depthTexture },
                        pk: { c: ul },
                        WY: { c: ul },
                        vH: { c: null, value: [0, 0, 0, 0] },
                        Ck: { c: null, value: [0, 0, 0] },
                        Pm: { c: dl, value: 0 },
                        Hl: { c: ul },
                        RK: { c: ul },
                        jx: { c: ul, value: Mr.terrain },
                        Ux: { c: gl, value: Nn.Ux },
                        kX: { c: gl, value: Nn.kX },
                        Oh: { c: ul },
                        Dc: { c: ul },
                        oZ: { c: pl, value: [0, 0, 0] },
                        zW: { c: fl, value: [0, 1, 0, 1] },
                        movieMode: { c: dl, value: 0 }
                    };
                    for (let t = 0; t < 8; ++t)
                        hl["tinf" + t] = { c: null, value: [0, 0, 0, 0] };
                    for (const t in hl) hl[t].state = 1;
                })(),
                (t => {
                    for (const e in t)
                        t[e].vert && (t[e].vert = Qo(t[e].vert, 0)),
                            t[e].frag && (t[e].frag = Qo(t[e].frag, 1));
                })(Jo),
                vi.ssao)
            ) {
                On.addPass({ fragment: Do.frag, globalUniforms: hl });
                for (let t = 0; t < 2; ++t)
                    On.addPass({
                        fragment: Ro.frag,
                        uniforms: { step: { value: t } },
                        globalUniforms: hl,
                        postDraw:
                            0 == t
                                ? void 0
                                : () => {
                                      Fn.bindFramebuffer(
                                          Fn.READ_FRAMEBUFFER,
                                          On.ping.buffer
                                      ),
                                          Fn.bindFramebuffer(
                                              Fn.DRAW_FRAMEBUFFER,
                                              On.original.buffer
                                          ),
                                          Fn.blitFramebuffer(
                                              0,
                                              0,
                                              On.pong.width,
                                              On.pong.height,
                                              0,
                                              0,
                                              On.pong.width,
                                              On.pong.height,
                                              Fn.COLOR_BUFFER_BIT,
                                              Fn.NEAREST
                                          );
                                  }
                    });
            }
            On.addPass({ fragment: Ao.frag, globalUniforms: hl }),
                (vl.foliage = new qi(Fn, {
                    vertex: To.vert,
                    fragment: To.frag,
                    cullFace: null,
                    active: !1,
                    globalUniforms: hl
                })),
                (vl.multimeshFlat = new qi(Fn, {
                    vertex: _o.vert,
                    fragment: _o.frag,
                    instanced: { color: { size: 4 } },
                    globalUniforms: hl
                })),
                (vl.multimeshTextured = new qi(Fn, {
                    vertex: Uo.vert,
                    fragment: Uo.frag,
                    globalUniforms: hl
                })),
                (vl.multimeshTileable = new qi(Fn, {
                    vertex: Io.vert,
                    fragment: Uo.frag,
                    instanced: { qt: { size: 1 } },
                    globalUniforms: hl
                })),
                (vl.multimeshSimple = new qi(Fn, {
                    vertex: Po.vert,
                    fragment: Po.frag,
                    instanced: { color: { size: 4 } },
                    globalUniforms: hl
                })),
                (vl.drop = new qi(Fn, {
                    vertex: Co.vert,
                    fragment: Co.frag,
                    instanced: { MW: { size: 4 }, Pw: { size: 4 } },
                    globalUniforms: hl
                })),
                (vl.terrain = new qi(Fn, {
                    vertex: Go.vert,
                    fragment: Go.frag,
                    globalUniforms: hl,
                    autoUniforms: ["KW"]
                })),
                (vl.sun = new qi(Fn, {
                    vertex: Oo.vert,
                    fragment: jo.frag,
                    transparent: !0,
                    globalUniforms: hl
                })),
                (vl.clouds = new qi(Fn, {
                    vertex: Oo.vert,
                    fragment: Mo.frag,
                    transparent: !0,
                    frontFace: Fn.CW,
                    globalUniforms: hl
                })),
                (vl.water = new qi(Fn, {
                    vertex: Yo.vert,
                    fragment: Yo.frag,
                    transparent: !0,
                    active: !1,
                    globalUniforms: hl
                })),
                (vl.sky = new qi(Fn, {
                    vertex: Wo.vert,
                    fragment: Wo.frag,
                    cullFace: null,
                    depthTest: !0,
                    globalUniforms: hl
                })),
                (vl.shadowInstancedAlpha = new qi(Fn, {
                    vertex: Fo.vert,
                    fragment: No.frag,
                    autoUniforms: ["KW"],
                    globalUniforms: hl
                })),
                (vl.shadowInstanced = new qi(Fn, {
                    vertex: Fo.vert,
                    fragment: Fo.frag,
                    globalUniforms: hl
                })),
                (vl.shadowTerrain = new qi(Fn, {
                    vertex: Lo.vert,
                    fragment: Lo.frag,
                    globalUniforms: hl,
                    uniforms: { pG: { value: 1 } }
                })),
                (vl.particles = new qi(Fn, {
                    vertex: zo.vert,
                    fragment: zo.frag,
                    active: !1,
                    transparent: !0,
                    depthWrite: !1,
                    globalUniforms: hl
                })),
                (vl.ribbon = new qi(Fn, {
                    vertex: Bo.vert,
                    fragment: Bo.frag,
                    transparent: !0,
                    cullFace: null,
                    depthWrite: !1,
                    globalUniforms: hl
                }));
        },
        onBeforeShadow: yl,
        onBeforeWater: bl,
        onAfterShadow: wl,
        onAfterWater: xl
    });
    let $l;
    var Sl = Object.freeze({
        __proto__: null,
        get mesh() {
            return $l;
        },
        init: () => {
            ki(($l = new yn(Fn, { program: vl.sky })).scale, 40),
                $l.setParent(Hn),
                ($l.visible = !1),
                ($l.renderOrder = 6e3),
                ($l.frustumCulled = !1),
                wr("engine/dome.ho", t => {
                    const e = new Li(Fn, t);
                    $l.geometry = e;
                    const s = Pr(Zo.frag, 1024, qn);
                    (vl.sky.uniforms.Oh.value = s),
                        vl.sky.uniforms.Oh.state++,
                        ($l.visible = !0);
                });
        },
        tick: ({ camera: t, cameraPivot: e }) => {
            e.updateMatrixWorld(),
                ($l.position[0] = 0.998 * t.VN[12]),
                ($l.position[1] = 0.998 * t.VN[13]),
                ($l.position[2] = 0.998 * t.VN[14]);
        }
    });
    let Ml, El;
    var Cl = Object.freeze({
        __proto__: null,
        get mesh() {
            return Ml;
        },
        get geometry() {
            return El;
        },
        init: () => {
            vi.clouds &&
                wr("engine/dome.ho", t => {
                    (El = new Li(Fn, t)),
                        ((Ml = new yn(Fn, {
                            geometry: El,
                            program: vl.clouds
                        })).position[1] = 0),
                        (Ml.offset = 0),
                        ki(Ml.scale, 0.2),
                        (Ml.scale[1] *= 0.3),
                        (Ml.renderOrder = 4e3),
                        (Ml.frustumCulled = !1),
                        (Ml.matrixAutoUpdate = !1),
                        Ml.updateMatrix(),
                        Ml.setParent($l);
                    const e = Pr(Eo.frag, 1024, qn);
                    (vl.clouds.uniforms.Dc.value = e),
                        vl.clouds.uniforms.Dc.state++;
                });
        }
    });
    const Tl = [];
    let _l, Pl, Ul;
    const Il = ({ Za: t, size: e }, s, i) => (
        s || (((s = new un()).remove = !1), Tl.push(s)),
        (s.VN = i),
        (s.val = [...t, e]),
        s
    );
    var zl = Object.freeze({
        __proto__: null,
        DV: Tl,
        init: () => {
            (Pl = hl.vH), (_l = hl.Ck), (Ul = hl.Pm);
        },
        tick: ({ dt: t }) => {
            Tl.sort((t, e) => t.camDistance - e.camDistance);
            for (let t = 0, e = Tl.length; t < e; ++t) {
                const s = Tl[t];
                if (s.remove) Tl.splice(t, 1), --t, --e;
                else if (t < 16) {
                    const e = 4 * t,
                        i = 3 * t;
                    (_l.value[i] = s.VN[12]),
                        (_l.value[i + 1] = s.VN[13]),
                        (_l.value[i + 2] = s.VN[14]),
                        (Pl.value[e] = s.val[0]),
                        (Pl.value[e + 1] = s.val[1]),
                        (Pl.value[e + 2] = s.val[2]),
                        (Pl.value[e + 3] = s.val[3] * (1 - s.distanceFactor));
                }
            }
            _l.state++, Pl.state++, (Ul.value = Math.min(16, Tl.length));
        },
        createLight: Il,
        destroy: ({ chunk: t, gl: e, scene: s }) => {
            for (let t = 0; t < Tl.length; ++t) Tl[t].remove = !0;
        },
        onWorldDestroy: ({ world: t }) => {
            Tl.length = 0;
        }
    });
    class Al {
        constructor(t = 0, e = 0) {
            this.reset(t, e);
        }
        done(t) {
            return t > this.end;
        }
        fraction(t) {
            return na(1 - (this.end - t) / (this.end - this.start), 0, 1);
        }
        remaining(t) {
            return this.end - t;
        }
        passed(t) {
            return t - this.start;
        }
        reset(t, e = this.duration) {
            return (
                (this.start = t), (this.end = t + e), (this.duration = e), !0
            );
        }
        set(t, e) {
            return (
                (this.start = t),
                (this.end = e),
                (this.duration = this.end - this.start),
                !0
            );
        }
    }
    const Dl = [],
        Rl = new Uint32Array(66);
    for (let t = 0, e = 0; t < 66; t += 6, e += 2)
        (Rl[t + 0] = e),
            (Rl[t + 1] = e + 1),
            (Rl[t + 2] = e + 3),
            (Rl[t + 3] = e),
            (Rl[t + 4] = e + 3),
            (Rl[t + 5] = e + 2);
    const Bl = new Map(),
        Fl = t => {
            const e = Bl.get(t.steps || 10);
            let s;
            return (
                (s = e && 0 !== e.length ? e.pop() : new Ll(t)).reset(t),
                Dl.push(s),
                s
            );
        },
        Nl = t => {
            t.mesh.setParent(null);
        };
    class Ll {
        constructor(t) {
            (this.maxSteps = t.steps || 10),
                (this.stepTimer = new Al(0, 1)),
                (this.timer = new Al(0, 1)),
                (this.lines = this.maxSteps + 1),
                (this.Lz = new Float32Array(4 * this.lines)),
                (this.positions = new Float32Array(6 * this.lines)),
                (this.geometry = new Li(Fn, {
                    position: { size: 3, data: this.positions },
                    Lz: { size: 2, data: this.Lz },
                    index: {
                        type: Fn.UNSIGNED_INT,
                        data: Rl.subarray(0, 6 * this.maxSteps)
                    }
                })),
                (this.mesh = new yn(Fn, {
                    frustumCulled: !1,
                    geometry: this.geometry,
                    matrixAutoUpdate: !1,
                    program: vl.ribbon
                })),
                (this.mesh.offset = [0, this.maxSteps, 1]);
        }
        reset(t) {
            if (
                (this.stepTimer.reset(0, t.interval || 0.5),
                this.timer.reset(Wn.time, t.timer || 1),
                (this.currentStep = 0),
                (this.permanent = t.permanent || !1),
                (this.a = t.a),
                (this.b = t.b),
                (this.mesh.offset[2] = t.repeat || 0.5),
                (this.remove = !1),
                (this.timeoutSteps = 0),
                (t.uvTop = t.uvTop || 1),
                (t.uvBot = t.uvBot || 0),
                this.uvTop !== t.uvTop || this.uvBot !== t.uvBot)
            ) {
                for (let e = 0, s = 0; e < this.lines; ++e, s += 4)
                    (this.Lz[s] = e / this.maxSteps),
                        (this.Lz[s + 2] = e / this.maxSteps),
                        (this.Lz[s + 1] = t.uvTop),
                        (this.Lz[s + 3] = t.uvBot);
                (this.uvTop = t.uvTop),
                    (this.uvBot = t.uvBot),
                    this.geometry.updateAttribute(this.geometry.attributes.Lz);
            }
            (this.geometry.drawRange.count = 0),
                (this.mesh.uT = this.uT = t.uT),
                (this.mesh.Tp = this.Tp = t.Tp),
                this.mesh.setParent(Hn),
                (this.parent = t.parent || Hn);
        }
        tick(t) {
            if (this.timer.done(Wn.time) && !this.permanent)
                return void (this.remove = !0);
            if (null !== this.parent) {
                if (
                    ((this.mesh.visible =
                        this.parent.visible &&
                        (!this.parent.parent || this.parent.parent.visible)),
                    !this.mesh.visible || this.parent.worldMatrixNeedsUpdate)
                )
                    return;
                this.mesh.visible &&
                    0 == this.timeoutSteps &&
                    (this.positions.set(Ii(Gn, this.a, this.parent.VN), 0),
                    this.positions.set(Ii(Gn, this.b, this.parent.VN), 3));
            }
            this.stepTimer.done(Wn.time) &&
                (this.stepTimer.reset(Wn.time), this.step()),
                this.geometry.updateAttribute(
                    this.geometry.attributes.position
                );
            const e = this.stepTimer.fraction(Wn.time);
            (this.mesh.offset[0] =
                e / (this.maxSteps + 1) +
                (this.permanent ? 0 : this.timer.fraction(Wn.time))),
                this.currentStep < this.maxSteps
                    ? (this.mesh.offset[1] =
                          this.maxSteps / (this.currentStep + e))
                    : (this.mesh.offset[1] = 1);
        }
        step() {
            (this.currentStep = Math.min(this.maxSteps, this.currentStep + 1)),
                this.positions.copyWithin(6, 0),
                (this.geometry.drawRange.count = 6 * this.currentStep),
                this.timeoutSteps > 0 &&
                    (this.timeoutSteps--,
                    0 == this.timeoutSteps && (this.remove = !0));
        }
        destroy() {
            (this.parent = null),
                this.mesh.setParent(null),
                this.mesh.geometry.remove(),
                (this.mesh = void 0),
                (this.geometry = void 0);
        }
        onCache() {
            this.mesh.setParent(null), (this.mesh.visible = !1);
        }
    }
    var Ol = Object.freeze({
        __proto__: null,
        add: Fl,
        tick: ({ dt: t }) => {
            for (let e = 0; e < Dl.length; e++)
                if ((Dl[e].tick(t), Dl[e].remove)) {
                    const t = Dl.splice(e--, 1)[0];
                    Bl.has(t.maxSteps) || Bl.set(t.maxSteps, []),
                        Bl.get(t.maxSteps).push(t),
                        t.onCache();
                }
        },
        onWorldDestroy: ({ world: t }) => {
            Dl.forEach(Nl),
                Bl.forEach(t => {
                    t.forEach(Nl);
                }),
                Bl.clear(),
                (Dl.length = 0);
        }
    });
    const ql = {},
        Hl = (t, e) => {
            const s = [];
            for (let i = 0; i < t; ++i) {
                const t = e(i);
                (t.idStart = t.idStart || 0),
                    (t.Tp = t.Tp || t.uT),
                    (t.scaleStart = t.scaleStart || 1),
                    (t.rotaStart = t.rotaStart || 0),
                    (t.idEnd = void 0 !== t.idEnd ? t.idEnd : t.idStart),
                    (t.scaleEnd =
                        void 0 !== t.scaleEnd ? t.scaleEnd : t.scaleStart),
                    (t.rotaEnd =
                        void 0 !== t.rotaEnd ? t.rotaEnd : t.rotaStart),
                    (t.friction = t.friction || 0),
                    (t.acc = t.acc || [0, 0, 0]),
                    (t.Wm = t.Wm || la.linear),
                    s.push(t);
            }
            return s;
        };
    (ql.dust = Hl(3, () => ({
        idStart: 2,
        rotaStart: 3 * Math.random(),
        rotaEnd: 3 * -Math.random(),
        uT: [Dr(0.4, 0.5), Dr(0.4, 0.5), Dr(0.4, 0.5), 2],
        Tp: [Dr(0.4, 0.5), Dr(0.4, 0.5), Dr(0.4, 0.5), 2],
        scaleStart: 0.7 + 0.5 * Math.random(),
        scaleEnd: 0,
        friction: 0.1,
        duration: 350
    }))),
        (ql.floaterGreen = Hl(5, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            uT: [Dr(0.5, 0.8), Dr(1.5, 2), Dr(0.5, 0.8), 2.5],
            Tp: [Dr(0, 0.2), Dr(0.8, 0.9), Dr(0.1, 0.2), 0],
            scaleStart: 1,
            scaleEnd: 0.5,
            duration: 15e3
        }))),
        (ql.totemfloater = Hl(1, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            uT: [Dr(0.5, 0.8), Dr(1.5, 2), Dr(0.5, 0.8), 2.5],
            Tp: [Dr(0, 0.2), Dr(0.8, 0.9), Dr(0.1, 0.2), 0],
            scaleStart: 2,
            scaleEnd: 2,
            duration: 2e3
        }))),
        (ql.floaterRed = Hl(5, () => ({
            Wm: la.sinReverse,
            idStart: 0,
            uT: [Dr(1.5, 2), Dr(0.5, 0.7), Dr(0.3, 0.6), 2.5],
            Tp: [Dr(0, 0.2), Dr(0.2, 0.5), Dr(0.2, 0.2), 0],
            scaleStart: 0.15,
            scaleEnd: 0.04,
            duration: 15e3
        }))),
        (ql.fire = Hl(12, () => {
            const t = Dr(0, 0.5);
            return {
                Wm: la.sinReverse,
                idStart: 0,
                idEnd: 0,
                uT: [1, 0.2 + 2 * t, t, 1],
                Tp: [0.4, 0.1, 0, 0],
                scaleStart: 1 - t,
                scaleEnd: 0.3 - t,
                rotaStart: Dr(-2, 2),
                rotaEnd: Dr(-2, 2),
                acc: [0, Dr(1, 3), 0],
                duration: Dr(1e3, 1e3)
            };
        })),
        (ql.torchfire = Hl(5, () => {
            const t = Dr(0, 0.4);
            return {
                Wm: la.sinReverse,
                idStart: 0,
                idEnd: 0,
                uT: [1, 0.2 + 2 * t, t, 1],
                Tp: [0.4, 0.1, 0, 0],
                scaleStart: 0.8 - 1.5 * t,
                scaleEnd: 0.5 - t,
                rotaStart: Dr(-2, 0),
                rotaEnd: Dr(0, 2),
                acc: [0, Dr(5, 7), 0],
                duration: Dr(500, 600)
            };
        })),
        (ql.mystical = Hl(3, () => ({
            Wm: la.easeOutQuad,
            idStart: 1,
            uT: [0.1, 1, 1, 1],
            Tp: [0, 0.1, 0.9, 0],
            scaleStart: 0,
            scaleEnd: 1.4,
            rotaStart: 0,
            rotaEnd: 2,
            duration: Dr(400, 600)
        }))),
        (ql.meleeFlash = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 3,
            rotaStart: Dr(0, 3),
            uT: [1, 1, 1, 0.5],
            Tp: [1, 1, 1, 0],
            scaleStart: 1.5 + 0.3 * Dr(0, 3),
            scaleEnd: 0.5 + 0.3 * Dr(0, 3),
            duration: 200
        }))),
        (ql.meleePhys = Hl(3, () => {
            const t = Dr(0, 1);
            return {
                idStart: 2,
                uT: [1, 0.4, 0.1, 0.7],
                Tp: [1, 0, 0, 0],
                scaleStart: 0.5 - 0.2 * t,
                scaleEnd: 0,
                friction: 0.05 + 0.2 * t,
                acc: [0, -20, 0],
                duration: 250
            };
        })),
        (ql.blood = Hl(3, () => ({
            idStart: 2,
            uT: [Dr(0.2, 0.25), 0, Dr(0, 0.05), 3],
            Tp: [Dr(0.2, 0.25), 0, Dr(0, 0.05), 2],
            scaleStart: 0.5 - 0.2 * Dr(0, 1),
            scaleEnd: 0,
            acc: [0, -20, 0],
            duration: 1e3
        }))),
        (ql.bloodFloat = Hl(3, () => ({
            idStart: 2,
            uT: [Dr(0.2, 0.25), 0, Dr(0, 0.05), 3],
            Tp: [Dr(0.2, 0.25), 0, Dr(0, 0.05), 2],
            scaleStart: 0.5,
            scaleEnd: 0,
            duration: 500
        }))),
        (ql.meleeFlashBig = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 3,
            rotaStart: Dr(0, 3),
            uT: [2, 1, 1, 0.5],
            Tp: [1, 0.8, 0.8, 0],
            scaleStart: 3 + 0.3 * Dr(0, 3),
            scaleEnd: 0.5 + 0.3 * Dr(0, 3),
            duration: 200
        }))),
        (ql.blockCircle = Hl(1, () => ({
            idStart: 8,
            uT: [1, 1, 1.5, 2],
            Tp: [0, 0, 1, -1],
            scaleStart: 0,
            scaleEnd: 10,
            duration: 250
        }))),
        (ql.blockFlick = Hl(3, () => ({
            idStart: 2,
            rotaStart: Dr(0, 3),
            uT: [1, 1, 1.5, 2],
            Tp: [0, 0.3, 1, -1],
            scaleStart: 0.25,
            scaleEnd: 0.1,
            duration: 400
        }))),
        (ql.healHolySoft = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 4,
            uT: [1, 2, 1, 3],
            Tp: [0.8, 1, 0.7, 0],
            scaleStart: Dr(1.8, 3.2),
            scaleEnd: Dr(1, 2),
            acc: [0, Dr(0.3, 1.5), 0],
            duration: 1e3
        }))),
        (ql.healNatureBlink = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            rotaStart: Dr(0, 3),
            rotaEnd: Dr(0, 3),
            uT: [1, 2, 0.6, 0.8],
            Tp: [0.8, 0.7, 0.7, 0],
            scaleStart: Dr(0.8, 1.5),
            scaleEnd: 0,
            acc: [0, Dr(1.5, 3), 0],
            duration: 600
        }))),
        (ql.healHolySparkle = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            rotaStart: Dr(0, 3),
            rotaEnd: Dr(0, 3),
            uT: [2, 2, 1, 0.8],
            Tp: [0.8, 0.7, 0.7, 0],
            scaleStart: Dr(1, 2),
            scaleEnd: 0,
            acc: [0, Dr(0.3, 1.5), 0],
            duration: 1e3
        }))),
        (ql.blockBuffShield = Hl(1, () => ({
            idStart: 9,
            uT: [0.1, 1.3, 1, 0.8],
            Tp: [0.1, 0.8, 1, 0.3],
            scaleStart: 0.5,
            scaleEnd: 0.4,
            duration: 500
        }))),
        (ql.holyShield = Hl(1, () => ({
            idStart: 9,
            uT: [1.2, 1, 0, 1.5],
            Tp: [1, 0.8, 0, 0.9],
            scaleStart: 0.5,
            scaleEnd: 0.4,
            duration: 200
        }))),
        (ql.blockBuffFocus = Hl(1, () => ({
            idStart: 8,
            uT: [1, 1, 1.5, 1],
            Tp: [0, 0, 1, 0],
            scaleStart: 10,
            scaleEnd: 0,
            duration: 400
        }))),
        (ql.blockBuffEnrage = Hl(3, () => ({
            idStart: 1,
            uT: [0.3, 0, 0.05, 3],
            Tp: [0.2, 0, 0.05, 0],
            acc: [0, 1, 0],
            scaleStart: 0.4,
            scaleEnd: 0.2,
            duration: 1e3,
            rotaStart: Dr(0, 3)
        }))),
        (ql.crescentStrike = Hl(1, () => ({
            idStart: 0,
            uT: [1.5, 0.7, 0.4, 2],
            Tp: [1, 0.5, 0.5, 0],
            scaleStart: 0.5,
            scaleEnd: 0.3,
            duration: 500,
            friction: 0.1
        }))),
        (ql.levelUp = Hl(1, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            uT: [2, 2, 1, 0.8],
            Tp: [0.8, 0.7, 0.7, 0],
            scaleStart: 1.5,
            scaleEnd: 0,
            friction: 0.03,
            duration: 1e3
        }))),
        (ql.iceBig = Hl(5, () => ({
            Wm: la.sinReverse,
            idStart: 0,
            uT: [Dr(0.18, 0.21), Dr(0.6, 0.7), Dr(1.4, 1.5), 2],
            Tp: [0.8, 0.9, 1, 0],
            scaleStart: 0.4,
            scaleEnd: 0.3,
            rotaStart: Dr(0, 6),
            friction: 0.1,
            acc: [Dr(-1, 1), Dr(-1, 1), Dr(-1, 1)],
            duration: Dr(200, 300)
        }))),
        (ql.extraBoltParticle = Hl(1, () => ({
            Wm: la.sinReverse,
            idStart: 24,
            uT: [0.8, 0.9, 1.4, 1.3],
            Tp: [0.8, 0.9, 1, 0.9],
            scaleStart: 0.25,
            scaleEnd: 0.2,
            rotaStart: 0,
            duration: 1e3
        }))),
        (ql.snowflake = Hl(3, () => ({
            idStart: 0,
            uT: [0.9, 1, 1.3, 2],
            Tp: [0.9, 1, 1.1, 0],
            scaleStart: 0.5,
            scaleEnd: 0.2,
            rotaStart: Dr(0, 3),
            friction: 0.1,
            duration: Dr(800, 1e3)
        }))),
        (ql.frostflake = Hl(3, () => ({
            idStart: 0,
            uT: [0.1, 0.3, 1.3, 3],
            Tp: [0.1, 0.3, 1, 1],
            scaleStart: 0.7,
            scaleEnd: 0,
            rotaStart: Dr(0, 3),
            friction: 0.05,
            duration: Dr(600, 800)
        }))),
        (ql.preciseArrow = Hl(3, () => ({
            idStart: 0,
            uT: [1, 1, 1, 2],
            Tp: [1, 1, 1, 0],
            scaleStart: 0.2,
            scaleEnd: 0.1,
            rotaStart: Dr(0, 3),
            duration: Dr(300, 400)
        }))),
        (ql.healNatureBig = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 10,
            uT: [0.2, 1.5, 0.5, 1.5],
            Tp: [0.3, 0.9, 1, 0],
            scaleStart: 0.7,
            scaleEnd: 0.2,
            acc: [Dr(-0.5, 0.5), 1.5, Dr(-0.5, 0.5)],
            rotaStart: Dr(0, 3),
            duration: Dr(600, 800),
            friction: 0.02
        }))),
        (ql.healNatureSparkle = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 0,
            uT: [1.5, 1.5, 0.4, 2],
            Tp: [1.7, 1.5, 0.4, 0],
            scaleStart: 0.12,
            scaleEnd: 0.05,
            acc: [Dr(-0.5, 0.5), 2, Dr(-0.5, 0.5)],
            rotaStart: Dr(0, 3),
            duration: Dr(600, 800)
        }))),
        (ql.invigorateBuff = Hl(1, () => ({
            idStart: 11,
            uT: [0, 1, 1.5, 1],
            Tp: [0, 0.7, 1.5, 0.7],
            scaleStart: 0.8,
            scaleEnd: 0.7,
            duration: 300
        }))),
        (ql.hypothermicBuff = Hl(1, () => ({
            idStart: 7,
            uT: [0.4, 0.9, 2.5, 2.5],
            Tp: [0.5, 0.8, 1.5, 0.9],
            scaleStart: 0.7,
            scaleEnd: 0.5,
            duration: 500
        }))),
        (ql.manaGain = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            rotaStart: Dr(0, 3),
            rotaEnd: Dr(0, 3),
            uT: [0.2, 0.6, 2, 2],
            Tp: [0.1, 0.4, 1, 1],
            scaleStart: Dr(1, 2),
            scaleEnd: 0.5,
            acc: [0, Dr(0.5, 3), 0],
            duration: 800
        }))),
        (ql.iceglare = Hl(1, () => ({
            idStart: 6,
            uT: [0.3, 0.4, 1, 1.5],
            Tp: [0.3, 0.4, 1, 1.5],
            scaleStart: 2,
            scaleEnd: 3,
            duration: 800
        }))),
        (ql.skulls = Hl(6, t => {
            const e = Dr(0.7, 1.5);
            return {
                Wm: la.sinReverse,
                idStart: t % 2 == 0 ? 12 : 23,
                rotaStart: Dr(-2, 2),
                uT: [e, 1.5 - 0.5 * e, Dr(0.05, 0.25), 1.6],
                Tp: [e, 2.5 - e, Dr(0.05, 0.25), 0.2],
                scaleStart: Dr(0.4, 0.5),
                scaleEnd: 0,
                friction: 0.05,
                duration: 700
            };
        })),
        (ql.decay = Hl(1, () => ({
            idStart: 12,
            rotaStart: 0,
            rotaEnd: 0,
            uT: [0.5, 0.3, 0.1, 2],
            Tp: [0.5, 1, 0.1, 1],
            scaleStart: 0.6,
            scaleEnd: 0.6,
            duration: 500
        }))),
        (ql.decayCloud = Hl(1, () => ({
            idStart: 2,
            rotaStart: 0,
            uT: [0.5, 0.3, 0.1, 2],
            Tp: [0.5, 1, 0.1, 0],
            scaleStart: 0.6,
            scaleEnd: 0.4,
            duration: 700
        }))),
        (ql.soulCloud = Hl(1, () => ({
            idStart: 2,
            rotaStart: 0,
            uT: [0.8, 0.7, 1.4, 1.3],
            Tp: [0.6, 1, 0.9, 0],
            scaleStart: 0.5,
            scaleEnd: 0.3,
            duration: 700
        }))),
        (ql.soulHarvested = Hl(1, () => ({
            Wm: la.sinReverse,
            idStart: 12,
            rotaStart: 0,
            uT: [0.6, 0.7, 0.9, 1.5],
            Tp: [0.1, 0.1, 1.2, 0.1],
            scaleStart: 0.4,
            scaleEnd: 0,
            acc: [0, 1, 0],
            duration: 900
        }))),
        (ql.souls = Hl(6, () => ({
            Wm: la.sinReverse,
            idStart: 12,
            rotaStart: Dr(-1.5, 1.5),
            uT: [Dr(0.1, 0.2), Dr(0.4, 0.5), Dr(0.5, 0.9), 1.6],
            Tp: [Dr(0.1, 0.2), Dr(0.4, 0.5), Dr(0.5, 0.9), 0.2],
            scaleStart: Dr(0.35, 0.45),
            scaleEnd: 0,
            friction: 0.05,
            duration: 700
        }))),
        (ql.plaguebones = Hl(1, () => ({
            idStart: 23,
            rotaStart: 0,
            rotaEnd: 4,
            uT: [1.7, 2, 1.3, 0.6],
            Tp: [0.8, 1, 0.6, 0.5],
            scaleStart: 0.4,
            scaleEnd: 0.38,
            friction: 0.05,
            duration: 3e3
        }))),
        (ql.mimir = Hl(3, () => ({
            idStart: 6,
            uT: [0.2, 0.6, 3, 2],
            Tp: [0.1, 0.4, 1.2, 1],
            scaleStart: Dr(1, 2),
            scaleEnd: 0.5,
            duration: 800
        }))),
        (ql.icenova = Hl(3, () => ({
            idStart: 0,
            uT: [0.2, 0.3, 1.5, 1.5],
            Tp: [0.5, 0.4, 1, 0],
            scaleStart: 0.3,
            scaleEnd: 1.4,
            rotaStart: Dr(0, 3),
            friction: 0.1,
            duration: Dr(300, 400)
        }))),
        (ql.iceFlash = Hl(1, () => ({
            idStart: 8,
            uT: [0.8, 0.8, 1.5, 2],
            Tp: [0.5, 0.5, 1, -1],
            scaleStart: 0,
            scaleEnd: 10,
            duration: 350
        }))),
        (ql.icicle = Hl(3, () => ({
            idStart: 1,
            uT: [1, 1, 1.5, 1.5],
            Tp: [0.2, 0.2, 1.3, 0.5],
            scaleStart: 0.8,
            scaleEnd: 0,
            rotaStart: Dr(0, 9),
            duration: Dr(400, 500),
            friction: 0.01
        }))),
        (ql.courage = Hl(1, () => ({
            idStart: 13,
            uT: [0.5, 1.5, 1.5, 2],
            Tp: [0.2, 1.4, 1.3, 1],
            scaleStart: 0.8,
            duration: 400
        }))),
        (ql.courageFlash = Hl(1, () => ({
            idStart: 13,
            uT: [0.5, 1.5, 1.5, 2],
            Tp: [0, 0, 1, 0],
            scaleStart: 0,
            scaleEnd: 15,
            duration: 800
        }))),
        (ql.warcry = Hl(1, () => ({
            idStart: 14,
            uT: [1, 0.3, 0.2, 3],
            Tp: [1, 0.2, 0.1, 2],
            scaleStart: 0.8,
            duration: 400
        }))),
        (ql.warcryFlash = Hl(1, () => ({
            idStart: 14,
            uT: [1, 0.3, 0.2, 3],
            Tp: [1, 0, 0, 0],
            scaleStart: 0,
            scaleEnd: 15,
            duration: 800
        }))),
        (ql.enchant = Hl(4, () => ({
            idStart: 5,
            uT: [1, 0.3, 0.2, Dr(2, 3)],
            Tp: [1, 0.2, 0.1, 2],
            scaleStart: Dr(1.5, 1.8),
            scaleEnd: 1.3,
            rotaStart: Dr(0, 3),
            rotaEnd: 0,
            duration: 500
        }))),
        (ql.shadowglow = Hl(3, () => ({
            idStart: 1,
            uT: [0.5, 1, 0.6, 1.5],
            Tp: [0.2, 1.5, 0.2, 0],
            scaleStart: 0.5,
            scaleEnd: 0.8,
            acc: [Dr(-1, 1), Dr(-1, 1), Dr(-1, 1)],
            rotaStart: Dr(-1, 1),
            rotaEnd: Dr(-1, 1),
            duration: 500
        }))),
        (ql.enchantFlash = Hl(1, () => ({
            idStart: 8,
            uT: [1, 0.2, 0.05, 1.5],
            Tp: [1, 0.5, 0.4, 0.5],
            scaleStart: 10,
            scaleEnd: 0,
            duration: 500
        }))),
        (ql.arcticaura = Hl(2, () => ({
            idStart: 5,
            uT: [0, 0.3, 1, Dr(2, 3)],
            Tp: [0, 0, 1, 1],
            scaleStart: Dr(3, 4),
            scaleEnd: 3,
            rotaStart: Dr(0, 3),
            rotaEnd: 0,
            duration: 500
        }))),
        (ql.arcticFlash = Hl(1, () => ({
            idStart: 7,
            uT: [0.3, 0.5, 1.5, 1.5],
            Tp: [0, 0.5, 1, 0.5],
            scaleStart: 10,
            scaleEnd: 0,
            duration: 500
        }))),
        (ql.temporal = Hl(1, () => ({
            idStart: 5,
            uT: [1.2, 1.2, 0, 1.5],
            Tp: [1, 1, 0, 0.9],
            scaleStart: 1,
            scaleEnd: 0.8,
            duration: 200
        }))),
        (ql.temporalFlash = Hl(1, () => ({
            idStart: 8,
            uT: [1, 1, 0, 1],
            Tp: [1, 1, 0, 0.5],
            scaleStart: 5,
            scaleEnd: 0,
            duration: 200
        }))),
        (ql.pathfindFlash = Hl(1, () => ({
            idStart: 8,
            uT: [1, 1, 0.9, 1],
            Tp: [1, 0.5, 0.5, 0.2],
            scaleStart: 0,
            scaleEnd: 6,
            duration: 200
        }))),
        (ql.canine = Hl(1, () => ({
            idStart: 15,
            uT: [1.5, 0.5, 0.1, 2],
            Tp: [1.3, 0.3, 0.2, 1],
            scaleStart: 0.6,
            scaleEnd: 0.5,
            duration: 200
        }))),
        (ql.canineFlash = Hl(1, () => ({
            idStart: 15,
            uT: [1.5, 0.5, 0.1, 2],
            Tp: [1.3, 0.3, 0.2, 0],
            scaleStart: 0,
            scaleEnd: 10,
            duration: 400
        }))),
        (ql.etherglow = Hl(1, () => ({
            Wm: la.sinReverse,
            idStart: 5,
            uT: [0.4, 1, 2, 0.9],
            Tp: [0.2, 0.9, 1, 0],
            scaleStart: 1.2,
            scaleEnd: 0.5,
            acc: [0, 2, 0],
            rotaStart: 0,
            rotaEnd: 0,
            duration: 900
        }))),
        (ql.poison = Hl(6, () => ({
            Wm: la.sinReverse,
            idStart: 17,
            idEnd: 21,
            rotaStart: Dr(-0.2, 0.2),
            rotaEnd: Dr(-0.2, 0.2),
            uT: [Dr(0, 0.6), 2, Dr(0, 0.1), 1],
            Tp: [1.5, 1, 0, 0],
            scaleStart: Dr(0.6, 0.8),
            scaleEnd: 0.5,
            acc: [Dr(-0.5, 0.5), Dr(1, 3), Dr(-0.5, 0.5)],
            friction: 0.05,
            duration: 1e3
        }))),
        (ql.poisonSoft = Hl(4, () => ({
            Wm: la.sinReverse,
            idStart: 16,
            uT: [Dr(0, 1), 2, 0, 1],
            Tp: [Dr(0, 1), 1, 0.2, 0],
            scaleStart: Dr(1.8, 3.2),
            scaleEnd: Dr(1, 2),
            duration: 1500
        }))),
        (ql.decaySoft = Hl(4, () => ({
            Wm: la.sinReverse,
            idStart: 16,
            uT: [Dr(0.5, 1), 0.8, 0, 1.5],
            Tp: [Dr(0.5, 0.8), Dr(0.8, 1.1), 0.2, 0],
            scaleStart: Dr(1.8, 3.2),
            scaleEnd: Dr(1, 2),
            duration: 1500
        }))),
        (ql.teleportSparkle = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            uT: [Dr(0.5, 1), 0.6, Dr(1, 2), Dr(0.5, 1.5)],
            Tp: [0.5, 0.3, 1.3, 0],
            scaleStart: Dr(2, 4),
            scaleEnd: Dr(0.5, 1.5),
            duration: 400
        }))),
        (ql.teleportFlash = Hl(1, () => ({
            idStart: 8,
            uT: [0.8, 0.6, 2, 2],
            Tp: [0.5, 0.3, 1.3, -1],
            scaleStart: 8,
            scaleEnd: 0,
            duration: 150
        }))),
        (ql.precisesparcle = Hl(5, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            uT: [Dr(1, 2), Dr(0.9, 1.2), Dr(0.5, 0.8), Dr(1.5, 2.5)],
            Tp: [1, 0.5, 0.3, 0],
            scaleStart: Dr(2, 4),
            scaleEnd: Dr(0.4, 0.7),
            duration: 200,
            rotaStart: Dr(0, 3),
            rotaEnd: Dr(-3, 0)
        }))),
        (ql.stun = Hl(1, () => ({
            idStart: 6,
            uT: [1.2, 1.2, 0.2, 1.2],
            Tp: [1.2, 1.2, 0.2, 0.9],
            scaleStart: 1.7,
            scaleEnd: 1.8,
            duration: 500
        }))),
        (ql.daze = Hl(1, () => ({
            idStart: 6,
            uT: [0.2, 1.2, 1.2, 1.2],
            Tp: [0.2, 1.2, 1.2, 0.9],
            scaleStart: 1.2,
            scaleEnd: 1,
            duration: 500
        }))),
        (ql.chargeFlash = Hl(1, () => ({
            idStart: 8,
            uT: [2, 1.5, 0.3, 1.5],
            Tp: [1, 0.5, 0.3, 0.2],
            scaleStart: 0,
            scaleEnd: 5,
            duration: 250
        }))),
        (ql.tauntFlash = Hl(1, () => ({
            idStart: 8,
            uT: [2, 1, 0.8, 1.2],
            Tp: [1.5, 0.2, 0.3, 0.2],
            scaleStart: 8,
            scaleEnd: 0,
            duration: 350
        }))),
        (ql.tauntsparkle = Hl(4, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            uT: [Dr(2, 3), Dr(0.9, 1.2), Dr(0.2, 0.1), Dr(1.5, 2.5)],
            Tp: [1, 0.9, 0.8, 0],
            scaleStart: Dr(2, 2.5),
            scaleEnd: Dr(1, 1.5),
            duration: 800,
            friction: 0.08,
            rotaStart: Dr(0, 3)
        }))),
        (ql.transformationAura = Hl(5, () => ({
            Wm: la.sinReverse,
            idStart: 8,
            uT: [Dr(0.5, 0.9), 0.5, Dr(2, 3), 0],
            Tp: [Dr(0.5, 0.9), 0.5, Dr(1, 2), 2],
            scaleStart: 2,
            scaleEnd: 0,
            duration: 250
        }))),
        (ql.transformSoft = Hl(5, () => ({
            Wm: la.sinReverse,
            idStart: 16,
            uT: [Dr(0.5, 0.8), 0.5, Dr(2, 3), 2],
            Tp: [Dr(0.5, 0.8), 0.5, Dr(1, 2), 0],
            scaleStart: Dr(2.5, 4.2),
            scaleEnd: Dr(1, 2),
            duration: 800,
            rotaStart: Dr(0, 5)
        }))),
        (ql.snipe = Hl(1, () => ({
            idStart: 6,
            uT: [2.6, 2, 1.5, 1],
            Tp: [2.6, 2, 1.5, 1],
            scaleStart: 3,
            scaleEnd: 0,
            friction: 0.15,
            duration: 300
        }))),
        (ql.summonFlash = Hl(1, () => ({
            idStart: 8,
            uT: [1.5, 0.6, 2, 2],
            Tp: [0.8, 0.1, 1.3, -1],
            scaleStart: 0,
            scaleEnd: 12,
            duration: 1600
        }))),
        (ql.summonSparkle = Hl(3, () => ({
            Wm: la.sinReverse,
            idStart: 6,
            rotaStart: Dr(0, 3),
            rotaEnd: Dr(0, 3),
            uT: [0.9, 0.5, 2, 2],
            Tp: [0.5, 0.1, 1.5, 1],
            scaleStart: Dr(1, 2),
            scaleEnd: 0.5,
            acc: [0, Dr(0.5, 3), 0],
            friction: 0.02,
            duration: 1600
        })));
    const Wl = performance,
        Zl = () => Wl.now(),
        jl = [];
    let Gl, Vl;
    const Yl = [],
        Jl = t => {
            t > 0
                ? ((Gl.visible = !0),
                  Vl.setDrawRange(0, t),
                  Vl.updateAttribute(Vl.attributes.wU),
                  Vl.updateAttribute(Vl.attributes.info),
                  Vl.updateAttribute(Vl.attributes.WU),
                  Vl.updateAttribute(Vl.attributes.uT),
                  Vl.updateAttribute(Vl.attributes.Tp))
                : (Gl.visible = !1);
        },
        Xl = () => {
            let t = 0;
            for (let e = 0; e < jl.length; ++e) {
                const s = jl[e];
                s.distance < 1 &&
                    (Vl.attributes.wU.data.set(s.wU, 3 * t),
                    Vl.attributes.info.data.set(
                        [s.info.Wm(s.Qj), 0, s.info.idStart, s.info.idEnd],
                        4 * t
                    ),
                    Vl.attributes.WU.data.set(
                        [
                            s.info.scaleStart,
                            s.info.scaleEnd,
                            s.info.rotaStart,
                            s.info.rotaEnd
                        ],
                        4 * t
                    ),
                    Vl.attributes.uT.data.set(s.info.uT, 4 * t),
                    Vl.attributes.Tp.data.set(s.info.Tp, 4 * t),
                    t++);
            }
            return t;
        },
        Ql = (t, e, s = 0, i = 0, n = 0, a = 0, r = 0, o = 0, l = !1) => {
            let c = Yl.pop();
            if (!c) {
                if (l) {
                    let t = jl.length - 1;
                    for (; t >= 0 && jl[t].forced; ) --t;
                    t >= 0 && (c = jl.splice(t, 1)[0]);
                }
                if (!c) return;
            }
            return (
                xi(c.vel, a, r, o),
                xi(c.wU, s, i, n),
                e && Ii(c.wU, c.wU, e),
                (c.info = Br(t)),
                (c.start = l ? -1 : Zl()),
                (c.end = c.start + c.info.duration),
                (c.forced = l),
                jl.push(c),
                c
            );
        },
        Kl = () => {
            (Vl = new Li(Fn, {
                wU: { size: 3, data: new Float32Array(3e3) },
                info: { size: 4, data: new Float32Array(4e3) },
                WU: { size: 4, data: new Float32Array(4e3) },
                uT: { size: 4, data: new Float32Array(4e3) },
                Tp: { size: 4, data: new Float32Array(4e3) }
            })),
                ((Gl = new yn(Fn, {
                    mode: Fn.POINTS,
                    matrixAutoUpdate: !1,
                    geometry: Vl,
                    program: vl.particles
                })).frustumCulled = !1),
                (Vl.type = "particle"),
                Hn.addChild(Gl),
                _r("particles.png", t => {
                    (vl.particles.uniforms.Hl.value = t),
                        vl.particles.uniforms.Hl.state++,
                        (vl.particles.active = !0),
                        (Gl.renderOrder = 7e3);
                });
        },
        tc = (t, e) => (t.distance < e.distance ? 1 : -1),
        ec = (t, e) =>
            (e[2] * t[0] + e[6] * t[1] + e[10] * t[2] + e[14]) /
            (e[3] * t[0] + e[7] * t[1] + e[11] * t[2] + e[15]);
    var sc = Object.freeze({
        __proto__: null,
        init: () => {
            Kl(),
                vl.ribbon.setBlendFunc(Fn.ONE, Fn.ONE_MINUS_SRC_ALPHA),
                vl.particles.setBlendFunc(Fn.ONE, Fn.ONE_MINUS_SRC_ALPHA);
            for (let t = 0; t < 1e3; ++t)
                Yl.push({
                    wU: [-0, -0, -0],
                    vel: [-0, -0, -0],
                    info: ql.dust[0],
                    distance: 0,
                    Qj: 0,
                    start: 0,
                    end: 1.01,
                    forced: !1
                });
        },
        tick: ({ dt: t, camera: e }) => {
            ((t, e, s) => {
                for (let e = jl.length - 1; e >= 0; --e) {
                    const s = jl[e];
                    s.start < 0 || s.end > t || (jl.splice(e, 1), Yl.push(s));
                }
                jl.forEach(i => {
                    Ei(i.vel, i.vel, i.info.acc, e),
                        Ei(i.wU, i.wU, i.vel, e),
                        i.info.friction > 0 &&
                            Mi(i.vel, i.vel, 1 - i.info.friction),
                        (i.distance = ec(i.wU, s.kX)),
                        (i.Qj =
                            i.start < 0
                                ? 0.5 * (Math.sin(t / i.info.duration) + 1)
                                : (t - i.start) / i.info.duration);
                }),
                    jl.sort(tc);
            })(Zl(), t, e),
                (() => {
                    const t = Xl();
                    Jl(t);
                })();
        },
        createParticle: Ql
    });
    const ic = {},
        nc = ({
            geo: t,
            tex: e,
            program: s,
            ts: i,
            rs: n,
            mode: a,
            dynamic: r,
            cull: o,
            permanent: l,
            frustum: c = !0,
            visible: h = !0
        }) => {
            const d =
                t +
                (e || 0) +
                s.id +
                (i ? 1 : 0) +
                (n ? 1 : 0) +
                (r ? 1 : 0) +
                (c ? 1 : 0) +
                (void 0 !== o ? o : 1029) +
                (void 0 !== a ? a : 999);
            let u,
                m,
                p = 0;
            for (; !u; )
                ic[(m = d + p)]
                    ? ic[m].instances.length < 3e3
                        ? (u = ic[m])
                        : ++p
                    : (u = ac({
                          geo: t,
                          tex: e,
                          program: s,
                          ts: i,
                          rs: n,
                          mode: a,
                          dynamic: r,
                          hash: m,
                          cull: o,
                          permanent: l,
                          frustum: c,
                          visible: h
                      }));
            return u.create();
        },
        ac = ({
            geo: t,
            tex: e,
            program: s,
            ts: i,
            rs: n,
            mode: a,
            dynamic: r,
            hash: o,
            cull: l,
            permanent: c,
            frustum: h,
            visible: d
        }) => {
            const u = (ic[o] = new $n(Fn, {
                program: s,
                mode: void 0 !== a ? a : Fn.TRIANGLES,
                shadowProgram:
                    vi.shadows && i
                        ? e
                            ? vl.shadowInstancedAlpha
                            : vl.shadowInstanced
                        : void 0,
                throwShadow:
                    vi.shadows && i ? (r ? nl.LG : nl.shadowStatic) : void 0,
                receiveShadow: vi.shadows && n ? nl.LG : void 0,
                dynamic: r,
                frustum: h
            }));
            return (
                (u.permanent = c),
                (u.onBeforeRender = rc),
                (u.cullFace = void 0 !== l ? l : 1029),
                (u.Eo = vi.shadows && n ? 1 : 0),
                (u.dynamicThrowShadwos = vi.shadows && r && i),
                u.setParent(Hn),
                wr(t, t => {
                    u.setAttributes(t),
                        e
                            ? _r(e, t => {
                                  (u.KW = t),
                                      (u.visible = d),
                                      (u.renderOrder =
                                          0 +
                                          (u.program.id + 1) *
                                              (t.id + 1) *
                                              (u.Eo + 1));
                              })
                            : ((u.renderOrder =
                                  0 + (u.program.id + 1) * (u.Eo + 1)),
                              (u.visible = d));
                }),
                u
            );
        },
        rc = ({ mesh: t, camera: e, shadowTarget: s }) => {
            s || (t.program.cullFace = t.cullFace);
        },
        oc = [],
        lc = [0, 0, 0],
        cc = (t, e, s) => {
            if (
                (void 0 === e &&
                    (((e = wn()).data = {
                        fraction: vc,
                        particle: dc,
                        localize: $c,
                        creature: void 0,
                        transform: e,
                        time: -0,
                        timeout: -0,
                        accumulator: -0,
                        frame: 0,
                        remove: !1,
                        info: void 0,
                        tick: void 0,
                        invisibilified: !1,
                        camDistance: -0,
                        distanceFactor: -0,
                        lod: 0,
                        sound: void 0,
                        ribbon: void 0,
                        buff: void 0,
                        xu: void 0
                    }),
                    oc.push(e)),
                (e.data.time = void 0 !== t.time ? t.time : 0),
                (e.data.timeout = void 0 !== t.timeout ? t.timeout : 0),
                (e.data.accumulator = 0),
                (e.data.frame = 0),
                (e.data.remove = !1),
                (e.data.info = t),
                (e.data.tick = t.tick),
                (e.data.invisibilified = !1),
                s && e.setParent(s),
                void 0 !== e.data.info.xu ? pc(e) : e.data.xu && fc(e),
                void 0 !== e.data.info.sound ? uc(e) : e.data.sound && mc(e),
                void 0 !== e.data.info.ribbon ? yc(e) : bc(e),
                void 0 !== e.data.info.mesh ? wc(e) : xc(e),
                void 0 !== e.data.info.particles)
            ) {
                e.data.particles = [];
                for (let t = 0; t < e.data.info.particles.amount; ++t) {
                    const t = e.data.particle(
                        e.data.info.particles.info,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        !0
                    );
                    t && e.data.particles.push(t);
                }
            }
            return e;
        },
        hc = t => {
            void 0 !== t.data.xu && fc(t),
                void 0 !== t.data.sound && mc(t),
                void 0 !== t.data.particles && gc(t),
                void 0 !== t.data.ribbon && bc(t),
                void 0 !== t.data.mesh && xc(t),
                null !== t.parent && t.setParent(null);
        },
        dc = function (t, e = 0, s = 0, i = 0, n = 0, a = 0, r = 0, o = !1) {
            if (o || vi.particles)
                return Ql(t, this.transform.VN, e, s, i, n, a, r, o);
        },
        uc = t => {
            void 0 !== t.data.sound && t.data.sound.stop(),
                (t.data.sound = Jr({
                    id: t.data.info.sound.id,
                    loop: t.data.info.sound.loop,
                    dynamic: t.data.info.sound.dynamic,
                    transform: t.data.info.sound.parent ? t.parent : t,
                    distance: t.data.info.sound.distance
                }));
        },
        mc = t => {
            t.data.sound.stop(), (t.data.sound = void 0);
        },
        pc = t => {
            void 0 !== t.data.xu && fc(t),
                (t.data.xu = Il(t.data.info.xu, t.data.xu, t.VN)),
                t.data.xu.setParent(t);
        },
        fc = t => {
            t.data.xu.setParent(null),
                (t.data.xu.remove = !0),
                (t.data.xu = void 0);
        },
        gc = t => {
            t.data.particles.forEach(t => {
                (t.start = 1), (t.end = 1);
            }),
                (t.data.particles = void 0);
        },
        vc = function (t, e, s = this.time) {
            return s >= t && s - e <= t;
        },
        yc = t => {
            void 0 !== t.data.ribbon && (t.data.ribbon.remove = !0),
                (t.data.ribbon = Fl({ parent: t, ...t.data.info.ribbon }));
        },
        bc = t => {
            void 0 !== t.data.ribbon &&
                ((t.data.ribbon.timeoutSteps = Math.max(
                    1,
                    t.data.ribbon.currentStep
                )),
                (t.data.ribbon.parent = null),
                (t.data.ribbon = void 0));
        },
        wc = t => {
            void 0 !== t.data.mesh && xc(t),
                (t.data.mesh = nc({
                    geo: t.data.info.mesh.id || "engine/cube.ho",
                    program: vl.multimeshFlat,
                    ts: !0,
                    rs: !0,
                    dynamic: !0
                })),
                (t.data.mesh.data.color = t.data.info.mesh.color),
                void 0 !== t.data.info.mesh.scale &&
                    wi(t.data.mesh.scale, t.data.info.mesh.scale),
                void 0 !== t.data.info.mesh.wU &&
                    wi(t.data.mesh.position, t.data.info.mesh.wU),
                void 0 !== t.data.info.mesh.rot &&
                    t.data.mesh.rotation.copy(t.data.info.mesh.rot),
                t.data.mesh.setParent(t);
        },
        xc = t => {
            void 0 !== t.data.mesh &&
                (t.data.mesh.data.multi.remove(t.data.mesh),
                t.data.mesh.setParent(null),
                (t.data.mesh = void 0));
        },
        kc = t => xi(t.wU, 0, 0, 0);
    function $c(t, e = 0, s = 0, i = 0, n = 0, a = 0, r = 0) {
        const o = this.transform.position,
            l = this.transform.parent.scale,
            c = this.transform.parent.position;
        (t[0] = (o[0] + e) * l[0] + c[0] + n),
            (t[1] = (o[1] + s) * l[1] + c[1] + a),
            (t[2] = (o[2] + i) * l[2] + c[2] + r);
    }
    var Sc = Object.freeze({
        __proto__: null,
        effects: oc,
        tick: ({ dt: t, camera: e, viewRange: s }) => {
            const i = Zl();
            let n = oc.length;
            for (; n--; ) {
                const a = oc[n],
                    r = a.data;
                r.remove || (r.timeout > 0 && r.time > r.timeout)
                    ? (hc(a), oc.splice(n, 1), xn(a))
                    : (Yi(lc, a.VN),
                      (r.camDistance = Math.max(
                          0,
                          Ci(lc, e.worldPosition) - 10
                      )),
                      (r.distanceFactor = r.camDistance / (0.25 * s)),
                      (r.lod = Math.max(0, 1 - r.distanceFactor)),
                      (r.time += t),
                      (r.accumulator += t),
                      r.distanceFactor < 1 || !r.info.permanent
                          ? (r.info.sound &&
                                void 0 === r.sound &&
                                (r.info.sound.loop ||
                                    0 === r.info.sound.frame) &&
                                uc(a),
                            r.info.xu && void 0 === r.xu && pc(a),
                            void 0 !== r.xu &&
                                ((r.xu.camDistance = r.camDistance),
                                (r.xu.distanceFactor = r.distanceFactor)),
                            void 0 !== r.tick &&
                                (0 === r.frame ||
                                    (r.time >= 0 &&
                                        (void 0 !== r.particles ||
                                            r.accumulator >=
                                                Math.min(
                                                    1,
                                                    0.2 * r.distanceFactor
                                                )))) &&
                                (!a.visible ||
                                (null != a.parent && !a.parent.visible)
                                    ? r.invisibilified ||
                                      (void 0 !== r.particles &&
                                          r.particles.forEach(kc),
                                      r.mesh && (r.mesh.visible = !1),
                                      (r.invisibilified = !0))
                                    : (r.invisibilified &&
                                          (r.mesh && (r.mesh.visible = !0),
                                          (r.invisibilified = !1)),
                                      r.tick(i, r.accumulator),
                                      (r.accumulator = 0),
                                      r.frame++)))
                          : (void 0 !== r.sound && r.sound.loop && mc(a),
                            void 0 !== r.xu && fc(a)));
            }
        },
        createEffect: cc,
        onWorldDestroy: ({ world: t }) => {
            for (let t = 0; t < oc.length; ++t) oc[t].data.remove = !0;
        },
        zeroParticle: kc
    });
    const Mc = [];
    let Ec, Cc;
    const Tc = { color: [0, 0, 0] },
        _c = { color: [0, 0, 0] },
        Pc = { color: [0, 0, 0], dir: [0, 0, 0] },
        Uc = { near: 10, CR: 100, color: [0, 0, 0] };
    let Ic;
    const zc = t => {
        let e = t.daytime;
        (e = e < 0.85 ? 0.5 * ra(0, 0.85, e) : 0.5 + 0.5 * ra(0.85, 1, e)),
            (hl.QZ.value = e);
        let s,
            i,
            n = 0.5;
        e < 0.05
            ? ((s = 1), (i = 0), (n = ra(0, 0.05, e)))
            : e < 0.4
            ? ((s = 0), (i = 0))
            : e < 0.5
            ? ((s = 0), (i = 1), (n = ra(0.4, 0.5, e)))
            : e < 0.6
            ? ((s = 1), (i = 2), (n = ra(0.5, 0.6, e)))
            : e < 0.9
            ? ((s = 2), (i = 2))
            : ((s = 2), (i = 1), (n = ra(0.9, 1, e))),
            ga(Pc.color, Mc[s].directional, Mc[i].directional, n),
            ga(Uc.color, Mc[s].fog, Mc[i].fog, n),
            ga(Tc.color, Mc[s].ambient, Mc[i].ambient, n),
            ga(_c.color, Mc[s].sky, Mc[i].sky, n);
    };
    qt.subscribe(t => {
        t && Dc();
    });
    const Ac = t => {
            if (!Ec || !Cc) return;
            const e = hl.QZ.value;
            let s,
                i,
                n = 0.5;
            e < 0.1
                ? ((s = Ec), (i = Cc), (n = 0.5 * ra(0, 0.1, e) + 0.5))
                : e < 0.4
                ? ((s = Ec), (i = Cc), (n = -1))
                : e < 0.6
                ? ((s = Cc), (i = Ec), (n = ra(0.4, 0.6, e)))
                : e < 0.9
                ? ((s = Cc), (i = Ec), (n = -1))
                : ((s = Ec), (i = Cc), (n = 0.5 * ra(0.9, 1, e))),
                n >= 0
                    ? ((s.gain.gain.value = 1 - n), (i.gain.gain.value = n))
                    : ((s.gain.gain.value = 0), (i.gain.gain.value = 1));
        },
        Dc = () => {
            Cc && Cc.stop(),
                Ec && Ec.stop(),
                (Cc = Jr({ id: "day", loop: !0, gain: !0 })),
                (Ec = Jr({ id: "night", loop: !0, gain: !0 }));
        };
    var Rc = Object.freeze({
        __proto__: null,
        ambient: Tc,
        sky: _c,
        directional: Pc,
        fog: Uc,
        init: () => {
            (hl.DY.value = Uc.near),
                (hl.Ft.value = Uc.CR),
                (hl.PF.value = Uc.color),
                (hl.UO.value = _c.color),
                (hl.Kp.value = Tc.color),
                (hl.KK.value = Pc.color),
                (hl.Vr.value = Pc.dir),
                xi(Pc.dir, 1.5, 2.5, 0),
                _i(Pc.dir, Pc.dir),
                ll(Pc.dir);
        },
        tick: ({ dt: t, world: e, viewRange: s, camera: i }) => {
            e.data && zc(e), e.data && Ac();
            let n = s + 10;
            Ic != n && ((hl.DY.value = 5), (hl.Ft.value = n), (Ic = n));
        },
        onWorldParse: ({ world: t, first: e }) => {
            t.data.cols.forEach((t, e) => {
                Mc[e] = {
                    fog: oa(t.fog),
                    directional: oa(t.directional),
                    ambient: oa(t.ambient),
                    sky: oa(t.sky)
                };
            }),
                Dc();
        },
        createWorldSounds: Dc
    });
    let Bc = 1;
    const Fc = t => {
            (Bc = t % 2147483647) <= 0 && (Bc += 2147483646);
        },
        Nc = () =>
            ((() => (Bc = (16807 * Bc) % 2147483647))() - 1) / 2147483647,
        Lc = (t, e) => (t * e) / 255,
        Oc = (t, e) => Math.round((t / e) * 65535),
        qc = (t, e) => (t * e) / 65535,
        Hc = (t, e) => (t * e) / 4294967295,
        Wc = t => (t[0] << 4) | (15 & t[1]),
        Zc = t => [t >>> 4, 15 & t],
        jc = (t, e) => {
            const s = e / 65535;
            return (((t[0] / s) << 16) | ((t[1] / s) & 65535)) >>> 0;
        },
        Gc = (t, e) => {
            const s = e / 65535;
            return [(t >>> 16) * s, (65535 & t) * s];
        },
        Vc = t => {
            const e = Math.floor(t % 8);
            t /= 8;
            const s = Math.floor(t % 8);
            t /= 8;
            const i = Math.floor(t % 10);
            t /= 10;
            const n = Math.floor(t % 10);
            return (
                (t /= 10),
                { col3: e, col2: s, col1: i, val1: Math.floor(t), val2: n }
            );
        },
        Yc = t => {
            const e = Math.floor(t % 16);
            return (t /= 16), { type: Math.floor(t % 16), value: e };
        },
        Jc = 256 / (2 * Math.PI),
        Xc = (t, e, s) => (
            (e.id = s.id),
            xi(e.wU, s.x / 4, 0, s.z / 4),
            (e.wU[1] =
                Math.round(t.getHeight(e.wU[0], e.wU[2])) - 10 + s.y / 8),
            e.rot.set(s.rx / Jc, s.ry / Jc, s.rz / Jc),
            (e.scale = s.scale / 16),
            e
        ),
        Qc = (t, e) => (
            (t.id = e.id),
            (t.meta = e.meta),
            (t.class = e.class),
            (t.faction = e.faction),
            (t.name = e.name),
            (t.wU = Gc(e.wU, 768)),
            (t.rot = Lc(e.rot, 2 * Math.PI)),
            t
        ),
        Kc = (t, e) => {
            t.geometry.foliage ||
                (t.geometry.foliage = new Li(e, {
                    info: { size: 1, data: new Float32Array(1) },
                    position: { size: 4, data: new Float32Array(4) }
                })),
                t.meshes.foliage ||
                    ((t.meshes.foliage = new yn(e, {
                        mode: e.POINTS,
                        matrixAutoUpdate: !1,
                        receiveShadow: nl.LG,
                        geometry: t.geometry.foliage,
                        program: vl.foliage
                    })),
                    (t.meshes.foliage.renderOrder = 1e3),
                    t.meshes.terrain.addChild(t.meshes.foliage),
                    t.meshes.foliage.updateMatrix());
        };
    var th = Object.freeze({
        __proto__: null,
        init: () => {},
        rebuild: ({ chunk: t, gl: e, info: s }) => {
            if (vi.grass && s.foliage) {
                const s = [];
                for (let e = 0; e < 64; ++e)
                    for (let i = 0; i < 64; ++i) {
                        const n = i + 64 * e,
                            a = Yc(t.data.foliage.readUInt8(n));
                        Fc(n ** 2);
                        for (
                            let n = 0;
                            n < Math.min(Math.round(a.value / 8), 2);
                            ++n
                        ) {
                            const n = [
                                i - 0.7 + 1.4 * Nc(),
                                0,
                                e - 0.7 + 1.4 * Nc(),
                                0.4 + ((1.5 * Nc() + 0.2) * a.value) / 15
                            ];
                            if (
                                n[0] < 0 ||
                                n[0] >= 64 ||
                                n[2] < 0 ||
                                n[2] >= 64
                            )
                                continue;
                            n[1] = t.getHeight(n[0], n[2]) + 0.5 * n[3];
                            const r = { wU: n, info: [a.type] };
                            (n[0] += t.origin[0]),
                                (n[2] += t.origin[2]),
                                s.push(r);
                        }
                    }
                const i = s.length;
                if (!(i > 0)) return;
                Kc(t, e);
                const n = t.geometry.foliage;
                let a, r;
                n.attributes.position.data.byteLength == 4 * i * 4
                    ? ((a = n.attributes.position.data),
                      (r = n.attributes.info.data))
                    : ((a = new Float32Array(4 * i)),
                      (n.attributes.position.data = a),
                      (r = new Float32Array(1 * i)),
                      (n.attributes.info.data = r)),
                    s.forEach((t, e) => {
                        a.set(t.wU, 4 * e), r.set(t.info, 1 * e);
                    }),
                    n.setDrawRange(0, i),
                    n.updateAttribute(n.attributes.position),
                    n.updateAttribute(n.attributes.info),
                    (n.bounds = t.geometry.terrain.bounds);
            }
        },
        destroy: ({ chunk: t, gl: e, scene: s }) => {
            t.geometry.foliage && t.geometry.foliage.remove();
        },
        onWorldParse: ({ world: t, first: e }) => {
            const s = t.data.settings.find(t => "foliagetex" === t.id);
            s &&
                _r("foliage/" + s.value + ".png", t => {
                    (vl.foliage.active = !0),
                        (vl.foliage.uniforms.RK.value = t);
                });
        }
    });
    const eh = [],
        sh = (t, e, s, i) => {
            const n = Wn.entity(t);
            if (n && s.fx.effectMissile) {
                const t = {
                    targetid: e,
                    timer: i,
                    effect: cc(s.fx.effectMissile),
                    start: $i(
                        [0, 0, 0],
                        Ai(Gn, [0, 0, n.shape.radius], n.rot),
                        n.wU
                    )
                };
                eh.push(t);
            }
        },
        ih = (t, e, s, i) => {
            if (s.fx.effectMissile) {
                const n = {
                    timer: i,
                    start: t,
                    path: e,
                    effect: cc(s.fx.effectMissile)
                };
                eh.push(n);
            }
        };
    var nh = Object.freeze({
        __proto__: null,
        addMissileTargeted: sh,
        addMissileFree: ih,
        tick: ({ dt: t, world: e }) => {
            eh.forEach((t, s) => {
                const i = e.entity(t.targetid);
                if ((t.targetid > 0 && !i) || t.timer.done(e.smoothtime))
                    return eh.splice(s, 1), void (t.effect.data.remove = !0);
                let n = t.path;
                n || (n = Si([0, 0, 0], i.visualPosition, t.start)),
                    Ei(
                        t.effect.position,
                        t.start,
                        n,
                        t.timer.fraction(e.smoothtime)
                    );
                const a =
                    e.getHeight(t.effect.position[0], t.effect.position[2]) +
                    (i ? 0.3 : 0.7);
                a > t.effect.position[1] && (t.effect.position[1] = a),
                    i && t.effect.lookAt(i.visualPosition, !1, Zn),
                    i &&
                        t.timer.passed(e.smoothtime) > 0.1 &&
                        (wi(t.start, t.effect.position),
                        (t.timer.start = e.smoothtime)),
                    t.effect.updateMatrixWorld();
            });
        },
        onWorldDestroy: ({ world: t }) => {
            eh.forEach(t => {
                t.effect.data.remove = !0;
            }),
                (eh.length = 0);
        }
    });
    let ah = void 0,
        rh = [];
    const oh = new Al(0, 1),
        lh = t => oh.reset(t.smoothtime, Rr(1, 2));
    var ch = Object.freeze({
        __proto__: null,
        tick: ({ world: t }) => {
            rh &&
                (ah
                    ? ah.ended && (lh(t), (ah = void 0))
                    : oh.done(t.smoothtime) &&
                      (0 === oh.start
                          ? lh(t)
                          : (ah = Jr({
                                id: "music/" + Br(rh),
                                pitch: -1,
                                music: !0
                            }))));
        },
        onWorldParse: ({ world: t, first: e }) => {
            e && ah && (ah.stop(), (ah = void 0));
            const s = t.getSetting("music");
            void 0 !== s && (rh = s.split(","));
        }
    });
    let hh;
    var dh = Object.freeze({
        __proto__: null,
        get mesh() {
            return hh;
        },
        init: () => {
            ki((hh = new yn(Fn, { program: vl.sun })).scale, 0.25),
                hh.setParent($l),
                (hh.visible = !1),
                wr("engine/plane.ho", t => {
                    const e = new Li(Fn, t);
                    (hh.geometry = e), (hh.visible = !0);
                });
        },
        tick: ({ dt: t, world: e, camera: s, cameraPivot: i }) => {
            wi(hh.position, Pc.dir),
                Mi(hh.position, hh.position, 0.45),
                hh.lookAt(jn, !1, Zn);
        }
    });
    const uh = {
            beigerocks: [0.8, 0.31, 0.6, 0.48],
            beigesand: [0.8, 0.54, 0.73, 0.43],
            bluegrass: [1.3, 0.29, 0.68, 0.6],
            browndirt: [0.8, 0.2, 0.54, 0.65],
            cobblestone: [1.5, 0.23, 0.75, 0.45],
            darkrocks: [0.8, 0.17, 0.49, 0.51],
            driedmud: [0.8, 0.48, 0.76, 0.22],
            greengrass: [1.3, 0.22, 0.52, 0.71],
            greyrock: [0.8, 0.24, 0.47, 0.57],
            mossysandstone: [0.8, 0.21, 0.76, 0.45],
            muddyrocks: [0.8, 0.21, 0.48, 0.73],
            orangesand: [0.8, 0.65, 0.86, 0.35],
            purplefungus: [0.8, 0.21, 0.44, 0.53],
            purplerock: [0.8, 0.15, 0.4, 0.36],
            sedimentary: [0.8, 0.33, 0.59, 0.42],
            mossygrass: [1, 0.22, 0.52, 0.6]
        },
        mh = [0, 0, 0],
        ph = [0, 0, 0],
        fh = [0, 0, 0],
        gh = [0, 0, 0],
        vh = [0, 0, 0],
        yh = [0, 0, 0],
        bh = (t, e, s, i) => {
            s == i.col1
                ? (t[e] = 0.5 + (i.val1 / 8) * 0.5)
                : s == i.col2
                ? (t[e] = 0.5 - (i.val1 / 8) * 0.5)
                : s == i.col3
                ? (t[e] = (0.5 - (i.val1 / 8) * 0.5) * (i.val2 / 8) * 0.5)
                : (t[e] = 0);
        },
        wh = {
            min: [0, 0, 0],
            max: [64, 64, 64],
            center: [32, 32, 32],
            scale: [64, 64, 64],
            radius: 60,
            initiated: !0
        },
        xh = (t, e, s) => {
            if (
                (t.geometry.terrain ||
                    ((t.geometry.terrain = new Li(e, kh(e, 64))),
                    Object.assign(t.geometry.terrain.bounds, wh)),
                !t.meshes.terrain)
            ) {
                const i = (t.meshes.terrain = new yn(e, {
                    matrixAutoUpdate: !1,
                    shadowProgram: vl.shadowTerrain,
                    throwShadow: new Set([...nl.shadowStatic, ...nl.water]),
                    receiveShadow: nl.LG,
                    geometry: t.geometry.terrain,
                    program: vl.terrain
                }));
                (i.frustumCulled = !0),
                    wi(i.position, t.origin),
                    s.addChild(i),
                    (i.renderOrder = 2e3),
                    i.updateMatrix(),
                    i.updateMatrixWorld();
            }
        },
        kh = (t, e) => {
            const s = (e + 1) ** 2,
                i = e ** 2,
                n = new Float32Array(3 * s),
                a = new Float32Array(3 * s),
                r = new Float32Array(2 * s),
                o = new Uint32Array(6 * i);
            let l = 0;
            for (let t = 0, s = 0; t <= e; ++t)
                for (let i = 0; i <= e; ++i, ++s) {
                    if (
                        ((n[3 * s + 0] = i),
                        (n[3 * s + 2] = t),
                        (r[2 * s] = i / e),
                        (r[2 * s + 1] = t / e),
                        i === e || t === e)
                    )
                        continue;
                    const a = i + t * (e + 1),
                        c = i + (t + 1) * (e + 1),
                        h = i + (t + 1) * (e + 1) + 1,
                        d = i + t * (e + 1) + 1;
                    (o[6 * l] = a),
                        (o[6 * l + 1] = c),
                        (o[6 * l + 2] = d),
                        (o[6 * l + 3] = c),
                        (o[6 * l + 4] = h),
                        (o[6 * l + 5] = d),
                        ++l;
                }
            return {
                position: { size: 3, data: n },
                hZ: { size: 3, data: a },
                Lz: { size: 2, data: r },
                index: { type: t.UNSIGNED_INT, data: o },
                Bh: { size: 4, data: new Float32Array(4 * s) },
                Gb: { size: 4, data: new Float32Array(4 * s) }
            };
        };
    var $h = Object.freeze({
        __proto__: null,
        rebuild: ({ chunk: t, gl: e, scene: s, info: i }) => {
            xh(t, e, s);
            const n = t.geometry.terrain;
            if (i.heightmap) {
                const e = n.attributes.position.data,
                    s = n.attributes.hZ.data,
                    i = n.attributes.index.data;
                for (let s = 0; s < 65; ++s)
                    for (let i = 0; i < 65; ++i) {
                        e[3 * (i + 65 * s) + 1] = t.getHeight(i, s);
                    }
                for (let t = 0, e = s.length; t < e; ++t) s[t] = 0;
                for (let t = 0, n = i.length; t < n; t += 3) {
                    const n = 3 * i[t],
                        a = 3 * i[t + 2],
                        r = 3 * i[t + 1];
                    xi(mh, e[n], e[n + 1], e[n + 2]),
                        xi(ph, e[a], e[a + 1], e[a + 2]),
                        xi(fh, e[r], e[r + 1], e[r + 2]),
                        Si(gh, mh, ph),
                        Si(vh, fh, ph),
                        Ui(yh, gh, vh),
                        (s[n] += yh[0]),
                        (s[n + 1] += yh[1]),
                        (s[n + 2] += yh[2]),
                        (s[a] += yh[0]),
                        (s[a + 1] += yh[1]),
                        (s[a + 2] += yh[2]),
                        (s[r] += yh[0]),
                        (s[r + 1] += yh[1]),
                        (s[r + 2] += yh[2]);
                }
                for (let t = 0, e = s.length; t < e; t += 3)
                    xi(yh, s[t], s[t + 1], s[t + 2]), _i(yh, yh), s.set(yh, t);
                n.updateAttribute(n.attributes.position),
                    n.updateAttribute(n.attributes.hZ);
            }
            if (i.texture) {
                const e = n.attributes.Bh.data,
                    s = n.attributes.Gb.data;
                for (let i = 0; i < 65; ++i)
                    for (let n = 0; n < 65; ++n) {
                        const a = n + 65 * i;
                        let r;
                        if (64 == i || 64 == n) {
                            const e = t.getNeighborChunk(n, i);
                            if (e && e.deserialized)
                                r = Vc(
                                    e.data.color.readUInt16BE(
                                        2 * ((n % 64) + (i % 64) * 64)
                                    )
                                );
                            else {
                                const e = Math.min(n, 63),
                                    s = Math.min(i, 63);
                                r = Vc(
                                    t.data.color.readUInt16BE(2 * (e + 64 * s))
                                );
                            }
                        } else
                            r = Vc(t.data.color.readUInt16BE(2 * (n + 64 * i)));
                        for (let t = 0; t < 4; ++t)
                            bh(e, 4 * a + t, t, r), bh(s, 4 * a + t, t + 4, r);
                    }
                n.updateAttribute(n.attributes.Bh),
                    n.updateAttribute(n.attributes.Gb);
            }
        },
        createTerrainGeometry: kh,
        destroy: ({ chunk: t, gl: e, scene: s }) => {
            t.geometry.terrain && t.geometry.terrain.remove(),
                t.meshes.terrain && s.removeChild(t.meshes.terrain);
        },
        onWorldParse: ({ world: t, first: e }) => {
            const s = t.data.settings.find(t => "terraintex" === t.id);
            s &&
                s.value.split(",").forEach((t, e) => {
                    _r("terrain/" + t + ".jpg", s => {
                        Mr.terrain[e] = s;
                        const i = hl["tinf" + e];
                        tn(i.value, uh[t]), i.state++;
                    });
                });
        }
    });
    const Sh = [],
        Mh = [],
        Eh = (t, e) => {
            const s = e ** 2,
                i = new Float32Array(3 * (e + 1) ** 2),
                n = new Uint32Array(6 * s),
                a = 1 / e;
            let r = 0;
            for (let t = 0, s = 0; t <= e; ++t)
                for (let o = 0; o <= e; ++o, ++s) {
                    if (
                        ((i[3 * s + 0] = a * o - 0.5),
                        (i[3 * s + 2] = a * t - 0.5),
                        o === e || t === e)
                    )
                        continue;
                    const l = o + t * (e + 1),
                        c = o + (t + 1) * (e + 1),
                        h = o + (t + 1) * (e + 1) + 1,
                        d = o + t * (e + 1) + 1;
                    (n[6 * r] = l),
                        (n[6 * r + 1] = c),
                        (n[6 * r + 2] = d),
                        (n[6 * r + 3] = c),
                        (n[6 * r + 4] = h),
                        (n[6 * r + 5] = d),
                        ++r;
                }
            return {
                position: { size: 3, data: i },
                index: { type: t.UNSIGNED_INT, data: n }
            };
        };
    var Ch = Object.freeze({
        __proto__: null,
        meshes: Mh,
        init: () => {
            (Sh[0] = new Li(Fn, Eh(Fn, 64))),
                (Sh[1] = new Li(Fn, Eh(Fn, 8))),
                (Sh[2] = new Li(Fn, Eh(Fn, 1))),
                _r("water.jpg", t => {
                    (vl.water.uniforms.pk.value = t),
                        _r("water2.jpg", t => {
                            (vl.water.active = !0),
                                (vl.water.uniforms.WY.value = t);
                        });
                });
        },
        onWorldParse: ({ world: t, first: e }) => {
            for (let e = 0; e < t.data.water.length; ++e) {
                let s = Mh[e];
                const i = t.data.water[e];
                s ||
                    ((Mh[e] = s = new yn(Fn, {
                        matrixAutoUpdate: !1,
                        program: vl.water,
                        receiveShadow: nl.water
                    })),
                    Hn.addChild(s)),
                    (s.data = i),
                    (s.geometry = Sh[i.Xj]),
                    (s.Xj = i.Xj),
                    (s.speed = i.speed),
                    (s.KP = i.KP),
                    (s.Dq = i.Dq),
                    (s.visibility = i.visibility),
                    (s.YM = oa(i.YM)),
                    (s.Vf = oa(i.Vf)),
                    (s.qZ = oa(i.qZ)),
                    (s.renderOrder = 5e3);
                const n = 64 * t.chunkAmount;
                0 == i.Xj
                    ? (xi(s.position, 0.5 * n, i.wU[1] / 10, 0.5 * n),
                      xi(s.scale, 2 * n, 1, 2 * n),
                      s.rotation.set(0, 0, 0))
                    : (xi(s.position, i.wU[0], i.wU[1] / 10, i.wU[2]),
                      xi(s.scale, i.sx, 1, i.sz),
                      s.rotation.set(0, i.rot / ia, 0)),
                    (s.position[0] = na(0, n, s.position[0])),
                    (s.position[2] = na(0, n, s.position[2])),
                    s.updateMatrix();
            }
        },
        onWorldDestroy: ({ world: t }) => {
            Mh.forEach(t => {
                t.setParent(null);
            }),
                (Mh.length = 0);
        },
        createWaterGeometry: Eh
    });
    let Th = vi.resolution / 100;
    const _h = new (class {
        constructor({
            canvas: t = document.createElement("canvas"),
            width: e = 300,
            height: s = 150,
            dpr: i = 1,
            alpha: n = !1,
            Jw: a = !0,
            stencil: r = !1,
            antialias: o = !1,
            premultipliedAlpha: l = !1,
            preserveDrawingBuffer: c = !1,
            powerPreference: h = "default",
            autoClear: d = !0,
            webgl: u = 2,
            resolution: m = 1
        } = {}) {
            const p = {
                alpha: n,
                Jw: a,
                stencil: r,
                antialias: o,
                premultipliedAlpha: l,
                preserveDrawingBuffer: c,
                powerPreference: h
            };
            (this.dpr = i),
                (this.alpha = n),
                (this.color = !0),
                (this.Jw = a),
                (this.stencil = r),
                (this.premultipliedAlpha = l),
                (this.autoClear = d),
                2 === u && (this.gl = t.getContext("webgl2", p)),
                (this.isWebgl2 = !!this.gl),
                this.gl ||
                    (this.gl =
                        t.getContext("webgl", p) ||
                        t.getContext("experimental-webgl", p)),
                (this.canvas2dElement = document.createElement("canvas")),
                (this.canvas2dContext = this.canvas2dElement.getContext(
                    "2d",
                    {}
                )),
                (this.gl.renderer = this),
                this.setSize(e, s, m),
                (this.parameters = {}),
                (this.parameters.maxTextureUnits = this.gl.getParameter(
                    this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS
                )),
                (this.state = {}),
                (this.state.blendFunc = { src: this.gl.ONE, XC: this.gl.ZERO }),
                (this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD }),
                (this.state.cullFace = null),
                (this.state.frontFace = this.gl.CCW),
                (this.state.depthMask = !0),
                (this.state.depthFunc = this.gl.LESS),
                (this.state.premultiplyAlpha = !1),
                (this.state.flipY = !1),
                (this.state.framebuffer = null),
                (this.state.viewport = { width: null, height: null }),
                (this.state.textureUnits = []),
                (this.state.activeTextureUnit = 0),
                (this.extensions = {}),
                this.isWebgl2 ||
                    (this.getExtension("OES_texture_float"),
                    this.getExtension("OES_texture_float_linear"),
                    this.getExtension("OES_texture_half_float"),
                    this.getExtension("OES_element_index_uint"),
                    this.getExtension("OES_standard_derivatives"),
                    this.getExtension("EXT_sRGB"),
                    this.getExtension("WEBGL_depth_texture")),
                (this.vertexAttribDivisor = this.gl.renderer.getExtension(
                    "ANGLE_instanced_arrays",
                    "vertexAttribDivisor",
                    "vertexAttribDivisorANGLE"
                )),
                (this.drawArraysInstanced = this.gl.renderer.getExtension(
                    "ANGLE_instanced_arrays",
                    "drawArraysInstanced",
                    "drawArraysInstancedANGLE"
                )),
                (this.drawElementsInstanced = this.gl.renderer.getExtension(
                    "ANGLE_instanced_arrays",
                    "drawElementsInstanced",
                    "drawElementsInstancedANGLE"
                )),
                (this.createVertexArray = this.gl.renderer.getExtension(
                    "OES_vertex_array_object",
                    "createVertexArray",
                    "createVertexArrayOES"
                )),
                (this.bindVertexArray = this.gl.renderer.getExtension(
                    "OES_vertex_array_object",
                    "bindVertexArray",
                    "bindVertexArrayOES"
                )),
                (this.deleteVertexArray = this.gl.renderer.getExtension(
                    "OES_vertex_array_object",
                    "deleteVertexArray",
                    "deleteVertexArrayOES"
                ));
        }
        setSize(t, e, s) {
            (this.width = Math.round(t * s)),
                (this.height = Math.round(e * s)),
                (this.gl.canvas.width = this.width * this.dpr),
                (this.gl.canvas.height = this.height * this.dpr),
                (this.canvas2dElement.width = t * this.dpr),
                (this.canvas2dElement.height = e * this.dpr);
        }
        setViewport(t, e) {
            (this.state.viewport.width === t &&
                this.state.viewport.height === e) ||
                ((this.state.viewport.width = t),
                (this.state.viewport.height = e),
                this.gl.viewport(0, 0, t, e));
        }
        enable(t) {
            !0 !== this.state[t] && (this.gl.enable(t), (this.state[t] = !0));
        }
        disable(t) {
            !1 !== this.state[t] && (this.gl.disable(t), (this.state[t] = !1));
        }
        setBlendFunc(t, e, s, i) {
            (this.state.blendFunc.src === t &&
                this.state.blendFunc.XC === e &&
                this.state.blendFunc.srcAlpha === s &&
                this.state.blendFunc.dstAlpha === i) ||
                ((this.state.blendFunc.src = t),
                (this.state.blendFunc.XC = e),
                (this.state.blendFunc.srcAlpha = s),
                (this.state.blendFunc.dstAlpha = i),
                void 0 !== s
                    ? this.gl.blendFuncSeparate(t, e, s, i)
                    : this.gl.blendFunc(t, e));
        }
        setBlendEquation(t, e) {
            (this.state.blendEquation.modeRGB === t &&
                this.state.blendEquation.modeAlpha === e) ||
                ((this.state.blendEquation.modeRGB = t),
                (this.state.blendEquation.modeAlpha = e),
                void 0 !== e
                    ? this.gl.blendEquationSeparate(t, e)
                    : this.gl.blendEquation(t));
        }
        setCullFace(t) {
            this.state.cullFace !== t &&
                ((this.state.cullFace = t), this.gl.cullFace(t));
        }
        setFrontFace(t) {
            this.state.frontFace !== t &&
                ((this.state.frontFace = t), this.gl.frontFace(t));
        }
        setDepthMask(t) {
            this.state.depthMask !== t &&
                ((this.state.depthMask = t), this.gl.depthMask(t));
        }
        setDepthFunc(t) {
            this.state.depthFunc !== t &&
                ((this.state.depthFunc = t), this.gl.depthFunc(t));
        }
        activeTexture(t) {
            this.state.activeTextureUnit !== t &&
                ((this.state.activeTextureUnit = t),
                this.gl.activeTexture(this.gl.TEXTURE0 + t));
        }
        bindFramebuffer({
            target: t = this.gl.FRAMEBUFFER,
            buffer: e = null
        } = {}) {
            this.state.framebuffer !== e &&
                ((this.state.framebuffer = e), this.gl.bindFramebuffer(t, e));
        }
        getExtension(t, e, s) {
            return e && this.gl[e]
                ? this.gl[e].bind(this.gl)
                : (this.extensions[t] ||
                      (this.extensions[t] = this.gl.getExtension(t)),
                  e
                      ? this.extensions[t][s].bind(this.extensions[t])
                      : this.extensions[t]);
        }
        sortOpaque(t, e) {
            return t.renderOrder !== e.renderOrder
                ? t.renderOrder - e.renderOrder
                : t.program.id !== e.program.id
                ? t.program.id - e.program.id
                : t.zDepth !== e.zDepth
                ? t.zDepth - e.zDepth
                : e.id - t.id;
        }
        sortTransparent(t, e) {
            return t.renderOrder !== e.renderOrder
                ? t.renderOrder - e.renderOrder
                : t.zDepth !== e.zDepth
                ? e.zDepth - t.zDepth
                : e.id - t.id;
        }
        sortUI(t, e) {
            return t.renderOrder !== e.renderOrder
                ? t.renderOrder - e.renderOrder
                : t.program.id !== e.program.id
                ? t.program.id - e.program.id
                : e.id - t.id;
        }
        getRenderList({
            scene: t,
            camera: e,
            frustumCull: s,
            sort: i,
            shadowTarget: n
        }) {
            let a = [];
            e && s && e.updateFrustum();
            const r = [];
            if (
                (t.traverse(t => {
                    if (!t.visible) return !0;
                    if (
                        t.draw &&
                        (!n || t.receiveShadow.has(n) || t.throwShadow.has(n))
                    ) {
                        if (
                            s &&
                            t.frustumCulled &&
                            e &&
                            !e.frustumIntersectsMesh(t)
                        )
                            return !0;
                        if (t.group) {
                            if (r.indexOf(t.group) >= 0) return;
                            r.push(t.group);
                        }
                        a.push(t);
                    }
                }),
                i)
            ) {
                const t = [],
                    s = [],
                    i = [];
                for (let n = 0, r = a.length; n < r; ++n) {
                    const r = a[n];
                    r.program.transparent
                        ? r.program.depthTest
                            ? s.push(r)
                            : i.push(r)
                        : t.push(r),
                        (r.zDepth = 0),
                        0 === r.renderOrder &&
                            r.program.depthTest &&
                            e &&
                            (Yi(Ki, r.VN),
                            Ii(Ki, Ki, e.kX),
                            (r.zDepth = Ki[2]));
                }
                t.sort(this.sortOpaque),
                    s.sort(this.sortTransparent),
                    i.sort(this.sortUI),
                    (a = t.concat(s, i));
            }
            return a;
        }
        render({
            scene: t,
            camera: e,
            target: s = null,
            update: i = !0,
            sort: n = !0,
            frustumCull: a = !0,
            shadowTarget: r = !1,
            sceneCamera: o,
            clear: l = !0
        }) {
            r && (s = r),
                null === s
                    ? (this.bindFramebuffer(),
                      this.setViewport(
                          this.width * this.dpr,
                          this.height * this.dpr
                      ))
                    : (this.bindFramebuffer(s),
                      this.setViewport(s.width, s.height)),
                l &&
                    this.autoClear &&
                    (!this.Jw ||
                        (s && s.Jw) ||
                        (this.enable(this.gl.DEPTH_TEST),
                        this.setDepthMask(!0)),
                    this.gl.clear(
                        (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |
                            (this.Jw ? this.gl.DEPTH_BUFFER_BIT : 0) |
                            (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)
                    ),
                    this.canvas2dContext.clearRect(
                        0,
                        0,
                        this.canvas2dElement.width,
                        this.canvas2dElement.height
                    )),
                i &&
                    t.needsFullUpdate &&
                    (t.updateMatrixWorld(), (t.needsFullUpdate = !1)),
                e && null === e.parent && e.updateMatrixWorld();
            const c = this.getRenderList({
                scene: t,
                camera: e,
                frustumCull: a,
                sort: n,
                shadowTarget: r
            });
            for (let t = 0, s = c.length; t < s; ++t)
                c[t].draw({
                    camera: e,
                    shadowTarget: r,
                    sceneCamera: o,
                    update: i
                });
        }
    })({
        width: window.innerWidth,
        height: window.innerHeight,
        resolution: Th,
        antialias: !1,
        powerPreference: "high-performance"
    });
    _h.isWebgl2 ||
        (alert("WebGL2 problem found."), (window.location.href = "/technical"));
    const Ph = _h.gl,
        Uh = new gn(Ph, { fov: 80, near: 0.1, CR: 500 }),
        Ih = new un(),
        zh = new un(),
        Ah = new (class {
            constructor(
                t,
                {
                    width: e,
                    height: s,
                    dpr: i,
                    wrapS: n = t.CLAMP_TO_EDGE,
                    wrapT: a = t.CLAMP_TO_EDGE,
                    minFilter: r = t.LINEAR,
                    magFilter: o = t.LINEAR,
                    resolution: l = 1
                } = {}
            ) {
                (this.gl = t),
                    (this.options = {
                        wrapS: n,
                        wrapT: a,
                        minFilter: r,
                        magFilter: o
                    }),
                    (this.passes = []),
                    (this.geometry = new Li(t, {
                        position: {
                            size: 3,
                            data: new Float32Array([
                                -1,
                                -1,
                                0,
                                3,
                                -1,
                                0,
                                -1,
                                3,
                                0
                            ])
                        },
                        Lz: {
                            size: 2,
                            data: new Float32Array([0, 0, 2, 0, 0, 2])
                        }
                    })),
                    this.resize({ width: e, height: s, dpr: i, resolution: l });
            }
            addPass({
                vertex: t = Rn,
                fragment: e = Bn,
                uniforms: s = {},
                textureUniform: i = "JE",
                enabled: n = !0,
                globalUniforms: a,
                postDraw: r
            } = {}) {
                (s[i] = { value: this.target.texture }),
                    (s.Dt = { value: this.original.texture }),
                    (s.Nh = { value: this.original.depthTexture });
                const o = new qi(this.gl, {
                        vertex: t,
                        fragment: e,
                        uniforms: s,
                        globalUniforms: a
                    }),
                    l = {
                        mesh: new yn(this.gl, {
                            geometry: this.geometry,
                            program: o
                        }),
                        program: o,
                        uniforms: s,
                        enabled: n,
                        textureUniform: i,
                        postDraw: r
                    };
                return this.passes.push(l), l;
            }
            resize({ width: t, height: e, dpr: s, resolution: i = 1 } = {}) {
                s && (this.dpr = s),
                    t && ((this.width = t * i), (this.height = e * i)),
                    (s = this.dpr || this.gl.renderer.dpr),
                    (t = (this.width || this.gl.renderer.width) * s),
                    (e = (this.height || this.gl.renderer.height) * s),
                    (this.options.width = t),
                    (this.options.height = e),
                    (this.target = new Tn(this.gl, {
                        depthTexture: !0,
                        ...this.options
                    })),
                    (this.original = new Tn(this.gl, {
                        depthTexture: !0,
                        ...this.options
                    })),
                    (this.ping = new Tn(this.gl, this.options)),
                    (this.pong = new Tn(this.gl, this.options)),
                    this.passes.forEach(t => {
                        (t.uniforms.Dt = { value: this.original.texture }),
                            (t.uniforms.Nh = {
                                value: this.original.depthTexture
                            });
                    });
            }
            render({
                scene: t,
                camera: e,
                target: s = null,
                update: i = !0,
                sort: n = !0,
                frustumCull: a = !0
            }) {
                const r = this.passes.filter(t => t.enabled);
                this.gl.renderer.render({
                    scene: t,
                    camera: e,
                    target: r.length ? this.original : s,
                    update: i,
                    sort: n,
                    frustumCull: a
                }),
                    r.forEach((t, e) => {
                        (t.mesh.program.uniforms[t.textureUniform].value = e
                            ? e % 2
                                ? this.ping.texture
                                : this.pong.texture
                            : this.target.texture),
                            this.gl.renderer.render({
                                scene: t.mesh,
                                target:
                                    e == r.length - 1
                                        ? s
                                        : e % 2
                                        ? this.pong
                                        : this.ping
                            }),
                            t.postDraw && t.postDraw();
                    });
            }
        })(Ph, {
            width: window.innerWidth,
            height: window.innerHeight,
            resolution: Th
        });
    let Dh = 100,
        Rh = Dh ** 2;
    const Bh = [
            Ar,
            cl,
            kl,
            Rc,
            Cl,
            $h,
            Ch,
            th,
            nh,
            Sc,
            sc,
            zl,
            Ol,
            Sl,
            dh,
            io,
            ch
        ],
        Fh = () => {
            (zh.matrixAutoUpdate = !1),
                zh.addChild(Ih),
                Ih.addChild(Uh),
                Ih.setParent(null),
                xi(Uh.position, 0, 1, -1),
                Uh.lookAt(Zn, Zn),
                ((t, e, s, i, n, a, r) => {
                    (Fn = t), (Nn = e), (Ln = s), (On = i), (qn = n), (Hn = a);
                })(Ph, Uh, Ih, Ah, _h, zh),
                Bh.forEach(t => {
                    t.init && t.init();
                }),
                Bh.splice(2, 1),
                Bh.push(kl),
                Ph.clearColor(0, 0, 0, 1),
                (_h.canvas2dElement.className = "l-canvas"),
                (_h.gl.canvas.className = "l-canvas"),
                (Ph.canvas.style.pointerEvents = "all"),
                window.addEventListener("resize", Nh, !1),
                (_h.resize = Nh),
                Nh(null, !0);
        };
    Te.subscribe(t => {
        (Rh = (Dh = t ** 2 / 10) ** 2), (Uh.CR = Dh + 10), Uh.perspective();
    }),
        Ht.subscribe(t => {});
    const Nh = (t, e) => {
        e ||
            (_h.setSize(window.innerWidth, window.innerHeight, Th),
            Ah.resize({
                width: window.innerWidth,
                height: window.innerHeight,
                dpr: 1,
                resolution: Th
            })),
            (Uh.aspect = Ph.canvas.width / Ph.canvas.height),
            Uh.perspective(),
            ((t, e) => {
                Pn(hl.resolution.value, t, e), hl.resolution.state++;
            })(Ph.canvas.width, Ph.canvas.height);
    };
    _e.subscribe(t => {
        const e = t / 100,
            s = Th !== e;
        (Th = e), (vi.resolutionScale = e), s && Nh(null, !1);
    });
    const Lh = ({ world: t, first: e }) => {
            Bh.forEach(s => {
                s.onWorldParse && s.onWorldParse({ world: t, first: e });
            });
        },
        Oh = ({ world: t }) => {
            Bh.forEach(e => {
                e.onWorldDestroy && e.onWorldDestroy({ world: t });
            }),
                (() => {
                    for (const t in ic)
                        void 0 === ic[t] ||
                            ic[t].permanent ||
                            (ic[t].setParent(null), (ic[t] = void 0));
                })();
        },
        qh = (t, e) => {
            Bh.forEach(s => {
                s.rebuild &&
                    s.rebuild({ chunk: t, gl: Ph, scene: zh, info: e });
            }),
                (e.heightmap || e.texture) && ol(!0);
        },
        Hh = t => {
            Bh.forEach(e => {
                e.destroy && e.destroy({ chunk: t, gl: Ph, scene: zh });
            });
        };
    let Wh;
    Ne.subscribe(async t => {
        await fetch(`/assets/loc/${t}.json?v=35201089`).then(async t => {
            (Wh = await t.json()), Lt.set(!0);
        });
    });
    const Zh = (t, e) => Wh.items[t]["book" == t ? Math.floor(e / 5) : e],
        jh = (t, e) =>
            Zh(t, e).name + ("book" == t ? " Lv. " + ((e % 5) + 1) : ""),
        Gh = (t, e) => Zh(t, e).description;
    function Vh(e) {
        let s;
        return {
            c() {
                ((s = E("div")).innerHTML =
                    '<div class="bounce1 svelte-twvoek"></div><div class="bounce2 svelte-twvoek"></div><div class="bounce3 svelte-twvoek"></div>'),
                    U(s, "class", "spinner svelte-twvoek");
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    class Yh extends Pt {
        constructor(t) {
            super(), _t(this, t, null, Vh, l, {});
        }
    }
    function Jh(t, { delay: s = 0, duration: i = 400, easing: n = e }) {
        const a = +getComputedStyle(t).opacity;
        return {
            delay: s,
            duration: i,
            easing: n,
            css: t => `opacity: ${t * a}`
        };
    }
    let Xh = 0.03,
        Qh = 0.03;
    const Kh = t => {
        Xh =
            (5 * Xh +
                na(
                    (Wn.tickId - t) * Wn.timestep - (1 / 30 + 0.006),
                    0.001,
                    1
                )) /
            6;
    };
    let td = 0.016;
    const ed = t => {
        td = (10 * td + t) / 11;
    };
    let sd = 0.016,
        id = 0;
    const nd = t => {
            sd = t;
        },
        ad = new Al(0, 0.05);
    var rd = Object.freeze({
        __proto__: null,
        parseLatencyPacket: Kh,
        parseFrameDelta: ed,
        parseBandwidth: nd,
        tick: t => {
            vi.showFpsPing &&
                ad.done(Wn.time) &&
                ((Qh = (20 * Qh + Xh) / 21),
                (id = (10 * id + sd) / 11),
                ad.reset(Wn.time),
                oe.update(
                    t => (
                        (t[0] = na((1e3 * Qh) >> 0, 1, 999)),
                        (t[1] = (1e3 / td).toFixed(1)),
                        (t[2] = (id / 1e3).toFixed(1)),
                        t
                    )
                ));
        },
        onWorldEnter: t => {
            ad.reset(t.time);
        }
    });
    let od,
        ld = 0,
        cd = 0;
    const hd = { open: [], close: [] };
    for (const t in tr) hd[tr[t].header] = [];
    const dd = t => {},
        ud = t => {
            console.log("connection opened"), (ld = 1);
            for (let e = 0, s = hd.open.length; e < s; ++e) hd.open[e](t);
        },
        md = t => {
            console.log("connection closed:", t.reason, t.code), (ld = 0);
            for (let e = 0, s = hd.close.length; e < s; ++e) hd.close[e](t);
        },
        pd = t => {
            bd(t.data.byteLength);
            const e = (t => {
                    if (0 === t.length) return;
                    return sr[t.readUInt8(0, !1)];
                })((t = Na(t.data))),
                s = e && hd[e.header];
            if (s) for (let e = 0, i = s.length; e < i; ++e) s[e](t);
        },
        fd = (t, e) => {
            hd[t].push(e);
        },
        gd = t => {
            void 0 !== od && 1 === ld && od.send(t);
        };
    let vd = 0,
        yd = 0;
    const bd = t => {
        const e = Zl();
        (yd += t), e - vd > 250 && ((cd = 4 * yd), (yd = 0), (vd = e), nd(cd));
    };
    function wd(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = (t[1] || "") + "";
        const l = new Yh({});
        let c = "askReconnect" === t[0] && xd(t);
        return {
            c() {
                (e = E("div")),
                    Et(l.$$.fragment),
                    c && c.c(),
                    (s = E("h5")),
                    (i = C(o)),
                    (n = C("\n  — 0.28.3520 Live")),
                    U(s, "class", "version textgrey svelte-qe246z"),
                    U(e, "class", "l-ui container svelte-qe246z");
            },
            m(t, a) {
                $(t, e, a),
                    Ct(l, e, null),
                    c && c.m(e, null),
                    k(e, s),
                    k(s, i),
                    k(s, n),
                    (r = !0);
            },
            p(t, n) {
                "askReconnect" === t[0]
                    ? c
                        ? c.p(t, n)
                        : ((c = xd(t)).c(), c.m(e, s))
                    : c && (c.d(1), (c = null)),
                    (!r || 2 & n) && o !== (o = (t[1] || "") + "") && z(i, o);
            },
            i(t) {
                r ||
                    (vt(l.$$.fragment, t),
                    ot(() => {
                        a || (a = wt(e, Jh, {}, !0)), a.run(1);
                    }),
                    (r = !0));
            },
            o(t) {
                yt(l.$$.fragment, t),
                    a || (a = wt(e, Jh, {}, !1)),
                    a.run(0),
                    (r = !1);
            },
            d(t) {
                t && S(e), Tt(l), c && c.d(), t && a && a.end();
            }
        };
    }
    function xd(e) {
        let s, i;
        return {
            c() {
                ((s = E("div")).textContent = "Reconnect"),
                    U(s, "class", "btn primary reconnect svelte-qe246z"),
                    (i = P(s, "click", e[2]));
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            d(t) {
                t && S(s), i();
            }
        };
    }
    function kd(t) {
        let e,
            s,
            i = t[0] && wd(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[0]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = wd(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function $d(t, e, s) {
        let i, n;
        h(t, Ce, t => s(3, (i = t))),
            h(t, Ee, t => s(1, (n = t))),
            G(() => {
                "autoReconnect" == r &&
                    (document.hidden
                        ? (s(0, (r = !0)),
                          setTimeout(() => {
                              s(0, (r = "autoReconnect"));
                          }, 1e3))
                        : setTimeout(a, 1e3));
            });
        const a = async () => {
            Ee.update(t => !1), s(0, (r = !0));
            try {
                if (!i) throw null;
                const t = await fetch("api/user/join", {
                        method: "POST",
                        body: JSON.stringify({ id: i })
                    }),
                    e = await t.json();
                if (!e.world) throw (f(Ce, (i = 0)), null);
                Ee.set(e.world);
            } catch (t) {
                window.location.href = "/";
            }
        };
        let { active: r } = e;
        return (
            (t.$set = t => {
                "active" in t && s(0, (r = t.active));
            }),
            [r, n, a]
        );
    }
    class Sd extends Pt {
        constructor(t) {
            super(), _t(this, t, $d, kd, o, { active: 0 });
        }
    }
    function Md(e) {
        let s;
        return {
            c() {
                D((s = E("div")), "cursor", e[1]);
            },
            m(t, i) {
                $(t, s, i), e[2](s);
            },
            p(t, [e]) {
                2 & e && D(s, "cursor", t[1]);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), e[2](null);
            }
        };
    }
    function Ed(t, e, s) {
        let i, n;
        return (
            h(t, Yt, t => s(1, (i = t))),
            V(() => {
                n.appendChild(_h.gl.canvas), n.appendChild(_h.canvas2dElement);
            }),
            [
                n,
                i,
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(0, (n = t));
                    });
                }
            ]
        );
    }
    class Cd extends Pt {
        constructor(t) {
            super(), _t(this, t, Ed, Md, o, {});
        }
    }
    function Td(t) {
        let e, s, i, n, a;
        return {
            c() {
                (e = E("div")),
                    U(
                        (s = E("img")),
                        "class",
                        (i = p(t[2].css) + " svelte-120o2pb")
                    ),
                    s.src !== (n = t[2].img) && U(s, "src", n),
                    U(
                        e,
                        "class",
                        (a =
                            "container border " +
                            t[2].border +
                            " svelte-120o2pb")
                    ),
                    D(e, "top", t[1] + "px"),
                    D(e, "left", t[0] + "px");
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, r) {
                4 & r &&
                    i !== (i = p(t[2].css) + " svelte-120o2pb") &&
                    U(s, "class", i),
                    4 & r && s.src !== (n = t[2].img) && U(s, "src", n),
                    4 & r &&
                        a !==
                            (a =
                                "container border " +
                                t[2].border +
                                " svelte-120o2pb") &&
                        U(e, "class", a),
                    2 & r && D(e, "top", t[1] + "px"),
                    1 & r && D(e, "left", t[0] + "px");
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function _d(e) {
        let s,
            i = e[2] && e[0] && e[1] && Td(e);
        return {
            c() {
                i && i.c(), (s = _());
            },
            m(t, e) {
                i && i.m(t, e), $(t, s, e);
            },
            p(t, [e]) {
                t[2] && t[0] && t[1]
                    ? i
                        ? i.p(t, e)
                        : ((i = Td(t)).c(), i.m(s.parentNode, s))
                    : i && (i.d(1), (i = null));
            },
            i: t,
            o: t,
            d(t) {
                i && i.d(t), t && S(s);
            }
        };
    }
    function Pd(t, e, s) {
        let i, n, a;
        h(t, Vt, t => s(2, (i = t)));
        const r = t => {
            (i || n || a) &&
                (i
                    ? (s(0, (n = t.clientX - 10)), s(1, (a = t.clientY - 10)))
                    : (s(0, (n = 0)), s(1, (a = 0))));
        };
        return (
            V(() => {
                document.addEventListener("mousemove", r, !1);
            }),
            J(() => {
                document.removeEventListener("mousemove", r);
            }),
            [n, a, i]
        );
    }
    class Ud extends Pt {
        constructor(t) {
            super(), _t(this, t, Pd, _d, o, {});
        }
    }
    function Id(t, e, s) {
        const i = t.slice();
        return (i[6] = e[s]), i;
    }
    function zd(t) {
        let e,
            s = t[2].opts,
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = Rd(Id(t, s, e));
        let n = null;
        return (
            s.length || (n = Ad()).c(),
            {
                c() {
                    e = E("div");
                    for (let t = 0; t < i.length; t += 1) i[t].c();
                    U(e, "class", "panel context border grey"),
                        D(e, "left", t[2].x + "px"),
                        D(e, "top", t[2].y + "px");
                },
                m(s, a) {
                    $(s, e, a);
                    for (let t = 0; t < i.length; t += 1) i[t].m(e, null);
                    n && n.m(e, null), t[5](e);
                },
                p(t, a) {
                    if (5 & a) {
                        let n;
                        for (s = t[2].opts, n = 0; n < s.length; n += 1) {
                            const r = Id(t, s, n);
                            i[n]
                                ? i[n].p(r, a)
                                : ((i[n] = Rd(r)), i[n].c(), i[n].m(e, null));
                        }
                        for (; n < i.length; n += 1) i[n].d(1);
                        i.length = s.length;
                    }
                    s.length
                        ? n && (n.d(1), (n = null))
                        : n || ((n = Ad()).c(), n.m(e, null)),
                        4 & a && D(e, "left", t[2].x + "px"),
                        4 & a && D(e, "top", t[2].y + "px");
                },
                d(s) {
                    s && S(e), M(i, s), n && n.d(), t[5](null);
                }
            }
        );
    }
    function Ad(t) {
        let e;
        return {
            c() {
                ((e = E("div")).textContent = "No options"),
                    U(e, "class", "choice disabled");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Dd(t) {
        let e, s, i;
        return {
            c() {
                (e = E("img")),
                    (i = T()),
                    U(e, "class", "svgicon"),
                    e.src !==
                        (s =
                            "/assets/ui/icons/" +
                            t[6].icon +
                            ".svg?v=35201089") && U(e, "src", s);
            },
            m(t, s) {
                $(t, e, s), $(t, i, s);
            },
            p(t, i) {
                4 & i &&
                    e.src !==
                        (s =
                            "/assets/ui/icons/" +
                            t[6].icon +
                            ".svg?v=35201089") &&
                    U(e, "src", s);
            },
            d(t) {
                t && S(e), t && S(i);
            }
        };
    }
    function Rd(t) {
        let e,
            s,
            i,
            n,
            a = t[6].name + "",
            r = t[6].icon && Dd(t);
        function o(...e) {
            return t[4](t[6], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    r && r.c(),
                    (s = C(a)),
                    U(e, "class", (i = "choice " + (t[6].css || ""))),
                    (n = P(e, "click", o));
            },
            m(t, i) {
                $(t, e, i), r && r.m(e, null), k(e, s);
            },
            p(n, o) {
                (t = n)[6].icon
                    ? r
                        ? r.p(t, o)
                        : ((r = Dd(t)).c(), r.m(e, s))
                    : r && (r.d(1), (r = null)),
                    4 & o && a !== (a = t[6].name + "") && z(s, a),
                    4 & o &&
                        i !== (i = "choice " + (t[6].css || "")) &&
                        U(e, "class", i);
            },
            d(t) {
                t && S(e), r && r.d(), n();
            }
        };
    }
    function Bd(e) {
        let s,
            i = e[2] && zd(e);
        return {
            c() {
                i && i.c(), (s = _());
            },
            m(t, e) {
                i && i.m(t, e), $(t, s, e);
            },
            p(t, [e]) {
                t[2]
                    ? i
                        ? i.p(t, e)
                        : ((i = zd(t)).c(), i.m(s.parentNode, s))
                    : i && (i.d(1), (i = null));
            },
            i: t,
            o: t,
            d(t) {
                i && i.d(t), t && S(s);
            }
        };
    }
    function Fd(t, e, s) {
        let i, n;
        h(t, Rt, t => s(2, (i = t)));
        const a = t => {
                t.target != n &&
                    t.target.parentNode != n &&
                    i &&
                    Rt.set(void 0);
            },
            r = t => {
                t.fun(), Rt.set(void 0);
            };
        V(() => {
            document.addEventListener("pointerdown", a, !1);
        }),
            J(() => {
                document.removeEventListener("pointerdown", a);
            });
        return [
            r,
            n,
            i,
            a,
            t => r(t),
            function (t) {
                tt[t ? "unshift" : "push"](() => {
                    s(1, (n = t));
                });
            }
        ];
    }
    class Nd extends Pt {
        constructor(t) {
            super(), _t(this, t, Fd, Bd, o, { opt: 0 });
        }
        get opt() {
            return this.$$.ctx[0];
        }
    }

    const Ld = (t, e = "") => {
        if(["partyleave","partycreate"].includes(t)){
            window.partyLink = ""
        }
            gd(tr.clientCommand.packData({ command: t, string: e + "" }));
        },
        Od = {
            partyleave: {},
            partyinvite: { a: 1 },
            partycreate: {},
            global: { a: 1, chat: !0 },
            party: { a: 1, chat: !0 },
            clan: { a: 1, chat: !0 },
            faction: { a: 1, chat: !0 }
        },
        qd = {
            itemmove: { a: 2 },
            itemdrop: { a: 1 },
            itemuse: { a: 1 },
            itemauctionpost: { a: 2 },
            itemauctionfind: { a: 6 },
            itemauctionbuy: { a: 1 },
            itemauctioncancel: { a: 1 },
            itemstash: { a: 1 },
            itemunstash: { a: 1 },
            itemsplithalf: { a: 1 },
            itemsplitone: { a: 1 },
            goldunstash: { a: 1 },
            goldstash: { a: 1 },
            itemtradersell: { a: 1 },
            itemtraderbuy: { a: 1 },
            itemblacksmithupgrade: { a: 1 },
            statincrease: { a: 2 },
            skillremove: { a: 1 },
            respawn: {},
            startqueue: { a: 1 },
            stopqueue: { a: 1 },
            partyaccept: { a: 1 },
            partydecline: { a: 1 },
            partykick: { a: 1 },
            partylink: {},
            partysetrole: { a: 2 },
            summonaccept: { a: 1 },
            whisper: { a: 2, chat: !0 },
            ...Od
        },
        Hd = [0, 0, 1, 1, 2, 3],
        Wd = (t, e) => "book" + (void 0 !== e ? e : "") + Hd[t % 5],
        Zd = (t, e, s, i) =>
            `/assets/items/${t}/${
                "book" == t ? Wd(e, s) : t + e
            }_q${i}.${$r}?v=35201089`,
        jd = t => `/assets/ui/skills/${t}.${$r}?v=35201089`,
        Gd = t => `/assets/ui/slotbg/${t}.${kr}?v=35201089`,
        Vd = t => `/assets/ui/classes/${t}.${kr}?v=35201089`,
        Yd = t => `/assets/ui/factions/${t}.${kr}?v=35201089`;
    function Jd(t) {
        let e, s;
        return {
            c() {
                U((e = E("img")), "class", "icon svelte-erbdzy"),
                    e.src !== (s = "/assets/ui/icons/gem.svg?v=35201089") &&
                        U(e, "src", "/assets/ui/icons/gem.svg?v=35201089");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    window.Ld = Ld;
    function Xd(e) {
        let s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h = e[4] && Jd();
        return {
            c() {
                (s = E("span")),
                    h && h.c(),
                    (i = E("img")),
                    (a = C(e[1])),
                    (r = T()),
                    (o = E("span")),
                    (l = C(e[0])),
                    U(i, "class", "icon svelte-erbdzy"),
                    i.src !== (n = Vd(e[2])) && U(i, "src", n),
                    U(s, "class", "textwhite"),
                    U(o, "class", (c = "name textf" + e[3] + " svelte-erbdzy"));
            },
            m(t, e) {
                $(t, s, e),
                    h && h.m(s, null),
                    k(s, i),
                    k(s, a),
                    k(s, r),
                    $(t, o, e),
                    k(o, l);
            },
            p(t, [e]) {
                t[4]
                    ? h || ((h = Jd()).c(), h.m(s, i))
                    : h && (h.d(1), (h = null)),
                    4 & e && i.src !== (n = Vd(t[2])) && U(i, "src", n),
                    2 & e && z(a, t[1]),
                    1 & e && z(l, t[0]),
                    8 & e &&
                        c !== (c = "name textf" + t[3] + " svelte-erbdzy") &&
                        U(o, "class", c);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), h && h.d(), t && S(o);
            }
        };
    }
    function Qd(t, e, s) {
        let { name: i } = e,
            { level: n } = e,
            { pclass: a } = e,
            { faction: r } = e,
            { sub: o = !1 } = e;
        return (
            (t.$set = t => {
                "name" in t && s(0, (i = t.name)),
                    "level" in t && s(1, (n = t.level)),
                    "pclass" in t && s(2, (a = t.pclass)),
                    "faction" in t && s(3, (r = t.faction)),
                    "sub" in t && s(4, (o = t.sub));
            }),
            [i, n, a, r, o]
        );
    }
    class Kd extends Pt {
        constructor(t) {
            super(),
                _t(this, t, Qd, Xd, o, {
                    name: 0,
                    level: 1,
                    pclass: 2,
                    faction: 3,
                    sub: 4
                });
        }
    }
    const tu = (t, e, s, i) => {
            window.gtag &&
                window.gtag("event", t, {
                    event_category: e,
                    event_label: s,
                    value: i
                });
        },
        eu = [
            30,
            60,
            130,
            260,
            470,
            700,
            1030,
            1500,
            2100,
            2900,
            3900,
            5400,
            7200,
            9600,
            12600,
            17400,
            23700,
            31900,
            42600,
            58300,
            78900,
            106e3,
            14e4,
            184e3,
            247e3,
            33e4,
            43e4,
            56e4,
            73e4,
            96e4,
            125e4,
            162e4,
            209e4,
            268e4,
            4e6,
            62e5,
            97e5,
            15e6,
            229e5,
            325e5,
            451e5,
            615e5,
            827e5,
            11e7,
            1203e5
        ],
        su = t => eu[na(t, 1, 45) - 1],
        iu = t => {
            const e = Object.entries(t);
            return (
                e.forEach(t => {
                    (t[0] = parseInt(t[0])),
                        "object" == typeof t[1] && (t[1] = iu(t[1]));
                }),
                new Map(e)
            );
        };
    var nu = iu({
        0: 10,
        1: 10,
        2: 10,
        3: 10,
        4: 10,
        5: 5,
        15: 100,
        17: 10,
        6: 100,
        7: 100,
        14: 50,
        9: 30,
        8: 20,
        12: 15
    });
    const au = nu,
        ru = iu({ 2: 1, 1: 2 });
    var ou = Object.freeze({
        __proto__: null,
        startSkills: [31],
        engineSkills: [8, 5, 40],
        baseStats: au,
        statPerLevel: ru
    });
    const lu = nu,
        cu = iu({ 3: 1, 1: 2 });
    var hu = Object.freeze({
        __proto__: null,
        baseStats: lu,
        startSkills: [4],
        engineSkills: [8, 40],
        statPerLevel: cu
    });
    const du = iu({
            0: 3,
            1: 5,
            2: 5,
            3: 5,
            5: 5,
            17: 50,
            15: 60,
            10: 1,
            11: 2,
            6: 15,
            7: 100,
            9: 80
        }),
        uu = iu({ 0: 1, 12: 2, 2: 4, 10: 0.4, 11: 0.4, 6: 4 }),
        mu = iu({ 12: 0.03, 6: 6, 10: 0.04, 11: 0.05 });
    var pu = Object.freeze({
        __proto__: null,
        baseStats: du,
        statPerLevel: uu,
        statPerLevelExponential: mu
    });
    const fu = iu({ 0: 10, 1: 10, 2: 10, 3: 10, 4: 10, 5: 10 }),
        gu = iu({ 0: 20, 1: 20, 2: 20, 4: 20 });
    var vu = Object.freeze({
        __proto__: null,
        baseStats: fu,
        statPerLevel: gu
    });
    const yu = nu,
        bu = iu({ 4: 1, 1: 2 });
    var wu = Object.freeze({
        __proto__: null,
        baseStats: yu,
        startSkills: [12],
        engineSkills: [8, 0, 40],
        statPerLevel: bu
    });
    const xu = nu,
        ku = iu({ 0: 1, 1: 2 });
    var $u = [
        Object.freeze({
            __proto__: null,
            baseStats: xu,
            startSkills: [1, 21],
            engineSkills: [8, 0, 40],
            statPerLevel: ku
        }),
        hu,
        ou,
        wu,
        vu,
        pu
    ];
    const Su = iu({
            0: { 6: 1, 8: 0.5 },
            1: { 6: 4, 12: 1 },
            2: { 14: 0.5 },
            3: { 14: 0.4, 7: 1 },
            4: { 16: 0.3, 7: 1 },
            5: { 14: 0.2, 18: 0.5 }
        }),
        Mu = t => 1 + t / 1e3,
        Eu = Object.keys({
            onBlock: 0,
            statsStatic: 0,
            statsConvert: 0,
            statsOverride: 0,
            onInterval: 0,
            multiplyIncomingHeal: 0,
            multiplyIncomingDamage: 0,
            addIncomingHeal: 0,
            addIncomingDamage: 0,
            addIncomingCrit: 0,
            afterDamageEnemy: 0,
            beforeDamageEnemy: 0,
            movementOverride: 0,
            incapacitated: 0,
            breakOnCast: 0,
            instantCast: 0,
            onCast: 0,
            onEnd: 0,
            onAffectedEnemyDeath: 0
        });
    class Cu {
        constructor(t) {
            (this.id = t.id),
                (this.intervalHaste = !1 !== t.intervalHaste),
                (this.intervalDuration = t.intervalDuration),
                (this.maxStacks = t.maxStacks),
                (this.passive = t.passive || !1),
                (this.custom = t.custom),
                (this.diminish = t.diminish || !1),
                (this.type = t.type || 0),
                (this.tags = t.tags || new Set()),
                Eu.forEach(e => {
                    this[e] = t[e];
                });
        }
        onSet(t, e, s) {
            this.tags.forEach(e => {
                s.tags.get(e).add(t);
            }),
                Eu.forEach(e => {
                    this[e] && s[e].add(t);
                });
        }
        onRemove(t, e, s) {
            this.tags.forEach(e => {
                s.tags.get(e).delete(t);
            }),
                Eu.forEach(e => {
                    this[e] && s[e].delete(t);
                });
        }
    }
    class Tu extends Cu {
        constructor(t) {
            super(t),
                (this.icon = t.icon || "skills/0"),
                (this.visualIncapacitation = t.visualIncapacitation),
                (this.fx = t.fx || {});
        }
    }
    var _u = new Tu({
        id: 63,
        passive: !0,
        statsStatic: (t, e) => {
            e.addStat(12, Math.round(40 + 20 * t.level)),
                e.addStat(24, Math.round(200 + 200 * t.level));
        }
    });
    const Pu = {
            black: oa(0, 0),
            white: oa(16777215, 0),
            deadgrey: oa(3355443, 0),
            teal: oa(3384995, 0),
            magicblue: oa(3362252, 0),
            paleskin: oa(14267315, 0),
            darkskin: oa(8411481, 0),
            slimegreen: oa(2542694, 0),
            mushgreen: oa(2077529, 0),
            linen: oa(13408614, 0),
            woodbrown: oa(4859433, 0),
            woodbrown2: oa(10250315, 0),
            tealsteel: oa(3358797, 0.5),
            darksteel: oa(3355443, 0.5),
            greysteel: oa(5066061, 0.5),
            blacksteel: oa(988178, 0.5),
            leather: oa(4337198, 0),
            emerald: oa(22866, -0.1),
            gold: oa(16751616, 1),
            paper: oa(15129011, 0),
            richpurple: oa(7484623, 0),
            fireorange: oa(14715686, -0.7),
            archergreen: oa(10471258, 0),
            warbrown: oa(15172191, 0),
            bronze: oa(9258571, 0.5),
            silver: oa(11527136, 0.8),
            shamanblue: oa(3687924, 0),
            mageblue: oa(6607340, 0),
            bone: oa(14535066, 0.2),
            bone2: oa(11836267, 0.2),
            ice: oa(14610164, -0.2),
            vanguard: oa(2848511, 0),
            bloodlust: oa(14289947, 0),
            pink: oa(16711935, 0),
            warden: oa(14755623, 0),
            evilred: oa(13239043, 0),
            ruby: oa(15733030, 1),
            moss: oa(2925637, 0.2),
            rock: oa(5006687, 0.4),
            death: oa(3750201, 0.8)
        },
        Uu = [Pu.woodbrown, Pu.bronze, Pu.greysteel, Pu.silver, Pu.gold],
        Iu = [
            ["white", "common"],
            ["green", "uncommon"],
            ["blue", "rare"],
            ["purp", "epic"]
        ],
        zu = t => (t >= 90 ? 3 : t >= 70 ? 2 : t >= 50 ? 1 : 0),
        Au = t => Iu[zu(t)],
        Du = function (t, e, s) {
            e % 10 == 0 &&
                t.particle(s, Dr(-20, 20), Dr(-20, 0), Dr(-20, 10), 0, 0.3, 0);
        },
        Ru = {
            cityAmbience: {
                permanent: !0,
                xu: { Za: [0.6, 0.3, 0.1], size: 5e3 }
            },
            mysticAmbience: {
                permanent: !0,
                xu: { Za: [0, 0.6, 0], size: 5e3 },
                tick: function (t) {
                    Du(this, this.frame, ql.floaterGreen);
                }
            },
            evilAmbience: {
                permanent: !0,
                xu: { Za: [0.6, 0, 0], size: 5e3 },
                tick: function (t) {
                    Du(this, this.frame, ql.floaterRed);
                }
            },
            oceanAmbience: {
                permanent: !0,
                sound: {
                    loop: !0,
                    parent: !0,
                    id: "ambient_ocean",
                    distance: 100
                }
            },
            campfire: {
                permanent: !0,
                xu: { dynamic: !0, Za: [2.5, 1.8, 0.3] },
                sound: { loop: !0, parent: !0, id: "fireloop", distance: 12 },
                tick: function (t, e) {
                    if (this.time > 0.1 / this.transform.parent.scale[1] ** 2) {
                        this.time = 0;
                        const t = Dr(0, 0.4),
                            e = this.particle(
                                ql.fire,
                                Dr(-t, t),
                                Dr(-0.8, -0.2),
                                Dr(-t, t)
                            );
                        e &&
                            xi(
                                e.vel,
                                0,
                                0.6 * this.transform.parent.scale[1] - t,
                                0
                            );
                    }
                    this.xu.val[3] =
                        30 + Math.sin(t / 600) * Math.sin(t / 50) * 5;
                }
            },
            torch: {
                permanent: !0,
                xu: { dynamic: !0, Za: [1, 0.8, 0.4, 500] }
            },
            mystical01: {
                permanent: !0,
                xu: { Za: [0.1, 1.4, 2], size: 400, dynamic: !0 },
                sound: {
                    loop: !0,
                    parent: !0,
                    id: "mysticalSound",
                    distance: 14
                },
                tick: function (t, e) {
                    this.frame % 3 == 0 && this.particle(ql.mystical, 0, 0, 0),
                        $i(this.transform.position, this.origin, [
                            3 * Math.sin(t / 600),
                            1 * Math.sin(t / 400),
                            3 * Math.cos(t / 600)
                        ]),
                        (this.transform.rotation[1] = t / 600),
                        this.transform.updateMatrixWorld(!0);
                }
            },
            meleeFlash: {
                time: -0.3,
                timeout: 1,
                xu: { Za: [1, 1, 1], size: 0, dynamic: !0 },
                tick: function (t, e) {
                    const s =
                        0.8 *
                        Math.sin(
                            8 * Math.max(0, Math.min(0.39, 2 * this.time - 0.2))
                        );
                    if (
                        (en(this.xu.val, s, s, s, 100), this.fraction(0.2, e))
                    ) {
                        for (let t = 0; t < 3 * this.lod; ++t)
                            this.particle(ql.meleeFlash, Dr(-0.1, 0.1), 0.5, 0);
                        this.creature.transform.addPushBack(this.dir, 4);
                    }
                }
            },
            meleePhys: {
                time: -0.3,
                timeout: 1,
                tick: function (t, e) {
                    if (this.fraction(0.2, e)) {
                        Jr({
                            transform: this.transform,
                            delay: 0.1,
                            id: "impact_flesh",
                            rnd: 3,
                            distance: 5
                        });
                        for (let t = 0; t < 4 * this.lod; ++t) {
                            const t = Dr(0, 1);
                            xi(Gn, Dr(5 * -t, 5 * t), 10, Dr(5 * -t, 5 * t)),
                                Ei(Gn, Gn, this.dir, -8),
                                this.particle(
                                    ql.meleePhys,
                                    Dr(-0.1, 0.1),
                                    0.5,
                                    Dr(-0.1, 0.1),
                                    Gn[0],
                                    Gn[1],
                                    Gn[2]
                                );
                        }
                    }
                }
            },
            meleeSlash: {
                time: -0.4,
                timeout: 0.01,
                tick: function (t, e) {
                    if (0 === this.frame) {
                        this.creature.transform.addPushBack(this.dir, 4);
                        for (let t = 0; t < 8 * this.lod; ++t) {
                            const t = Dr(0, 1);
                            xi(
                                Gn,
                                Dr(3 * -t, 3 * t),
                                Dr(0, 10),
                                Dr(3 * -t, 3 * t)
                            ),
                                Ei(Gn, Gn, this.dir, -2),
                                this.particle(
                                    ql.blood,
                                    Dr(-0.2, 0.2),
                                    0,
                                    Dr(-0.2, 0.2),
                                    Gn[0],
                                    Gn[1],
                                    Gn[2]
                                );
                        }
                    }
                }
            },
            arrowImpact: {
                timeout: 1,
                xu: { Za: [1, 1, 1], size: 0, dynamic: !0 },
                tick: function (t, e) {
                    const s =
                        0.8 *
                        Math.sin(
                            8 * Math.max(0, Math.min(0.39, 2 * this.time - 0.2))
                        );
                    if (
                        (en(this.xu.val, s, s, s, 100), this.fraction(0.2, e))
                    ) {
                        for (let t = 0; t < 3 * this.lod; ++t)
                            this.particle(ql.meleeFlash, Dr(-0.1, 0.1), 0.5, 0);
                        this.creature.transform.addPushBack(this.dir, 4);
                    }
                }
            },
            arrowPreciseImpact: {
                timeout: 1,
                xu: { Za: [1, 1, 1], size: 0, dynamic: !0 },
                tick: function (t, e) {
                    const s =
                        0.8 *
                        Math.sin(
                            8 * Math.max(0, Math.min(0.39, 2 * this.time - 0.2))
                        );
                    if (
                        (en(this.xu.val, s, s, s, 100), this.fraction(0.2, e))
                    ) {
                        for (let t = 0; t < 3 * this.lod; ++t)
                            this.particle(
                                ql.meleeFlashBig,
                                Dr(-0.1, 0.1),
                                0.5,
                                0
                            );
                        this.creature.transform.addPushBack(this.dir, 4);
                    }
                }
            },
            physBlock: {
                time: -0.3,
                timeout: 0.5,
                xu: { Za: [1, 1, 1], size: 0, dynamic: !0 },
                tick: function (t, e) {
                    const s =
                        this.time > 0.2 ? 8 * Math.max(0, 0.5 - this.time) : 0;
                    if (
                        (en(this.xu.val, s, s, s, 500),
                        this.fraction(0, e) &&
                            Jr({
                                delay: 0.2,
                                distance: 5,
                                id: "block",
                                transform: this.transform
                            }),
                        this.fraction(0.2, e))
                    ) {
                        this.particle(ql.blockCircle);
                        for (let t = 0; t < 5 * this.lod; ++t)
                            this.particle(
                                ql.blockFlick,
                                0,
                                0,
                                0,
                                Dr(-20, 20),
                                Dr(5, 10),
                                Dr(-20, 20)
                            );
                        this.creature.transform.addPushBack(this.dir, 4);
                    }
                }
            },
            potionConsume: {
                timeout: 2,
                tick: function (t, e) {
                    this.frame % 20 == 0 &&
                        (this.particle(
                            ql.healHolySoft,
                            0,
                            0.5,
                            0,
                            Dr(-1, 1),
                            Dr(0.1, 0.3),
                            Dr(-1, 1)
                        ),
                        this.particle(
                            ql.healHolySparkle,
                            Dr(-1, 1),
                            Dr(0.1, 0.3),
                            Dr(-0.9, 0.9)
                        ));
                }
            },
            blockBuff: {
                particles: { amount: 4, info: ql.blockBuffShield },
                tick: function (t, e) {
                    this.fraction(0.1, e) && this.particle(ql.blockBuffFocus),
                        this.particles.forEach((e, s) => {
                            const i = 1.55 * s + t / 500;
                            this.localize(
                                e.wU,
                                1.3 * Math.sin(i),
                                0,
                                1.3 * Math.cos(i)
                            );
                        });
                }
            },
            iceBlockBuff: {
                mesh: {
                    id: "character/shield.ho",
                    color: [0.3, 0.8, 1, -0.5],
                    scale: [0.3, 0.4, 0.4],
                    wU: [1.3, 0, 0],
                    rot: [0, Math.PI, 0]
                },
                particles: { amount: 1, info: ql.iceglare },
                tick: function (t, e) {
                    const s = t / 400;
                    this.transform.rotation.set(0, -s, 0),
                        this.particles.forEach((t, e) => {
                            this.localize(
                                t.wU,
                                1.3 *
                                    Math.cos(
                                        s - this.transform.parent.rotation[1]
                                    ),
                                0,
                                1.3 *
                                    Math.sin(
                                        s - this.transform.parent.rotation[1]
                                    )
                            );
                        });
                }
            },
            healOnBlockBuff: {
                particles: { amount: 1, info: ql.holyShield },
                tick: function (t, e) {
                    0 !== this.particles.length &&
                        this.localize(
                            this.particles[0].wU,
                            0,
                            0.5,
                            0,
                            0,
                            0.5 + 0.05 * Math.sin(t / 200)
                        );
                }
            },
            blockEnrageBuff: {
                tick: function (t, e) {
                    this.time > 0.5 / Math.min(10, this.buff.stacks) &&
                        ((this.time = 0),
                        this.particle(
                            ql.blockBuffEnrage,
                            Dr(-1, 1),
                            0,
                            Dr(-1, 1)
                        ));
                }
            },
            plagueSpreaderBuff: {
                particles: { amount: 5, info: ql.plaguebones },
                tick: function (t, e) {
                    this.particles.forEach((e, s) => {
                        if (s >= this.buff.stacks) xi(e.wU, 0, 0, 0);
                        else {
                            const i = s * (6.28 / this.buff.stacks) + t / 900;
                            this.localize(
                                e.wU,
                                1.3 * Math.sin(i),
                                0.2,
                                1.3 * Math.cos(i)
                            );
                        }
                    });
                }
            },
            extraBoltBuff: {
                particles: { amount: 3, info: ql.extraBoltParticle },
                tick: function (t, e) {
                    this.particles.forEach((e, s) => {
                        if (s >= this.buff.stacks) xi(e.wU, 0, 0, 0);
                        else {
                            const i = s * (6.28 / this.buff.stacks) + t / 900;
                            this.localize(
                                e.wU,
                                1.1 * Math.sin(i),
                                0.2,
                                1.1 * Math.cos(i)
                            );
                        }
                    });
                }
            },
            temperBuff: {
                tick: function (t, e) {
                    0 === this.frame &&
                        Jr({
                            distance: 5,
                            id: "warrior/temperbuff",
                            transform: this.transform.parent,
                            dynamic: !0
                        }),
                        this.particle(ql.dust, Dr(-1, 1), 0, Dr(-1, 1));
                }
            },
            temperBoostBuff: {
                ribbon: {
                    steps: 3,
                    interval: 0.5,
                    timer: 3,
                    permanent: !0,
                    a: [0, 0.5, -0.5],
                    b: [0, -0.5, -0.5],
                    uT: [1, 0.2, 0.1, 0.8],
                    Tp: [1, 0.2, 0.1, 0]
                },
                tick: function (t, e) {
                    0 === this.frame &&
                        (this.particle(ql.iceFlash),
                        Jr({
                            distance: 7,
                            id: "warrior/temperboostbuff",
                            transform: this.transform.parent,
                            dynamic: !0
                        }),
                        Bu(this, 7, 30, ql.dust)),
                        this.frame % 10 == 0 &&
                            this.particle(
                                ql.blockFlick,
                                Dr(-1, 1),
                                0,
                                Dr(-1, 1)
                            );
                }
            },
            crescentStrike: {
                xu: { Za: [1, 1, 1], size: 0, dynamic: !0 },
                timeout: 0.5,
                tick: function (t, e) {
                    this.fraction(0.1, e) &&
                        this.transform.parent.weapon &&
                        (this.transform.setParent(this.transform.parent.weapon),
                        (this.transform.position[1] = 0.8));
                    const s = Math.sin(this.time * Math.PI * 0.5);
                    if (
                        (en(this.xu.val, 0.9 * s, 0, 0, 300),
                        this.fraction(0.01, e, this.time % 0.1))
                    ) {
                        const t = this.particle(
                            ql.crescentStrike,
                            Dr(-1, 1),
                            Dr(0.1, 0.3),
                            Dr(-1, 1)
                        );
                        t &&
                            Ai(
                                t.vel,
                                [-5, 0, 0],
                                this.creature.transform.rotation[1] +
                                    this.creature.transform.chest.rotation[1]
                            );
                    }
                }
            },
            levelUp: {
                xu: { Za: [1, 1, 1], size: 0, dynamic: !0 },
                timeout: 2,
                sound: { distance: 5, id: "levelup", parent: !0 },
                tick: function (t, e) {
                    const s = 2 * Math.sin(this.time * Math.PI * 0.5);
                    en(this.xu.val, 0.9 * s, s, 0.7 * s, 200),
                        this.fraction(0.1, e) && Bu(this, 8, 5, ql.levelUp);
                }
            },
            icebolt: {
                ribbon: {
                    steps: 3,
                    interval: 0.4,
                    timer: 15,
                    a: [-0.2, 0, 0],
                    b: [0.2, 0, 0],
                    uT: [1, 1, 2.5, 1.5],
                    Tp: [0, 0.2, 1, 0]
                },
                mesh: {
                    id: "character/spike.ho",
                    color: [1.5, 1.5, 2, -0.3],
                    scale: [0.4, 0.4, 0.4],
                    wU: [0, 0, 0]
                },
                tick: function (t, e) {
                    this.frame % 1 == 0 &&
                        (this.particle(
                            ql.iceBig,
                            Dr(-0.15, 0.15),
                            Dr(-0.15, 0.15),
                            0
                        ),
                        Math.random() < 0.4 &&
                            this.particle(
                                ql.snowflake,
                                Dr(-0.3, 0.3),
                                Dr(-0.3, 0.3),
                                0
                            ));
                }
            },
            icicle: {
                xu: { Za: [0.2, 0.5, 1.5], size: 100, dynamic: !0 },
                mesh: {
                    id: "rocks/rock_02.ho",
                    color: [1.5, 2, 1.5, -0.3],
                    scale: [0.8, 0.8, 0.8],
                    wU: [0, 0, 0]
                },
                tick: function (t, e) {
                    0 === this.frame &&
                        Jr({
                            distance: 5,
                            id: "mage/iciclecast",
                            transform: this.transform,
                            dynamic: !0
                        }),
                        this.transform.rotation.set(0, t / 150, 0),
                        this.transform.updateMatrixWorld(!0),
                        this.frame % 2 == 0 &&
                            Bu(
                                this,
                                5,
                                10,
                                ql.icicle,
                                void 0,
                                this.transform.rotation[1]
                            );
                }
            },
            icecast: {
                tick: function (t, e) {
                    this.frame % 5 == 0 &&
                        this.particle(
                            ql.iceBig,
                            Dr(-0.2, 0.2),
                            Dr(-0.2, 0.2),
                            Dr(-0.2, 0.2)
                        );
                }
            },
            iceimpact: {
                timeout: 0.001,
                tick: function (t, e) {
                    if (0 === this.frame) {
                        for (let t = 0; t < 20 * this.lod; ++t) {
                            const t = this.particle(
                                    ql.snowflake,
                                    Dr(-0.4, 0.4),
                                    Dr(-0.4, 0.4),
                                    Dr(-0.4, 0.4)
                                ),
                                e = Dr(8, 10);
                            t &&
                                xi(
                                    t.vel,
                                    Dr(-e, e) - 10 * this.dir[0],
                                    Dr(-5, e) - 10 * this.dir[1],
                                    Dr(-e, e) - 10 * this.dir[2]
                                );
                        }
                        Jr({
                            distance: 5,
                            id: "mage/iceimpact1",
                            transform: this.transform
                        }),
                            this.creature.transform.addPushBack(this.dir, 4);
                    }
                }
            },
            icicleImpact: {
                timeout: 0.001,
                tick: function (t, e) {
                    if (0 === this.frame) {
                        for (let t = 0; t < 20 * this.lod; ++t) {
                            const t = this.particle(
                                    Dr(0, 1) < 0.5 ? ql.iceBig : ql.snowflake,
                                    Dr(-0.4, 0.4),
                                    Dr(-0.4, 0.4),
                                    Dr(-0.4, 0.4)
                                ),
                                e = Dr(5, 10);
                            t &&
                                Ei(
                                    t.vel,
                                    [Dr(-e, e), Dr(0, 3), Dr(-e, e)],
                                    this.dir,
                                    -1
                                );
                        }
                        Jr({
                            distance: 8,
                            id: "mage/iciclehit",
                            rnd: 2,
                            transform: this.transform
                        }),
                            this.creature.transform.addPushBack(this.dir, 8);
                    }
                }
            },
            arrow: {
                ribbon: {
                    steps: 3,
                    interval: 0.2,
                    timer: 15,
                    a: [-0.07, 0, -0.6],
                    b: [0.07, 0, -0.6],
                    uT: [1, 1, 1, 2],
                    Tp: [1, 1, 1, 0]
                },
                mesh: {
                    id: "character/arrow.ho",
                    color: Pu.woodbrown,
                    scale: [0.35, 0.35, 0.35]
                }
            },
            precisearrow: {
                ribbon: {
                    steps: 3,
                    interval: 0.2,
                    timer: 15,
                    a: [-0.15, 0, -0.7],
                    b: [0.15, 0, -0.7],
                    uT: [1, 1, 0.5, 2],
                    Tp: [1, 1, 0.5, 0]
                },
                mesh: {
                    id: "character/arrow.ho",
                    color: Pu.white,
                    scale: [0.6, 0.6, 0.6]
                },
                tick: function (t, e) {
                    this.particle(ql.precisesparcle);
                }
            },
            swiftarrow: {
                ribbon: {
                    steps: 3,
                    interval: 0.2,
                    timer: 15,
                    a: [-0.06, 0, -0.7],
                    b: [0.06, 0, -0.7],
                    uT: [0.3, 0.7, 1, 2],
                    Tp: [0.3, 0.7, 1, 0]
                },
                mesh: {
                    color: Pu.ice,
                    id: "character/arrow.ho",
                    scale: [0.4, 0.4, 0.4]
                },
                tick: function (t, e) {
                    this.frame % 2 == 0 && this.particle(ql.teleportSparkle);
                }
            },
            naturecast: {
                tick: function (t, e) {
                    this.frame % 10 == 0 &&
                        (this.particle(
                            ql.healNatureBig,
                            Dr(-0.5, 0.5),
                            Dr(-0.5, 0.5),
                            Dr(-0.5, 0.5)
                        ),
                        Math.random() < 0.4 &&
                            this.particle(
                                ql.healNatureSparkle,
                                Dr(-0.7, 0.7),
                                Dr(-0.3, 0.7),
                                Dr(-0.7, 0.7)
                            ));
                }
            },
            natureHealOneshot: {
                timeout: 1,
                tick: function (t, e) {
                    this.fraction(0.01, e) &&
                        (Jr({
                            distance: 3,
                            id: "shaman/mendImpact",
                            transform: this.transform.parent
                        }),
                        Bu(this, 5, 5, ql.healNatureBig)),
                        this.fraction(
                            0.05,
                            e,
                            this.time % (0.05 * this.time + 0.05)
                        ) &&
                            (this.particle(
                                ql.healNatureBig,
                                Dr(-1, 1),
                                Dr(0.1, 0.3),
                                Dr(-1, 1)
                            ),
                            this.particle(
                                ql.healNatureSparkle,
                                Dr(-1, 1),
                                Dr(0.1, 0.3),
                                Dr(-1, 1)
                            ));
                }
            },
            revitalize: {
                ribbon: {
                    steps: 10,
                    interval: 0.06,
                    timer: 5,
                    permanent: !0,
                    a: [1, 0, 0],
                    b: [1.5, 0, 0],
                    repeat: 1,
                    uT: [0.1, 1, 0.8, 0],
                    Tp: [0.3, 1, 0.5, 1.1]
                },
                sound: { distance: 2, id: "shaman/revitalizeBuff", parent: !0 },
                tick: function (t, e) {
                    this.transform.rotation.set(
                        0.6 * Math.cos(t / 200),
                        t / 130,
                        0.6 * Math.sin(t / 243)
                    ),
                        this.frame % 10 == 0 &&
                            (this.particle(
                                ql.healNatureBig,
                                Dr(0.9, 1.6),
                                Dr(-0.1, 0.1),
                                Dr(-0.1, 0.1)
                            ),
                            Math.random() < 0.4 &&
                                this.particle(
                                    ql.healNatureSparkle,
                                    Dr(0.9, 1.6),
                                    Dr(-0.1, 0.1),
                                    Dr(-0.1, 0.1)
                                ));
                }
            },
            serpentBuff: {
                tick: function (t, e) {
                    0 === this.frame && this.particle(ql.serpentBuffFocus),
                        this.frame % 3 == 0 &&
                            this.particle(
                                ql.serpentBuff,
                                Math.sin(t / 300),
                                0.3 * Math.sin(t / 100),
                                Math.cos(t / 300)
                            );
                }
            },
            bleedDebuff: {
                particles: { amount: 3, info: ql.bloodFloat },
                tick: function (t, e) {
                    this.particles.forEach((e, s) => {
                        const i = 2 * s + t / 1e3;
                        this.localize(e.wU, Math.sin(i), 0.3, Math.cos(i));
                    });
                }
            },
            invigorateBuff: {
                particles: { amount: 1, info: ql.invigorateBuff },
                tick: function (t, e) {
                    this.particles.length > 0 &&
                        this.localize(
                            this.particles[0].wU,
                            0,
                            0.5,
                            0,
                            0,
                            0.5 + 0.1 * Math.sin(t / 100)
                        );
                }
            },
            hypothermicBuff: {
                particles: { amount: 1, info: ql.hypothermicBuff },
                tick: function (t, e) {
                    0 === this.frame && this.particle(ql.iceFlash),
                        this.particles.length > 0 &&
                            this.localize(
                                this.particles[0].wU,
                                0,
                                0.5,
                                0,
                                0,
                                0.5 + 0.1 * Math.sin(t / 100)
                            );
                }
            },
            gainMana: {
                timeout: 0.3,
                tick: function (t, e) {
                    this.frame % 3 == 0 &&
                        this.particle(
                            ql.manaGain,
                            Dr(-1, 1),
                            Dr(0.1, 0.3),
                            Dr(-0.9, 0.9)
                        );
                }
            },
            gainHealth: {
                timeout: 0.3,
                tick: function (t, e) {
                    this.frame % 3 == 0 &&
                        this.particle(
                            ql.healHolySparkle,
                            Dr(-1, 1),
                            Dr(0.1, 0.3),
                            Dr(-0.9, 0.9)
                        );
                }
            },
            soulHarvestCast: {
                timeout: 0.8,
                tick: function (t, e) {
                    if (0 === this.frame)
                        for (let t = 0; t < 2 * Math.PI; t += ha / 10) {
                            const e = Math.sin(t),
                                s = Math.cos(t);
                            Ql(
                                ql.soulHarvested,
                                void 0,
                                this.transform.parent.position[0] + 10 * e,
                                this.transform.parent.position[1],
                                this.transform.parent.position[2] + 10 * s,
                                -10 * e,
                                0,
                                -10 * s,
                                !1
                            );
                        }
                }
            },
            soulHarvestMissile: {
                ribbon: {
                    steps: 3,
                    interval: 0.4,
                    timer: 15,
                    a: [-0.2, 0, 0],
                    b: [0.2, 0, 0],
                    uT: [0, 0.6, 1.8, 2],
                    Tp: [0, 0.4, 0.8, 0]
                },
                mesh: {
                    id: "misc/misc_bones_skull.ho",
                    color: [0.7, 1, 1.2, -0.4],
                    scale: [0.3, 0.3, 0.3],
                    wU: [0, 0, 0]
                },
                tick: function (t, e) {
                    this.frame % 3 == 0 &&
                        this.particle(
                            this.frame % 2 == 0 ? ql.souls : ql.soulCloud,
                            Dr(-0.3, 0.3),
                            0,
                            Dr(-0.3, 0.3)
                        );
                }
            },
            soulHarvestImpact: {
                timeout: 1,
                tick: function (t, e) {
                    this.fraction(0.01, e) &&
                        (Jr({
                            delay: 0.2,
                            rndDelay: !0,
                            distance: 5,
                            id: "shaman/soulHarvestImpact",
                            transform: this.creature.transform
                        }),
                        this.creature.transform.addPushBack(this.dir, 6),
                        Bu(this, 5, 5, ql.souls));
                }
            },
            soulHarvestReturn: {
                timeout: 1,
                tick: function (t, e) {
                    this.fraction(0.01, e) &&
                        (Jr({
                            delay: 0.3,
                            rndDelay: !0,
                            distance: 4,
                            id: "shaman/soulHarvestReturnCollect",
                            transform: this.creature.transform
                        }),
                        this.creature.transform.addPushBack(this.dir, 3),
                        this.particle(ql.soulHarvested, 0, -0.5, 0, 0, 2, 0));
                }
            },
            decayMissile: {
                ribbon: {
                    steps: 3,
                    interval: 0.4,
                    timer: 15,
                    a: [-0.2, 0, 0],
                    b: [0.2, 0, 0],
                    uT: [0, 2, 0.4, 1.5],
                    Tp: [0, 1, 0.4, 0]
                },
                mesh: {
                    id: "misc/misc_bones_skull.ho",
                    color: [0.6, 0.8, 0.35, -0.1],
                    scale: [0.4, 0.4, 0.4],
                    wU: [0, 0, 0]
                },
                tick: function (t, e) {
                    this.particle(
                        this.frame % 2 == 0 ? ql.skulls : ql.decayCloud,
                        Dr(-0.3, 0.3),
                        0,
                        Dr(-0.3, 0.3)
                    );
                }
            },
            decay: {
                particles: { amount: 1, info: ql.decay },
                sound: { distance: 5, id: "shaman/decayOnBuff", parent: !0 },
                tick: function (t, e) {
                    this.frame % 7 == 0 &&
                        this.particle(
                            Dr(0, 1) < 0.5 ? ql.decaySoft : ql.skulls,
                            Dr(-1, 1),
                            Dr(-0.3, 0.5),
                            Dr(-1, 1)
                        ),
                        0 !== this.particles.length &&
                            this.localize(this.particles[0].wU, 0, 0, 0, 0, 1);
                }
            },
            decayImpact: {
                timeout: 0.001,
                tick: function (t, e) {
                    0 === this.frame &&
                        (Bu(this, 5, 5, ql.skulls),
                        Jr({
                            distance: 5,
                            id: "shaman/decayHit",
                            transform: this.transform
                        }),
                        this.creature.transform.addPushBack(this.dir, 4));
                }
            },
            poisonImpact: {
                timeout: 0.001,
                tick: function (t, e) {
                    0 === this.frame &&
                        (Bu(this, 5, 5, ql.poison),
                        Jr({
                            distance: 5,
                            id: "shaman/decayHit",
                            transform: this.transform
                        }),
                        this.creature.transform.addPushBack(this.dir, 4));
                }
            },
            manaBuff: {
                particles: { amount: 3, info: ql.mimir },
                tick: function (t, e) {
                    0 === this.frame && Bu(this, 5, 5, ql.manaGain),
                        this.particles.forEach((e, s) => {
                            const i = t / 600 + 0.3 * Math.sin(s + t / 300);
                            this.localize(
                                e.wU,
                                1.2 * Math.sin(i),
                                0.2 * Math.sin(3 * i),
                                1.2 * Math.cos(i),
                                0,
                                0.2
                            );
                        });
                }
            },
            courageBuff: {
                particles: { amount: 1, info: ql.courage },
                tick: function (t, e) {
                    0 === this.frame && this.particle(ql.courageFlash),
                        this.particles.length > 0 &&
                            this.localize(
                                this.particles[0].wU,
                                0.9 * Math.sin(Wn.smoothtime),
                                0.3,
                                0.9 * Math.cos(Wn.smoothtime)
                            );
                }
            },
            warcryBuff: {
                particles: { amount: 1, info: ql.warcry },
                tick: function (t, e) {
                    if (
                        (0 === this.frame && this.particle(ql.warcryFlash),
                        this.particles.length > 0)
                    ) {
                        const t = Wn.smoothtime + 3;
                        this.localize(
                            this.particles[0].wU,
                            0.9 * Math.sin(t),
                            0.3,
                            0.9 * Math.cos(t)
                        );
                    }
                }
            },
            icenova: {
                timeout: 0.001,
                tick: function (t, e) {
                    0 === this.frame &&
                        (this.particle(ql.iceFlash),
                        Bu(this, 15, 20, ql.icenova),
                        Bu(this, 12, 20, ql.snowflake),
                        Jr({
                            delay: 0.1,
                            distance: 5,
                            id: "mage/icenovacast",
                            transform: this.transform.parent
                        }));
                }
            },
            icenovaroot: {
                mesh: {
                    id: "engine/dome.ho",
                    color: Pu.ice,
                    scale: [2, 2, 2],
                    wU: [0, -0.9, 0]
                },
                tick: function (t, e) {
                    0 === this.frame &&
                        (Bu(this, 8, 15, ql.snowflake),
                        Jr({
                            delay: Dr(0.2, 0.4),
                            distance: 5,
                            id: "mage/icenovafreeze",
                            transform: this.transform.parent
                        }));
                }
            },
            deepfrozen: {
                mesh: {
                    id: "character/spike.ho",
                    color: Pu.ice,
                    scale: [1.5, 1.5, 0.7],
                    wU: [0, -0.5, 0],
                    rot: [1.54, 0, 0]
                },
                tick: function (t, e) {
                    0 === this.frame &&
                        (Bu(this, 8, 10, ql.frostflake),
                        Jr({
                            delay: Dr(0.2, 0.4),
                            distance: 5,
                            id: "mage/deepfreezebuff",
                            transform: this.transform.parent
                        }));
                }
            },
            frozen: {
                tick: function (t, e) {
                    0 === this.frame &&
                        (Bu(this, 5, 6, ql.frostflake),
                        Jr({
                            delay: Dr(0.2, 0.4),
                            distance: 5,
                            id: "mage/icenovafreeze",
                            transform: this.transform.parent
                        }));
                }
            },
            enchantment: {
                particles: { amount: 4, info: ql.enchant },
                tick: function (t, e) {
                    0 === this.frame && this.particle(ql.enchantFlash),
                        this.transform.parent.hands &&
                        this.transform.parent.hands[0].visible
                            ? this.particles.forEach((t, e) => {
                                  Yi(
                                      t.wU,
                                      this.transform.parent.hands[e % 2].VN
                                  );
                                  const s = 0.7 * e + Wn.smoothtime;
                                  (t.wU[0] += 0.15 * Math.sin(s)),
                                      (t.wU[2] += 0.15 * Math.cos(s));
                              })
                            : this.particles.forEach(kc);
                }
            },
            arcticaura: {
                particles: { amount: 2, info: ql.arcticaura },
                tick: function (t, e) {
                    0 === this.frame && this.particle(ql.arcticFlash),
                        this.particles.forEach((t, e) => {
                            t.Qj = Math.sin(Wn.smoothtime);
                            const s = 3 * e + Wn.smoothtime;
                            this.localize(
                                t.wU,
                                0.15 * Math.sin(s),
                                0.5,
                                0.15 * Math.cos(s)
                            );
                        });
                }
            },
            pathfinding: {
                ribbon: {
                    steps: 5,
                    interval: 0.25,
                    timer: 5,
                    permanent: !0,
                    a: [0, 0.5, -0.5],
                    b: [0, -0.5, -0.5],
                    uT: [1, 1, 1, 0.8],
                    Tp: [1, 1, 1, 0]
                },
                tick: function (t, e) {
                    this.frame % 5 == 0 &&
                        this.frame < 20 &&
                        this.particle(ql.pathfindFlash),
                        0 === this.frame &&
                            (this.ribbon.parent =
                                this.transform.parent.chest ||
                                this.transform.parent);
                }
            },
            temporaldilation: {
                particles: { amount: 2, info: ql.temporal },
                tick: function (t, e) {
                    this.frame % 5 == 0 &&
                        this.frame < 20 &&
                        this.particle(ql.temporalFlash),
                        this.particles.forEach((t, e) => {
                            t.Qj = Math.sin(Wn.smoothtime);
                            const s = 3 * e + 3 * Wn.smoothtime;
                            this.localize(t.wU, Math.sin(s), 0.2, Math.cos(s));
                        });
                }
            },
            caninehowl: {
                particles: { amount: 1, info: ql.canine },
                tick: function (t, e) {
                    0 === this.frame && this.particle(ql.canineFlash),
                        0 !== this.particles.length &&
                            this.localize(
                                this.particles[0].wU,
                                0,
                                0,
                                0,
                                0,
                                0.6
                            );
                }
            },
            poisonarrows: {
                sound: { distance: 5, id: "shaman/decayOnBuff", parent: !0 },
                tick: function (t, e) {
                    this.frame % 7 == 0 &&
                        this.particle(
                            Dr(0, 1) < 0.5 ? ql.poisonSoft : ql.poison,
                            Dr(-1, 1),
                            Dr(-0.3, 0.5),
                            Dr(-1, 1)
                        );
                }
            },
            healingtotem: {
                xu: { Za: [0.8, 1.5, 0.5], size: 300, dynamic: !0 },
                mesh: {
                    id: "misc/misc_palisade_solo.ho",
                    color: Pu.woodbrown,
                    scale: [0.4, 0.6, 0.4],
                    wU: [0, -0.8, 0]
                },
                tick: function (t, e) {
                    if (
                        (this.frame % 10 == 0 &&
                            this.particle(
                                ql.healHolySoft,
                                Dr(-5, 5),
                                Dr(0.1, 0.3),
                                Dr(-5, 5)
                            ),
                        this.frame % 5)
                    ) {
                        const e = t / 300,
                            s = this.particle(
                                ql.totemfloater,
                                10 * Math.cos(e),
                                1,
                                10 * Math.sin(e)
                            );
                        s && (s.wU[1] = Wn.getHeight(s.wU[0], s.wU[2]) + 1);
                    }
                }
            },
            gainHealthTotem: {
                timeout: 0.1,
                tick: function (t, e) {
                    this.frame % 3 == 0 &&
                        this.particle(
                            ql.healNatureBlink,
                            Dr(-0.8, 0.8),
                            Dr(0.1, 0.3),
                            Dr(-0.8, 0.8)
                        );
                }
            },
            teleport: {
                timeout: 0.001,
                tick: function (t, e) {
                    if (0 === this.frame) {
                        this.particle(ql.teleportFlash);
                        for (let t = 0; t < 3; ++t)
                            this.particle(
                                ql.teleportSparkle,
                                Dr(-0.6, 0.6),
                                1,
                                Dr(-0.6, 0.6)
                            );
                        Jr({
                            delay: 0.1,
                            distance: 5,
                            id: "mage/teleportcast",
                            transform: this.transform.parent
                        });
                    }
                }
            },
            stunned: {
                sound: { loop: !1, parent: !0, id: "stundebuff", distance: 10 },
                particles: { amount: 3, info: ql.stun },
                tick: function (t, e) {
                    this.particles.forEach((e, s) => {
                        const i = 2 * s + t / 250;
                        this.localize(
                            e.wU,
                            1.2 * Math.sin(i),
                            0.2,
                            1.2 * Math.cos(i),
                            0,
                            0.2,
                            0
                        );
                    });
                }
            },
            dazed: {
                sound: { loop: !1, parent: !0, id: "stundebuff", distance: 10 },
                particles: { amount: 3, info: ql.daze },
                tick: function (t, e) {
                    this.particles.forEach((e, s) => {
                        const i = 2 * s + t / 350;
                        this.localize(
                            e.wU,
                            0.8 * Math.sin(i),
                            0.2,
                            0.8 * Math.cos(i),
                            0,
                            0.2,
                            0
                        );
                    });
                }
            },
            charge: {
                sound: {
                    loop: !1,
                    parent: !0,
                    id: "warrior/chargecast",
                    distance: 9
                },
                ribbon: {
                    steps: 5,
                    interval: 0.25,
                    timer: 5,
                    permanent: !0,
                    a: [-0.5, 0, -0.5],
                    b: [0.5, 0, -0.5],
                    uT: [2, 1.5, 0.5, 1.2],
                    Tp: [2, 0.8, 1, 0]
                },
                tick: function (t, e) {
                    this.frame % 5 == 0 && this.particle(ql.chargeFlash);
                }
            },
            taunt: {
                timeout: 0.8,
                tick: function (t, e) {
                    if (
                        (this.frame % 10 == 0 && this.particle(ql.tauntFlash),
                        0 === this.frame)
                    ) {
                        for (let t = 0; t < 2 * Math.PI; t += ha / 10) {
                            const e = Math.sin(t),
                                s = Math.cos(t);
                            Ql(
                                ql.tauntsparkle,
                                void 0,
                                this.transform.parent.position[0] + 10 * e,
                                this.transform.parent.position[1],
                                this.transform.parent.position[2] + 10 * s,
                                -50 * e,
                                0,
                                -50 * s,
                                !1
                            );
                        }
                        Jr({
                            delay: 0.05,
                            distance: 8,
                            id: "warrior/tauntcast",
                            transform: this.transform.parent
                        });
                    }
                }
            },
            transformation: {
                tick: function (t, e) {
                    if (0 === this.frame) {
                        this.particle(ql.teleportFlash);
                        for (let t = 0; t < 8; ++t)
                            this.particle(
                                ql.teleportSparkle,
                                0,
                                0,
                                0,
                                Dr(-5, 5),
                                Dr(-5, 5),
                                Dr(-5, 5)
                            );
                    }
                    this.frame % 20 == 0 &&
                        (this.particle(
                            ql.transformationAura,
                            0,
                            0,
                            this.transform.parent.entity
                                ? 1.5 * this.transform.parent.entity.steer[1]
                                : 0
                        ),
                        this.particle(
                            ql.transformSoft,
                            0,
                            0,
                            3 * this.transform.parent.entity.steer[1]
                        ));
                }
            },
            snipe: {
                sound: {
                    loop: !1,
                    parent: !0,
                    id: "archer/snipeCast",
                    delay: 0.2,
                    distance: 7
                },
                particles: { amount: 1, info: ql.snipe },
                tick: function (t, e) {
                    0 !== this.particles.length &&
                        (this.frame % 3 == 0 &&
                            this.time < 0.3 &&
                            this.particle(
                                ql.dust,
                                Dr(-0.3, 0.3),
                                Dr(-0.3, 0.3),
                                0
                            ),
                        this.transform.parent.hands &&
                        this.transform.parent.hands[1].visible
                            ? Yi(
                                  this.particles[0].wU,
                                  this.transform.parent.hands[1].VN
                              )
                            : kc(this.particles[0]));
                }
            },
            etherwyrm: {
                tick: function (t, e) {
                    this.frame % 7 == 0 &&
                        this.particle(
                            ql.etherglow,
                            Dr(-0.8, 0.8),
                            Dr(-0.3, 0.5),
                            Dr(-0.8, 0.8)
                        );
                }
            },
            shadowwyrm: {
                tick: function (t, e) {
                    this.frame % 7 == 0 &&
                        this.particle(
                            ql.shadowglow,
                            Dr(-1, 1),
                            Dr(-0.3, 0.5),
                            Dr(-1, 1)
                        );
                }
            },
            burning: {
                tick: function (t, e) {
                    this.frame % 4 == 0 &&
                        this.particle(
                            ql.fire,
                            Dr(-1, 1),
                            Dr(-0.3, 0.5),
                            Dr(-1, 1)
                        );
                }
            },
            postsummon: {
                sound: {
                    loop: !1,
                    parent: !0,
                    id: "magic/summonaccept",
                    delay: 0.05,
                    distance: 7
                },
                tick: function (t, e) {
                    0 === this.frame &&
                        (this.particle(ql.summonFlash, 0, 0, 0),
                        Bu(this, 10, 8, ql.summonSparkle)),
                        this.frame % 10 == 0 &&
                            this.particle(
                                ql.summonSparkle,
                                Dr(-0.3, 0.3),
                                Dr(-0.3, 0.5),
                                Dr(-0.3, 0.3)
                            );
                }
            },
            purplecast: {
                tick: function (t, e) {
                    this.frame % 10 == 0 &&
                        this.particle(
                            ql.summonSparkle,
                            Dr(-0.2, 0.2),
                            Dr(-0.2, 0.2),
                            Dr(-0.2, 0.2)
                        );
                }
            }
        },
        Bu = (t, e, s, i, n = [0, 0, 0], a = 0) => {
            for (let r = 0; r < 2 * Math.PI; r += ha / e)
                t.particle(
                    i,
                    n[0],
                    n[1],
                    n[2],
                    Math.sin(r + a) * s,
                    0,
                    Math.cos(r + a) * s
                );
        };
    var Fu = new Tu({
            id: 44,
            icon: "skills/2",
            fx: {
                stick: Ru.blockBuff,
                startSound: { id: "warrior/buffBlock", distance: 5 }
            },
            statsStatic: (t, e) => {
                e.addStat(13, 300 + 40 * t.level);
            },
            onBlock: (t, e) => ({
                id: 45,
                mode: 5,
                stacks: 1,
                duration: 8,
                caster: e.id,
                target: e.id,
                refresh: !0,
                level: t.level
            })
        }),
        Nu = new Tu({
            id: 45,
            maxStacks: 8,
            icon: "skills/buffBlock",
            fx: { stick: Ru.blockEnrageBuff },
            statsStatic: (t, e) => {
                e.addStat(23, t.stacks * (2 * t.level + 2));
            }
        }),
        Lu = new Tu({
            id: 73,
            incapacitated: !0,
            icon: "skills/33",
            fx: {
                stick: Ru.charge,
                endSound: { id: "warrior/chargeimpact", distance: 10 }
            },
            statsOverride: (t, e) => {
                e.stat.set(15, 250);
            },
            movementOverride: (t, e, s, i, n) => {}
        }),
        Ou = new Tu({
            id: 62,
            icon: "skills/20",
            fx: {
                stick: Ru.courageBuff,
                startSound: { id: "warrior/couragecast", distance: 5 }
            },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(
                    12,
                    Math.round(10 + t.level ** 1.1 * 20 * t.diminishFactor)
                );
            }
        }),
        qu = new Tu({
            id: 59,
            passive: !0,
            icon: "skills/17",
            custom: [
                [t => 93 + 32 * t, "% as additional damage over 10 seconds"]
            ],
            afterDamageEnemy: { 3: (t, e, s) => {} }
        }),
        Hu = new Tu({
            id: 60,
            type: 1,
            tags: new Set([1]),
            maxStacks: 3,
            icon: "skills/18",
            fx: {
                effectDirImpact: [Ru.meleeSlash],
                stick: Ru.bleedDebuff,
                color: [0.7, 0.1, 0.1, 0.5]
            },
            intervalDuration: 1.5,
            onInterval: (t, e, s) => ({
                id: 18,
                mode: 1,
                caster: t.caster,
                target: e.id,
                dmg: t.level * t.stacks,
                noDaze: !0,
                type: 1
            })
        }),
        Wu = new Tu({
            id: 58,
            icon: "skills/17",
            fx: {
                stick: Ru.healOnBlockBuff,
                stickOffset: 0.5,
                startSound: { id: "warrior/healOnBlockCast", distance: 5 }
            },
            onBlock: (t, e) => ({
                id: 17,
                mode: 2,
                caster: t.caster,
                target: e.id,
                heal: 7 + 14 * t.level
            })
        }),
        Zu = new Tu({
            id: 47,
            passive: !0,
            icon: "skills/8",
            statsConvert: [
                [0, 0.3, 10],
                [0, 0.3, 11],
                [0, 0.1, 8]
            ]
        }),
        ju = new Tu({
            id: 75,
            incapacitated: !0,
            type: 1,
            visualIncapacitation: !0,
            icon: "skills/34",
            fx: { stick: Ru.stunned, stickOffset: 0.5 },
            statsOverride: (t, e) => {
                e.stat.get(15) > 30 && e.stat.set(15, 30);
            },
            movementOverride: (t, e, s, i, n) => {}
        }),
        Gu = new Tu({
            id: 92,
            maxStacks: 3,
            icon: "skills/temperBoostBuff",
            fx: {
                stick: Ru.temperBoostBuff,
                color: [0.2, 0.2, 0.25, 0.95],
                norefresh: !0
            },
            statsStatic: (t, e) => {
                e.addStat(15, 20);
            }
        }),
        Vu = new Tu({
            id: 91,
            maxStacks: 3,
            tags: new Set([3, 4]),
            icon: "skills/41",
            fx: {
                stick: Ru.temperBuff,
                color: [0.1, 0.1, 0.1, 0.92],
                norefresh: !0
            },
            statsStatic: (t, e) => {
                e.addStat(25, 25 * t.stacks);
            },
            intervalDuration: 0.5,
            onInterval: (t, e, s) => !0
        }),
        Yu = new Tu({
            id: 61,
            icon: "skills/19",
            fx: {
                stick: Ru.warcryBuff,
                startSound: { id: "warrior/warcrycast", distance: 5 }
            },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(10, Math.round(3 * t.level * t.diminishFactor)),
                    e.addStat(11, Math.round(4 * t.level * t.diminishFactor));
            }
        });
    class Ju extends un {
        constructor(t) {
            super(),
                (this.sounds = t.sounds || {}),
                (this.entity = t.entity),
                (this.cycleOne = Math.random()),
                (this.cycleRad = Dr(0, 1)),
                (this.cycleSin = 0),
                (this.speed = 1),
                (this.meshes = []),
                (this.lastFlags = 0),
                (this.deathTimer = new Al(0, 3)),
                (this.hurtSoundTimer = new Al(0, 5)),
                (this.idleSoundTimer = new Al(Wn.time + Dr(0, 20), 20)),
                (this.pushBack = [0, 0]),
                (this.pushBackVel = [0, 0]),
                (this.pushBackOffset = [0, 0]),
                (this.cDist = 0),
                (this.animQueue = []),
                (this.currentAnim = void 0),
                (this.walking = !0),
                (this.falling = !1),
                (this.tickTimer = new Al(0, 1)),
                (this.needsColorUpdate = !1),
                (this.colors = new Set()),
                (this.hasDied = !1),
                (this.effects = []);
        }
        cycle(t) {
            return 0 == t
                ? this.cycleSin
                : Math.sin(this.cycleRad + 2 * t * Math.PI);
        }
        checkCycleReset(t) {
            t != this.lastFlags && (this.cycleOne = 0), (this.lastFlags = t);
        }
        addPushBack(t, e) {
            this.cDist < 50 &&
                ((this.pushBackVel[0] -= (t[0] * e) / this.entity.size),
                (this.pushBackVel[1] -= (t[2] * e) / this.entity.size));
        }
        tickPushBack(t, e, s) {
            this.cDist < 50 &&
                (zn(
                    this.pushBackVel,
                    this.pushBackVel,
                    this.pushBack,
                    (1500 * -t) / this.entity.size
                ),
                In(this.pushBackVel, this.pushBackVel, 0.7),
                zn(this.pushBack, this.pushBack, this.pushBackVel, t),
                (function (t, e, s) {
                    const i = Math.sin(s),
                        n = Math.cos(s);
                    (t[0] = e[1] * i + e[0] * n), (t[1] = e[1] * n - e[0] * i);
                })(this.pushBackOffset, this.pushBack, -this.entity.rot));
        }
        updateVisibility() {
            const t =
                void 0 !== this.entity.mount
                    ? 1 / 0
                    : Math.min(120, 0.7 * Nn.CR);
            return (
                (this.cDist = Ci(this.position, Nn.worldPosition)),
                this.cDist < t &&
                Nn.frustumIntersectsSphere(
                    this.entity.visualPosition,
                    this.scale[1]
                )
                    ? (this.meshes.forEach(e => {
                          e.visible =
                              void 0 !== e.geometry &&
                              (!e.parent || e.parent.visible) &&
                              (!e.geometry.bounds.initiated ||
                                  this.cDist /
                                      (e.geometry.bounds.radius *
                                          e.data.lod *
                                          this.entity.size) <
                                      t);
                      }),
                      (this.visible = !0),
                      !0)
                    : (this.visible &&
                          ((this.visible = !1),
                          this.meshes.forEach(t => (t.visible = !1))),
                      !1)
            );
        }
        tick(t, e, s) {
            this.updateVisibility() &&
                (this.needsColorUpdate && this.colorUpdate(),
                void 0 === this.entity.stats || this.entity.stats.alive
                    ? ((this.cycleOne = (this.cycleOne + this.speed * t) % 1),
                      (this.cycleRad = this.cycleOne * Math.PI * 2),
                      (this.cycleSin = Math.sin(this.cycleRad)),
                      this.tickAnimations(t),
                      void 0 !== this.sounds.idle &&
                          this.idleSoundTimer.done(e) &&
                          Math.random() < 0.08 &&
                          (this.playSound(this.sounds.idle),
                          this.idleSoundTimer.reset(s.time)),
                      (this.falling =
                          (this.falling && !this.entity.onGround) ||
                          (!this.falling &&
                              !this.onGround &&
                              Math.abs(this.entity.vel[1]) > 6)),
                      (this.walking =
                          0 != this.entity.steer[0] ||
                          0 != this.entity.steer[1]),
                      this.tickParts(t, e, s))
                    : this.tickDeath(t, e, s),
                this.tickOverrides(t, e, s),
                this.updateMatrixWorld(!0));
        }
        tickAnimations(t) {
            if (((this.currentAnim = this.animQueue[0]), this.currentAnim)) {
                const e = this.currentAnim.time;
                (this.currentAnim.time += this.animQueue.length * t),
                    this.currentAnim.sounds &&
                        this.currentAnim.sounds.forEach(t => {
                            e < t.delay &&
                                this.currentAnim.time > t.delay &&
                                Jr({ loop: !1, transform: this, ...t });
                        }),
                    (this.currentAnim.fract =
                        this.currentAnim.time / this.currentAnim.duration),
                    this.currentAnim.time > this.currentAnim.duration &&
                        ((this.currentAnim.fract = 1),
                        this.currentAnim.loop ||
                            this.currentAnim.stop ||
                            this.animQueue.shift(),
                        this.currentAnim.loop &&
                            (this.currentAnim.time -= this.currentAnim.duration)),
                    (this.currentAnim.anticipate = la.anticipate(
                        this.currentAnim.fract
                    ));
            }
        }
        fraction(t, e, s = this.cycleOne) {
            return s >= t && s - this.speed * e < t;
        }
        mesh(t, e, s, i, n) {
            const a = nc({
                geo: e || "engine/cube.ho",
                program: n || vl.multimeshFlat,
                ts: !0,
                rs: !1,
                dynamic: !0,
                frustum: !1,
                ...i
            });
            return (
                (a.data.lod = 1),
                (a.visible = !1),
                void 0 !== s && this.changeMeshBaseColor(a, s),
                null !== t && a.setParent(t || this),
                this.meshes.push(a),
                a
            );
        }
        removeMesh(t, e) {
            t.setParent(null),
                t.data.multi.remove(t),
                e && this.meshes.splice(this.meshes.indexOf(t), 1);
        }
        onRemove() {
            this.meshes.forEach(t => {
                this.removeMesh(t, !1);
            }),
                (this.meshes.length = 0),
                this.effects.forEach(t => {
                    t.data.remove = !0;
                }),
                this.setParent(null);
        }
        anim(t) {
            this.visible &&
                (this.animQueue.push({
                    id: t.id,
                    duration: t.dur,
                    time: 0,
                    fract: 0,
                    sounds: t.sounds,
                    stop: t.stop || !1,
                    loop: t.loop || !1
                }),
                this.animQueue.length > 5 && this.animQueue.shift());
        }
        clearAnims() {
            this.animQueue.length = 0;
        }
        playSound(t, e = 5) {
            Jr({
                loop: !1,
                transform: this,
                delay: 0.2,
                distance: e + this.scale[1],
                force: this.scale[1] > 2,
                pitch: this.getScaleFactor(),
                ...t
            });
        }
        onHurt(t) {
            this.sounds.hurt &&
                (t > 0.2 || this.hurtSoundTimer.done(Wn.time)) &&
                (this.playSound(this.sounds.hurt),
                this.hurtSoundTimer.reset(Wn.time));
        }
        onEffort() {
            this.sounds.effort &&
                Dr(0, 1) < 0.3 &&
                this.playSound(this.sounds.effort);
        }
        onAggro() {
            this.sounds.aggro &&
                (this.playSound(this.sounds.aggro),
                this.idleSoundTimer.reset(Wn.time));
        }
        onDeath() {
            (this.hasDied = !0),
                this.sounds.death && this.playSound(this.sounds.death, 8),
                this.eyes &&
                    (this.removeMesh(this.eyes, !0), (this.eyes = void 0)),
                this.addColor(Pu.death),
                this.deathTimer.reset(Wn.time);
            let t = this.meshes.length;
            for (; t--; ) {
                const e = this.meshes[t];
                (e.data.deathSize =
                    ((e.geometry.bounds.initiated
                        ? e.geometry.bounds.radius
                        : 1) *
                        (e.scale[0] + e.scale[1] + e.scale[2])) /
                    3),
                    !e.visible ||
                    (e.parent && !e.parent.visible) ||
                    e.data.deathSize < 0.5
                        ? (this.removeMesh(e, !1), this.meshes.splice(t, 1))
                        : (e.setParent(null),
                          Yi(e.position, e.VN),
                          Ji(e.scale, e.VN),
                          Xi(e.rotation, e.VN),
                          (e.data.deathVel = [
                              Dr(-0.5, 0.5),
                              1,
                              Dr(-0.5, 0.5)
                          ]));
            }
        }
        tickDeath(t, e, s) {
            this.meshes.forEach(i => {
                if (!i.visible || void 0 === i.data.deathVel) return;
                if (this.deathTimer.done(e)) return void this.removeMesh(i, !0);
                const n = i.data.deathVel,
                    a = i.data.deathSize;
                Ei(i.position, i.position, n, t), Mi(n, n, 1 - 3 * t);
                const r = s.getHeight(i.position[0], i.position[2]) + 0.5 * a;
                n[1] < 0 && i.position[1] < r
                    ? n[1] < -1
                        ? ((n[1] = 0.7 * Math.abs(n[1])),
                          (n[0] += Dr(-1, 1) / a),
                          (n[2] += Dr(-1, 1) / a))
                        : (n[1] = -0.5)
                    : (n[1] -= 50 * t),
                    Ui(Gn, n, Zn),
                    Ei(i.rotation, i.rotation, Gn, 5 * -t),
                    i.rotation.onChange(),
                    i.updateMatrixWorld(!0);
            });
        }
        getScaleFactor() {
            return 1 / (0.7 + 0.3 * this.scale[1]);
        }
        getTopAbsolute() {
            return this.entity.height * this.entity.size * 0.5;
        }
        tickFixed(t, e, s) {}
        tickOverrides(t, e, s) {}
        setCrown() {}
        setHeadgear() {}
        setCape() {}
        addColor(t) {
            this.colors.add(t), (this.needsColorUpdate = !0);
        }
        removeColor(t) {
            this.colors.delete(t), (this.needsColorUpdate = !0);
        }
        colorUpdate() {
            (this.needsColorUpdate = !1),
                this.meshes.forEach(t => this.updateMeshColor(t));
        }
        changeMeshBaseColor(t, e) {
            (t.data.basecolor = e),
                void 0 !== !t.data.color && (t.data.color = [0, 0, 0, 0]),
                this.updateMeshColor(t);
        }
        updateMeshColor(t) {
            const e = t.data.color;
            tn(e, t.data.basecolor),
                this.colors.forEach(t => {
                    const s = t[3],
                        i = 1 - s;
                    (e[0] = e[0] * i + t[0] * s),
                        (e[1] = e[1] * i + t[1] * s),
                        (e[2] = e[2] * i + t[2] * s);
                });
        }
    }
    const Xu = {
        melee: { delay: 0.3, distance: 5, rnd: 3, id: "melee/sword" },
        hurt: { id: "humanoid/hurt", rnd: 7 },
        death: { id: "humanoid/death", rnd: 2 },
        effort: { id: "humanoid/effort", rnd: 7 }
    };
    class Qu extends Ju {
        constructor(t) {
            t.sounds || (t.sounds = Xu),
                super(t),
                (this.chest = this.mesh(this, null, t.Za, null, t.shader)),
                (this.chest.data.lod = 3),
                (this.hands = []),
                (this.legs = []);
            for (let e = 0; e < 2; ++e) {
                const e = this.mesh(
                    this.chest,
                    "character/hand.ho",
                    this.chest.data.color,
                    null,
                    t.shader
                );
                e.data.lod = 2;
                const s = this.mesh(
                    this,
                    "character/boot.ho",
                    Pu.greysteel,
                    null,
                    t.shader
                );
                xi(s.scale, 0.4, 0.4, 0.4),
                    (s.data.lod = 0.6),
                    this.legs.push(s),
                    this.hands.push(e);
            }
            (this.eyes = this.mesh(
                this.chest,
                "character/eyes.ho",
                t.colEyes || Pu.black,
                null,
                vl.multimeshSimple
            )),
                (this.eyes.data.lod = 1.5),
                (this.eyesBlink = 0),
                xi(this.eyes.position, 0, -0.05, 0.52),
                (this.hasJustJumped = !1),
                (this.hasJustLanded = !0),
                (this.hasJustStopped = !0),
                (this.flip = 0),
                (this.capeswing = !0),
                (this.cape = void 0),
                (this.headgear = void 0),
                (this.movementPushback = [0, 0, 0]),
                (this.movementPushbackVel = [0, 0, 0]);
        }
        tickFixed(t, e, s) {
            super.tickFixed(t, e, s), this.tickPushBack(t, e, s);
        }
        tickPushBack(t, e, s) {
            super.tickPushBack(t, e, s),
                this.chest.visible &&
                    this.cDist < 25 &&
                    0 === this.entity.constructor.type &&
                    (Ei(
                        this.movementPushback,
                        this.movementPushback,
                        this.movementPushbackVel,
                        60 * t
                    ),
                    Ei(
                        this.movementPushbackVel,
                        this.movementPushbackVel,
                        this.movementPushbackVel,
                        -20 * t
                    ),
                    Ei(
                        this.movementPushbackVel,
                        this.movementPushbackVel,
                        this.movementPushback,
                        -10 * t
                    ),
                    (this.movementPushbackVel[2] +=
                        0.01 * this.entity.steer[1]),
                    (this.movementPushbackVel[0] -=
                        0.01 * this.entity.steer[0]));
        }
        tickParts(t, e, s) {
            (this.walking = void 0 === this.entity.mount && this.walking),
                this.checkCycleReset(
                    (this.falling << 1) | ((!this.falling && this.walking) << 2)
                ),
                this.calculateCycleSpeed(),
                this.updateChest(),
                this.updateHands(),
                this.updateLegs(),
                this.updateEyes(t),
                this.tickWalkSounds(t),
                this.tickLandingSounds(),
                this.tickEquipment(t, e, s);
        }
        tickOverrides(t, e, s) {
            this.chest.visible &&
                this.entity.buffs.incapacitated.size > 0 &&
                Array.from(this.entity.buffs.incapacitated).some(
                    t => t.logic.visualIncapacitation
                ) &&
                ((this.chest.rotation[0] +=
                    0.3 * (Math.sin(2.2 * e) + 0.3 * Math.sin(2.1 * e)) + 1),
                (this.chest.rotation[1] +=
                    0.3 * (Math.sin(2.1 * e) + 0.6 * Math.sin(2 * e))),
                (this.chest.rotation[2] +=
                    0.3 * (Math.sin(0.8 * e) + 0.5 * Math.sin(2.3 * e))),
                this.chest.rotation.onChange(),
                this.hands.forEach(t => (t.position[1] -= 0.2)));
        }
        tickEquipment(t, e, s) {
            const i = this.hands[0];
            if (
                i.visible &&
                (void 0 !== this.weapon &&
                    (this.sheathed ||
                        (this.entity.mount
                            ? this.sheathe(!0)
                            : !this.entity.target ||
                              this.walking ||
                              this.falling
                            ? ((i.rotation[0] += 0.5),
                              i.rotation.onChange(),
                              (i.position[1] -= 0.2),
                              (i.position[0] -= 0.1))
                            : ((i.rotation[0] += 1),
                              (i.rotation[2] += 0.6),
                              i.rotation.onChange(),
                              (i.position[2] -= 0.3),
                              (i.position[1] -= 0.2),
                              (i.position[0] -= 0.1),
                              (this.legs[0].position[0] -= 0.05),
                              (this.legs[1].position[0] += 0.05),
                              (this.legs[0].position[2] -= 0.2),
                              (this.chest.position[1] +=
                                  0.05 * Math.sin(3 * e) - 0.05),
                              (this.chest.rotation[1] -=
                                  0.05 * Math.cos(3 * e)),
                              this.chest.rotation.onChange()))),
                this.currentAnim)
            ) {
                const t = la.easeInOutCubic(this.currentAnim.fract),
                    e = -Math.sin(7.5 * t - 1.5),
                    s = -Math.sin(6.28 * t),
                    n = -Math.sin(3.14 * t),
                    a = la.easeOutExpo(-n);
                switch (
                    (Mi(i.rotation, i.rotation, 1 - a), this.currentAnim.id)
                ) {
                    case 0:
                        if (void 0 !== this.weapon)
                            this.sheathe(!1),
                                (i.rotation[0] += 1.7 * n),
                                (i.rotation[1] += 1.5 * a),
                                (i.rotation[2] += e * a + 0.5 * a),
                                i.rotation.onChange(),
                                (i.position[2] -= n - t * a),
                                (i.position[1] +=
                                    Math.sin(13 * t + 3) * a * 0.5),
                                (i.position[0] += (1.5 * t - 0.5) * a),
                                (this.chest.rotation[1] += 1.5 * s),
                                this.chest.rotation.onChange();
                        else {
                            const e = Math.cos(6.28 * t);
                            (this.chest.position[2] +=
                                (0.3 + 0.2 * Math.sin(6.28 * t - 3.14)) * a),
                                (this.chest.rotation[0] +=
                                    0.5 * Math.sin(3.28 * t) * a),
                                this.chest.rotation.onChange(),
                                this.hands.forEach((s, i) => {
                                    s.visible &&
                                        (Mi(s.position, s.position, 1 - a),
                                        (s.position[2] += (1 - 0.5 * e) * a),
                                        (s.position[1] +=
                                            Math.sin(6.28 * t) *
                                            (t > 0.5 ? 0.7 : 1)),
                                        (s.position[0] +=
                                            (i
                                                ? 0.5 + 0.2 * n
                                                : -0.5 - 0.2 * n) * a),
                                        s.rotation.set(0, 1.5, 0));
                                });
                        }
                        break;
                    case 1:
                        this.sheathe(!1),
                            (i.rotation[0] -= 1.7 * n),
                            (i.rotation[1] += 1.5 * a - a),
                            (i.rotation[2] += e * a + 0.5 * a),
                            i.rotation.onChange(),
                            (i.position[2] += a),
                            (i.position[0] -= 0.5 * a),
                            (this.chest.rotation[1] -= 1.5 * s - 0.5 * a),
                            this.chest.rotation.onChange();
                        break;
                    case 4:
                        this.sheathe(!1),
                            (i.rotation[0] += 1.7 * n),
                            (i.rotation[1] -= 1.5 * n),
                            i.rotation.onChange(),
                            (i.position[0] -= 0.5 * a),
                            (this.chest.rotation[1] = 2 * t * Math.PI + 3 * a),
                            this.chest.rotation.onChange();
                        break;
                    case 3:
                        this.sheathe(!0),
                            this.chest.rotation.set(n, 0, 0),
                            xi(i.position, -0.3, 0, 0.7);
                }
            }
            this.tickShield(), this.tickCape(t);
        }
        tickShield() {
            const t = this.hands[1];
            void 0 !== this.shield &&
                t.visible &&
                (!this.entity.target || this.walking || this.falling
                    ? ((t.rotation[2] -= 0.1),
                      t.rotation.onChange(),
                      (t.position[1] += 0.1))
                    : ((t.rotation[2] -= 0.2),
                      (t.rotation[1] -= 1),
                      t.rotation.onChange(),
                      (t.position[1] += 0.1),
                      (t.position[2] += 0.4)));
        }
        tickCape(t) {
            void 0 !== this.cape &&
                this.cape.visible &&
                this.capeswing &&
                ((this.entity.steer[1] > 0 || this.falling) &&
                    (this.capeoffset += 0.5 * bi(this.entity.vel) * t),
                (this.capeoffset *= 1 - 3 * t),
                this.cape.rotation.set(Math.max(0, this.capeoffset), 0, 0));
        }
        tickWalkSounds(t) {
            (this.cDist < 20 || this.scale[1] > 2) &&
                !this.falling &&
                this.walking &&
                (this.fraction(0.2, t) || this.fraction(0.7, t)) &&
                Jr({
                    id:
                        (this.scale[1] > 2 || this.chest.scale[1]) > 2
                            ? "step_giant"
                            : "step_grass",
                    rnd: 3,
                    loop: !1,
                    transform: this,
                    distance: Math.min(1 + 3 * this.scale[1], 10),
                    force: this.scale[1] > 2
                });
        }
        tickLandingSounds() {
            this.hasJustJumped &&
                this.entity.onGround &&
                (this.cDist < 20 &&
                    (0 == this.entity.vel[1] || this.entity.vel[1] < -4) &&
                    (Jr({
                        id: "land_grass",
                        loop: !1,
                        transform: this,
                        distance: 3
                    }),
                    (this.movementPushbackVel[2] = 0.05),
                    (this.movementPushbackVel[1] = -0.15),
                    (this.eyesBlink = 0.3)),
                (this.hasJustLanded = !0),
                (this.hasJustJumped = !1),
                (this.flip = 0)),
                this.hasJustLanded &&
                    !this.entity.onGround &&
                    (this.entity.vel[1] > 5 &&
                        (Jr({
                            id: "jump_grass",
                            loop: !1,
                            transform: this,
                            distance: 3
                        }),
                        Math.random() < 0.5 &&
                            (this.flip = this.entity.steer[1]),
                        (this.movementPushbackVel[2] = 0.05),
                        (this.movementPushbackVel[1] = -0.1),
                        (this.eyesBlink = 0.3),
                        Dr(0, 1) < 0.2 && this.onEffort()),
                    (this.hasJustJumped = !0),
                    (this.hasJustLanded = !1));
        }
        updateEyes(t) {
            this.eyes.visible &&
                (this.eyesBlink > 0
                    ? (this.eyesBlink -= t)
                    : Math.random() < 0.006 && (this.eyesBlink = 0.1),
                xi(this.eyes.scale, 1, this.eyesBlink > 0 ? 0.1 : 1, 0.1));
        }
        updateLegs() {
            this.legs.forEach((t, e) => {
                if (t.visible)
                    if (this.entity.mount) this.entity.mount.mountLegs(t, e);
                    else {
                        if (this.currentAnim && 10 === this.currentAnim.id)
                            return void (t.visible = !1);
                        const s = ma(this.entity.steer);
                        if (this.falling)
                            if (0 == this.flip) {
                                const i =
                                        0.1 *
                                        Math.max(
                                            -1,
                                            Math.min(
                                                0,
                                                0.2 * this.entity.vel[1]
                                            )
                                        ),
                                    n = e
                                        ? 0.3 * this.cycle(0) - i
                                        : 0.3 * this.cycle(0.5) + i;
                                xi(Gn, e ? 0.3 - i : -0.3 + i, -0.65, n),
                                    Ai(t.position, Gn, 0),
                                    t.rotation.set(-n, s, 0);
                            } else
                                xi(t.position, e ? 0.3 : -0.3, -0.3, 0),
                                    t.rotation.set(0, 0, 0);
                        else {
                            if (this.walking) {
                                const i = this.entity.steer[1] < 0 ? 0.4 : 0.6,
                                    n = this.cycle(0) * i * 1.3;
                                xi(
                                    Gn,
                                    e ? 0.3 : -0.3,
                                    Math.max(
                                        0,
                                        0.6 *
                                            Math.cos(
                                                this.cycleRad +
                                                    (e ? 0 : Math.PI)
                                            )
                                    ) - 0.55,
                                    this.cycle(e ? 0 : 0.5) * i
                                ),
                                    Ai(t.position, Gn, s),
                                    t.rotation.set(e ? -n : n, s, 0);
                            } else
                                t.rotation.set(0, e ? 0.1 : -0.1, 0),
                                    xi(t.position, e ? 0.45 : -0.45, -0.65, 0);
                            this.currentAnim &&
                                ((5 != this.currentAnim.id &&
                                    6 != this.currentAnim.id) ||
                                    xi(
                                        t.position,
                                        e ? 0.4 : -0.55,
                                        -0.65,
                                        e ? 0.2 : -0.3
                                    ));
                        }
                    }
            });
        }
        updateChest() {
            if (this.chest.visible) {
                this.falling && void 0 === this.entity.mount
                    ? ((this.rotation[0] = this.cycleRad * this.flip),
                      xi(this.chest.position, 0, 0 != this.flip ? 0.3 : 0.5, 0))
                    : (this.walking
                          ? xi(
                                this.chest.position,
                                0,
                                0.1 * Math.cos(2 * this.cycleRad) + 0.4,
                                0
                            )
                          : xi(
                                this.chest.position,
                                0,
                                void 0 === this.entity.mount
                                    ? 0.1 * this.cycle(0) + 0.4
                                    : 0.4,
                                0
                            ),
                      (this.rotation[0] = 0)),
                    this.chest.rotation.set(
                        5 * -this.pushBack[1] + this.movementPushback[2],
                        0,
                        5 * this.pushBack[0] - this.movementPushback[0]
                    ),
                    ya(
                        this.chest.position,
                        this.chest.position,
                        this.pushBackOffset
                    ),
                    Ei(
                        this.chest.position,
                        this.chest.position,
                        this.movementPushback,
                        1
                    );
                const t = 0.5 * -this.movementPushback[1];
                if (
                    (xi(this.chest.scale, 1 + t, 1 - t, 1 + t),
                    this.currentAnim)
                )
                    if (
                        ((5 != this.currentAnim.id &&
                            6 != this.currentAnim.id) ||
                            ((this.chest.rotation[1] -=
                                0.3 + 0.05 * this.cycle(0.2)),
                            (this.chest.rotation[0] +=
                                0.3 + 0.02 * this.cycle(0.4)),
                            this.chest.rotation.onChange(),
                            (this.chest.position[1] -=
                                0.1 + 0.05 * this.cycle(0.6)),
                            (this.chest.position[0] -= 0.05)),
                        6 == this.currentAnim.id)
                    )
                        (this.chest.rotation[1] *=
                            1 - this.currentAnim.anticipate),
                            this.chest.rotation.onChange();
                    else if (10 == this.currentAnim.id)
                        xi(
                            this.chest.position,
                            0,
                            0.2 +
                                0.5 *
                                    Math.sin(this.currentAnim.fract * Math.PI),
                            0
                        ),
                            (this.chest.rotation[0] +=
                                this.currentAnim.fract * ha),
                            (this.chest.rotation[1] += ma(this.entity.steer)),
                            this.chest.rotation.onChange();
                    else if (9 == this.currentAnim.id) {
                        const t = la.easeOutQuad(
                            na(2 * this.currentAnim.fract, 0, 1)
                        );
                        (this.chest.rotation[0] -= 0.3 * t),
                            (this.chest.rotation[1] -= 0.2 * t),
                            (this.chest.rotation[2] -= 0.2 * t),
                            this.chest.rotation.onChange();
                    }
            }
        }
        updateHands() {
            this.hands.forEach((t, e) => {
                if (t.visible) {
                    if (this.falling && void 0 === this.entity.mount)
                        xi(
                            t.position,
                            e ? 0.6 : -0.6,
                            -na(this.entity.vel[1], -5, 5) / 20,
                            0
                        ),
                            (t.position[0] +=
                                (e ? 1 : -1) *
                                Math.sin(3.1 * t.position[1] + 0.8) *
                                0.3),
                            t.rotation.set(
                                0,
                                e ? Math.PI : 0,
                                -0.3 - t.position[1]
                            );
                    else if (this.walking) {
                        const s = this.cycle(0),
                            i = this.entity.steer[1] < 0 ? 0.3 : 0.5,
                            n = Math.sin(2 * this.cycleRad + 5);
                        t.rotation.set(0, s * i * 1.3 + (e ? Math.PI : 0), 0),
                            xi(
                                t.position,
                                (e ? 0.7 : -0.7) + n * (e ? -0.2 : 0.2),
                                s * (e ? 0.3 : -0.3) - 0.2,
                                0.2 + s * i * (e ? -1.5 : 1.5)
                            ),
                            (t.position[0] = e
                                ? Math.max(0.5, t.position[0])
                                : Math.min(-0.5, t.position[0]));
                    } else if (this.entity.mount)
                        t.rotation.set(0, e ? -1.3 + Math.PI : 1.3, 0.3),
                            xi(t.position, e ? 0.3 : -0.3, -0.5, 0.7);
                    else {
                        const s = this.cycle(0);
                        t.rotation.set(
                            0,
                            (e ? -0.43 + Math.PI : 0.43) +
                                0.15 * s * (e ? 1 : -1),
                            0.3
                        ),
                            xi(
                                t.position,
                                e ? 0.7 : -0.7,
                                0.08 * s - 0.3,
                                0.15 - 0.1 * s
                            );
                    }
                    if (this.currentAnim)
                        if (
                            5 == this.currentAnim.id ||
                            6 == this.currentAnim.id
                        )
                            0 == e
                                ? ((t.position[0] -= 0.2),
                                  (t.position[1] -= 0.2),
                                  6 == this.currentAnim.id &&
                                      (Mi(
                                          t.position,
                                          t.position,
                                          1 - this.currentAnim.fract
                                      ),
                                      (t.position[0] +=
                                          0.3 * -this.currentAnim.fract),
                                      (t.position[2] +=
                                          0.6 * this.currentAnim.anticipate)))
                                : ((t.position[0] -= 0.4),
                                  (t.position[2] +=
                                      0.5 - 0.2 * this.cycle(0.3)),
                                  (t.rotation[1] +=
                                      0.6 + 0.2 * this.cycle(0.4)),
                                  (t.rotation[0] -= 0.8),
                                  t.rotation.onChange(),
                                  6 == this.currentAnim.id &&
                                      (Mi(
                                          t.position,
                                          t.position,
                                          1 - this.currentAnim.fract
                                      ),
                                      (t.position[0] +=
                                          0.3 * this.currentAnim.fract),
                                      (t.position[2] += this.currentAnim.fract)));
                        else if (9 === this.currentAnim.id) {
                            const s = la.easeOutQuad(
                                na(2 * this.currentAnim.fract, 0, 1)
                            );
                            this.shoulders &&
                                this.shoulders[0].visible &&
                                this.shoulders[0].rotation &&
                                (wi(t.rotation, this.shoulders[0].rotation),
                                t.rotation.onChange()),
                                0 == e
                                    ? ((t.position[2] = 0.2),
                                      (t.position[1] = s),
                                      (t.position[0] = 0.1 * s - 0.6))
                                    : ((t.position[2] = 0.5),
                                      (t.position[0] = 0.6 - 0.3 * s),
                                      (t.position[1] = 1.2 * s));
                        }
                    this.shoulders &&
                        this.shoulders[e].visible &&
                        (this.shoulders[e].lookAt(t.position, !1, Zn),
                        Mi(
                            this.shoulders[e].rotation,
                            this.shoulders[e].rotation,
                            0.5
                        ),
                        (this.shoulders[e].rotation[1] -= e ? 0.8 : -0.8),
                        (this.shoulders[e].rotation[2] -= e ? 0.5 : -0.5),
                        this.shoulders[e].rotation.onChange());
                }
            });
        }
        calculateCycleSpeed() {
            this.falling
                ? (this.speed = 1.5)
                : this.walking
                ? (this.speed =
                      (this.entity.speed *
                          (-1 === this.entity.steer[1] ? 1.3 : 1) *
                          0.45) /
                      (0.4 + 0.6 * this.entity.size))
                : (this.speed = 0.5);
        }
        sheathe(t) {
            this.sheathed !== t &&
                ((this.sheathed = t),
                void 0 !== this.weapon &&
                    (this.weapon.setParent(t ? this.chest : this.hands[0]),
                    this.sheathed
                        ? wi(this.weapon.position, this.sheathedWeaponPos)
                        : wi(this.weapon.position, this.unsheathedWeaponPos)),
                this.shield &&
                    (this.shield.setParent(t ? this.chest : this.hands[1]),
                    this.sheathed
                        ? (xi(this.shield.position, 0, -0.2, -0.65),
                          this.shield.rotation.set(0, -1.57, 0))
                        : (xi(this.shield.position, -0.2, 0, 0),
                          this.shield.rotation.set(0, 0, 0))));
        }
        setShoulders(t, e = 1) {
            this.shoulders ||
                (this.shoulders = [
                    this.mesh(this.chest),
                    this.mesh(this.chest)
                ]),
                this.shoulders.forEach((s, i) => {
                    (s.data.lod = 0.6),
                        xi(s.position, i ? 0.5 : -0.5, -0.1, -0.05),
                        xi(s.scale, 0.6 * e, 0.5 * e, 0.5 * e),
                        this.changeMeshBaseColor(s, t);
                });
        }
        setCape(t, e) {
            this.hasDied || !1 === t
                ? this.hasDied ||
                  void 0 === this.cape ||
                  (this.removeMesh(this.cape, !0), (this.cape = void 0))
                : ((this.capeoffset = 0),
                  void 0 === this.cape &&
                      ((this.cape = this.mesh(this.chest, "character/cape.ho")),
                      xi(this.cape.position, 0, 0.2, -0.55),
                      (this.cape.data.lod = 0.6)),
                  xi(this.cape.scale, e, e, e),
                  this.changeMeshBaseColor(this.cape, t));
        }
        setHeadgear(t) {
            this.hasDied || !1 === t
                ? this.hasDied ||
                  void 0 === this.headgear ||
                  (this.removeMesh(this.headgear, !0), (this.headgear = void 0))
                : (void 0 === this.headgear &&
                      ((this.headgear = this.mesh(
                          this.chest,
                          "character/headgear.ho"
                      )),
                      (this.headgear.data.lod = 0.5)),
                  this.changeMeshBaseColor(this.headgear, t));
        }
        setCrown(t) {
            this.hasDied || !1 === t
                ? this.hasDied ||
                  void 0 === this.crown ||
                  (this.removeMesh(this.crown, !0), (this.crown = void 0))
                : (void 0 === this.crown &&
                      ((this.crown = this.mesh(
                          this.chest,
                          "character/crown.ho"
                      )),
                      (this.crown.position[1] = 0.8)),
                  this.changeMeshBaseColor(this.crown, t));
        }
    }
    const Ku = {
        death: { id: "undead/death", rnd: 2 },
        hurt: { id: "undead/hurt", rnd: 3 },
        melee: { delay: 0.2, distance: 4, id: "undead/attack", rnd: 3 },
        aggro: { id: "undead/aggro", rnd: 2 },
        idle: { id: "undead/idle", rnd: 6 }
    };
    class tm extends Qu {
        constructor(t) {
            (t.colPrim = t.colPrim || Pu.emerald),
                (t.colSec = t.colSec || Pu.bone2),
                (t.sounds = Ku),
                super({ Za: t.colPrim, colEyes: Pu.evilred, ...t }),
                (this.meat = this.mesh(this.chest, null, t.colSec)),
                xi(this.meat.position, 0.2, 0.2, -0.2),
                xi(this.meat.scale, 0.7, 0.7, 0.7),
                (this.meat.data.lod = 0.7),
                this.setShoulders(t.colSec, 0.5),
                this.legs.forEach((e, s) => {
                    xi(e.scale, 0.4, 0.4, 0.4),
                        this.changeMeshBaseColor(e, s ? t.colPrim : t.colSec);
                }),
                this.hands.forEach((e, s) =>
                    this.changeMeshBaseColor(e, s ? t.colSec : t.colPrim)
                );
        }
        tickEquipment(t, e, s) {
            (void 0 !== this.currentAnim && 0 !== this.currentAnim.id) ||
                this.hands.forEach((t, e) => {
                    xi(t.position, e ? 0.5 : -0.5, e ? 0.1 : -0.1, 1),
                        t.rotation.set(0, 1.5, 0);
                }),
                super.tickEquipment();
        }
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                (this.chest.rotation[0] +=
                    0.1 *
                        (Math.sin(1.8 * e) * Math.cos(2 * e) * 0.3 +
                            0.3 * Math.sin(1.4 * e)) +
                    0.2),
                (this.chest.rotation[1] +=
                    0.1 * (Math.sin(1.3 * e) + 0.6 * Math.sin(2.4 * e))),
                (this.chest.rotation[2] +=
                    0.1 * (Math.sin(0.4 * e) + 0.5 * Math.sin(1.9 * e))),
                this.chest.rotation.onChange(),
                this.legs.forEach((t, s) => {
                    (t.rotation[1] += 0.3 * Math.sin(0.2 * e - s)),
                        t.rotation.onChange();
                });
        }
    }
    var em = new Tu({
            id: 77,
            type: 1,
            tags: new Set([7]),
            incapacitated: !0,
            icon: "skills/37",
            fx: {
                visual: tm,
                stick: Ru.transformation,
                startSound: {
                    id: "shaman/spiritAnimalCast",
                    distance: 5,
                    dynamic: !0
                },
                endSound: { id: "buffEnd", distance: 5, dynamic: !0 }
            },
            statsStatic: (t, e) => {
                e.maxStat(25, 30 + 7 * t.level),
                    e.maxStat(26, 20 + 3 * t.level);
            }
        }),
        sm = new Tu({
            id: 70,
            icon: "skills/28",
            fx: {
                stick: Ru.caninehowl,
                stickOffset: 0.5,
                startSound: { id: "shaman/caninehowlcast", distance: 5 }
            },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(
                    16,
                    Math.round((100 + 60 * t.level) * t.diminishFactor)
                );
            }
        }),
        im = new Tu({
            id: 53,
            type: 1,
            tags: new Set([3, 1]),
            icon: "skills/12",
            fx: {
                stick: Ru.decay,
                stickOffset: 0.5,
                color: [0.5, 0.4, 0.05, 0.5]
            },
            statsStatic: (t, e) => {
                e.maxStat(25, 20 + 3 * t.level);
            },
            intervalDuration: 1.5,
            onInterval: (t, e, s) => ({
                id: 12,
                mode: 1,
                caster: t.caster,
                target: e.id,
                dmg: 1 + s.stats.getDamageRoll() * (0.1 + 0.08 * t.level),
                type: 1,
                noDaze: !0
            })
        }),
        nm = new Tu({
            id: 54,
            icon: "skills/13",
            fx: {
                stick: Ru.manaBuff,
                startSound: { id: "shaman/manaBuffCast", distance: 5 }
            },
            intervalDuration: 0.5,
            custom: [[t => 40 + 30 * t, "MP recovered"]],
            onInterval: (t, e, s) => {}
        }),
        am = new Tu({
            id: 95,
            maxStacks: 5,
            icon: "skills/43",
            fx: { stick: Ru.plagueSpreaderBuff }
        }),
        rm = new Tu({ id: 94, passive: !0 }),
        om = new Tu({
            id: 46,
            maxStacks: 3,
            icon: "skills/7",
            fx: { stick: Ru.revitalize },
            intervalDuration: 1,
            multiplyIncomingHeal: {
                6: t => 1 + 0.25 * t.stacks,
                7: t => 1 + 0.3 * (t.stacks - 1)
            },
            onInterval: (t, e, s) => ({
                id: 7,
                mode: 2,
                caster: t.caster,
                target: e.id,
                heal: 6 + s.stats.getDamageRoll() * (0.035 + 0.03 * t.level)
            })
        }),
        lm = new Tu({
            id: 50,
            passive: !0,
            icon: "skills/8",
            statsConvert: [
                [4, 0.4, 10],
                [4, 0.4, 11]
            ]
        });
    const cm = {
        death: { id: "blob/death" },
        hurt: { id: "blob/hurt", rnd: 1 },
        melee: { delay: 0.3, distance: 3, id: "blob/attack", rnd: 2 },
        aggro: { id: "blob/aggro", rnd: 1 },
        idle: { id: "blob/idle", rnd: 2 }
    };
    class hm extends Ju {
        constructor(t) {
            (t.sounds = cm),
                super(t),
                (this.chest = this.mesh(
                    this,
                    t.meshHead || null,
                    t.colPrim || Pu.slimegreen
                )),
                (this.blobs = []);
            for (let e = 0; e < 2; ++e) {
                const s = this.mesh(
                    null,
                    t.meshHead || null,
                    (0 == e ? t.colSec : t.colPrim) || this.chest.data.color
                );
                (s.data.lod = 0.25 * (3 - e)), this.blobs.push(s);
            }
            (this.eyes = this.mesh(
                this.chest,
                t.meshEyes || "character/eyes.ho",
                t.colEyes || Pu.black,
                null,
                vl.multimeshSimple
            )),
                (this.eyesBlink = 0),
                (this.eyes.data.lod = 1.8),
                xi(this.eyes.position, 0, -0.05, 0.52);
        }
        tickFixed(t, e, s) {
            this.tickPushBack(t, e, s);
        }
        tickParts(t, e, s) {
            this.checkCycleReset(
                (this.falling << 1) | ((!this.falling && this.walking) << 2)
            ),
                this.walking
                    ? (this.speed =
                          (this.entity.speed / this.entity.size) * 0.2)
                    : (this.speed = 0.5);
            const i = this.cycle(0.5);
            if (
                (xi(
                    this.chest.scale,
                    0.1 * i + 1,
                    1 + 0.1 * this.cycleSin,
                    0.1 * i + 1
                ),
                xi(this.chest.position, 0, 0.1 * this.cycleSin - 0.1, 0),
                this.chest.rotation.set(
                    5 * -this.pushBack[1],
                    0,
                    5 * this.pushBack[0]
                ),
                ya(
                    this.chest.position,
                    this.chest.position,
                    this.pushBackOffset
                ),
                this.eyes.visible &&
                    (this.eyesBlink > 0
                        ? (this.eyesBlink -= t)
                        : Math.random() < 0.006 && (this.eyesBlink = 0.1),
                    xi(this.eyes.scale, 1, this.eyesBlink > 0 ? 0.1 : 1, 1)),
                this.currentAnim)
            ) {
                const t = la.easeOutExpo(this.currentAnim.fract ** 3);
                switch (this.currentAnim.id) {
                    case 0:
                        this.chest.position[2] += Math.sin(6.28 * t - 3.14);
                }
            }
            this.blobs.forEach((e, i) => {
                if (!e.visible) return;
                const n = 0 == i ? this : this.blobs[i - 1];
                Si(Gn, n.position, e.position),
                    xi(Yn, 0, 0, 0.7 * -n.scale[0]),
                    Ai(Vn, Yn, n.rotation[1]),
                    $i(Gn, Gn, Vn);
                const a = bi(Gn);
                a > 30 * this.entity.size
                    ? wi(e.position, this.entity.wU)
                    : Ei(
                          e.position,
                          e.position,
                          Gn,
                          Math.max(
                              0,
                              Math.min(0.5, 20 * t * (a - 0.7 * e.scale[1]))
                          )
                      ),
                    e.rotation.set(0, pa(Si(Gn, n.position, e.position)), 0),
                    ki(
                        e.scale,
                        0.3 *
                            (3 - i) *
                            (0.8 + 0.1 * this.cycle(0.3 * i)) *
                            this.scale[0]
                    ),
                    (e.position[1] = Math.max(
                        s.getHeight(e.position[0], e.position[2]) +
                            0.5 * e.scale[1],
                        e.position[1] - 2.5 * t
                    )),
                    e.updateMatrixWorld();
            });
        }
        mountPosition(t) {
            Ii(t, [0, 0.6, -0.13], this.chest.VN);
        }
        mountLegs(t, e) {
            t.rotation.set(-1.5, e ? 0.2 : -0.2, e ? 0.4 : -0.4),
                xi(t.position, e ? 0.6 : -0.6, 0, 0.6);
        }
    }
    var dm = new Tu({
            id: 76,
            breakOnCast: !0,
            icon: "skills/36",
            fx: {
                visual: hm,
                stick: Ru.transformation,
                startSound: {
                    id: "shaman/spiritAnimalCast",
                    distance: 5,
                    dynamic: !0
                },
                endSound: { id: "buffEnd", distance: 5, dynamic: !0 }
            },
            statsStatic: (t, e) => {
                e.addStat(15, 40 + 5 * t.level);
            }
        }),
        um = new Tu({
            id: 68,
            passive: !0,
            statsStatic: (t, e) => {
                e.addStat(14, Math.round(30 + 20 * t.level));
            }
        }),
        mm = new Tu({
            id: 52,
            icon: "skills/11",
            fx: {
                stick: Ru.invigorateBuff,
                stickOffset: 0.5,
                startSound: { id: "archer/invigoratebuff", distance: 4 },
                endSound: { id: "buffEnd", distance: 3 }
            },
            custom: [[t => 10 + 5 * t, "% increased damage"]]
        }),
        pm = new Tu({
            id: 69,
            icon: "skills/27",
            fx: {
                stick: Ru.pathfinding,
                startSound: { id: "archer/pathfindcast", distance: 5 }
            },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(
                    15,
                    Math.round((10 + 13 * t.level) * t.diminishFactor)
                );
            }
        }),
        fm = new Tu({
            id: 71,
            passive: !0,
            icon: "skills/29",
            custom: [
                [
                    t => 60 + 15 * t,
                    "% per stack as additional damage over 10 seconds"
                ]
            ],
            afterDamageEnemy: { 9: (t, e, s) => {} }
        }),
        gm = new Tu({
            id: 72,
            type: 1,
            maxStacks: 3,
            tags: new Set([3, 1]),
            icon: "skills/29",
            fx: { stick: Ru.poisonarrows, color: [0.1, 1, 0.3, 0.3] },
            statsStatic: (t, e) => {
                e.maxStat(25, 30);
            },
            intervalDuration: 1.5,
            onInterval: (t, e, s) => ({
                id: 29,
                mode: 1,
                caster: t.caster,
                target: e.id,
                dmg: t.level * t.stacks,
                type: 1,
                noDaze: !0
            })
        }),
        vm = new Tu({
            id: 82,
            maxStacks: 4,
            icon: "skills/31",
            instantCast: new Set([31]),
            beforeDamageEnemy: { 31: (t, e, s, i) => {} }
        }),
        ym = new Tu({
            id: 51,
            passive: !0,
            icon: "skills/10",
            custom: [
                [t => 2 + 1 * t, " Jumps"],
                [t => 35 + 5 * t, "% damage per Jump"]
            ],
            afterDamageEnemy: { 9: (t, e, s) => {} }
        }),
        bm = new Tu({
            id: 78,
            icon: "skills/38",
            fx: { stick: Ru.snipe },
            statsStatic: (t, e) => {
                e.addStat(15, 30);
            },
            instantCast: new Set([9]),
            onCast: { 9: (t, e) => {} }
        }),
        wm = new Tu({
            id: 83,
            passive: !0,
            incapacitated: !0,
            statsOverride: (t, e) => {
                e.stat.set(15, 400);
            },
            movementOverride: (t, e, s, i, n) => {
                0 === i.steer[0] && 0 === i.steer[1] && i.setSteer([0, 1]);
            }
        }),
        xm = new Tu({
            id: 49,
            passive: !0,
            icon: "skills/8",
            statsConvert: [
                [2, 0.4, 10],
                [2, 0.4, 11]
            ]
        }),
        km = new Tu({
            id: 67,
            icon: "skills/25",
            fx: {
                stick: Ru.temporaldilation,
                startSound: { id: "archer/timedilationcast", distance: 5 }
            },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(
                    16,
                    Math.round((20 + 25 * t.level) * t.diminishFactor)
                );
            }
        }),
        $m = new Tu({
            id: 64,
            icon: "skills/22",
            fx: {
                stick: Ru.arcticaura,
                startSound: { id: "mage/arcticauracast", distance: 5 }
            },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(
                    14,
                    Math.round((10 + 15 * t.level) * t.diminishFactor)
                );
            }
        }),
        Sm = new Tu({
            id: 88,
            type: 1,
            tags: new Set([6]),
            incapacitated: !0,
            icon: "skills/deepFrozen",
            fx: { stick: Ru.deepfrozen, color: [0.1, 0.9, 0.8, 0.9] },
            statsStatic: (t, e) => {
                e.maxStat(25, 100);
            },
            multiplyIncomingDamage: { 4: t => 1.5, 15: t => 1.5 }
        }),
        Mm = new Tu({
            id: 66,
            icon: "skills/24",
            fx: {
                stick: Ru.enchantment,
                startSound: { id: "mage/enchantcast", distance: 5 }
            },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(10, Math.floor(2 + 1.5 * t.level * t.diminishFactor)),
                    e.addStat(
                        11,
                        Math.floor(3 + 3.5 * t.level * t.diminishFactor)
                    );
            }
        }),
        Em = new Tu({
            id: 96,
            icon: "skills/extraBolt",
            fx: { stickOffset: 0.15, stick: Ru.extraBoltBuff }
        }),
        Cm = new Tu({
            id: 55,
            type: 1,
            tags: new Set([4]),
            icon: "skills/14",
            fx: { stick: Ru.icenovaroot, color: [0.7, 0.7, 1, 0.4] },
            statsStatic: (t, e) => {
                e.maxStat(25, 100);
            },
            addIncomingCrit: {
                4: t => 10 + 30 * t.level,
                15: t => 20 + 30 * t.level
            },
            intervalDuration: 1.5,
            onInterval: (t, e, s) => ({
                id: 14,
                mode: 1,
                caster: t.caster,
                target: e.id,
                dmg: s.stats.getDamageRoll() * (0.5 + 0.4 * t.level) * 0.3,
                type: 1,
                noDaze: !0
            })
        }),
        Tm = new Tu({
            id: 86,
            type: 1,
            tags: new Set([3]),
            maxStacks: 4,
            icon: "skills/frozenBuff",
            fx: { stick: Ru.frozen, color: [0.1, 0.1, 0.8, 0.5] },
            statsStatic: (t, e) => {
                e.maxStat(25, 20);
            }
        }),
        _m = new Tu({
            id: 57,
            icon: "skills/16",
            fx: {
                stick: Ru.hypothermicBuff,
                stickOffset: 0.5,
                startSound: { id: "mage/hypothermicCast", distance: 4 },
                endSound: { id: "buffEnd", distance: 3 }
            },
            statsStatic: (t, e) => {
                e.addStat(16, 200 + 40 * t.level),
                    e.addStat(23, 18 + 4 * t.level);
            }
        }),
        Pm = new Tu({ id: 87, passive: !0 }),
        Um = new Tu({
            id: 65,
            icon: "skills/23",
            fx: { stickOffset: 0.15, stick: Ru.iceBlockBuff }
        }),
        Im = new Tu({ id: 56, passive: !0 }),
        zm = new Tu({
            id: 48,
            passive: !0,
            icon: "skills/8",
            statsConvert: [
                [3, 0.4, 10],
                [3, 0.4, 11]
            ]
        }),
        Am = new Tu({
            id: 80,
            type: 1,
            icon: "skills/dazedBuff",
            fx: { stick: Ru.dazed, stickOffset: 0.5 },
            statsStatic: (t, e) => {
                e.maxStat(25, 35);
            }
        });
    const Dm = {
        death: { id: "blob/death" },
        hurt: { id: "blob/hurt", rnd: 1 },
        melee: { delay: 0.3, distance: 3, id: "blob/attack", rnd: 2 },
        aggro: { id: "blob/aggro", rnd: 1 },
        idle: { id: "blob/idle", rnd: 2 }
    };
    class Rm extends Ju {
        constructor(t) {
            (t.sounds = Dm),
                super(t),
                (this.chest = this.mesh(
                    this,
                    t.meshHead || null,
                    t.colPrim || Pu.greysteel
                )),
                xi(this.chest.scale, 0.6, 0.6, 0.6),
                (this.chest2 = this.mesh(
                    this.chest,
                    t.meshBack || null,
                    t.colSec || Pu.woodbrown
                )),
                xi(this.chest2.scale, 1.2, 1.2, 1.4),
                xi(this.chest2.position, 0, 0.1, -1),
                (this.eyes = this.mesh(
                    this.chest,
                    t.meshEyes || "monsterparts/spiderEyes.ho",
                    t.colEyes || Pu.greysteel,
                    null,
                    vl.multimeshSimple
                )),
                xi(this.eyes.position, 0, -0.05, 0.52),
                xi(this.eyes.scale, 0.6, 0.6, 0.6),
                (this.legs = []),
                (this.legsize = t.legsize || 1);
            for (let e = 0; e < 2; ++e) {
                const e = this.mesh(
                    this,
                    "monsterparts/crawlerLegs.ho",
                    t.colSec || Pu.woodbrown,
                    null,
                    t.shader
                );
                (e.data.lod = 1.5), this.legs.push(e);
            }
            this.chestOffset = t.chestOffset || 0;
        }
        tickFixed(t, e, s) {
            this.tickPushBack(t, e, s);
        }
        tickParts(t, e, s) {
            if (this.walking && !this.falling) {
                this.speed =
                    (this.entity.speed *
                        (-1 === this.entity.steer[1] ? -1.2 : 1) *
                        0.8) /
                    (0.4 + 0.6 * this.entity.size + this.legsize);
                const e = Math.cos(this.cycleRad);
                this.legs[0].rotation.set(
                    0,
                    0.2 * this.cycleSin,
                    0.2 * this.cycleSin
                ),
                    xi(this.legs[0].position, 0, 0.3 * Math.abs(e) + 0.2, 0),
                    this.legs[1].rotation.set(0, Math.PI + 0.2 * e, 0.2 * e),
                    xi(
                        this.legs[1].position,
                        0,
                        0.3 * Math.abs(this.cycleSin),
                        0
                    ),
                    ki(this.legs[0].scale, this.legsize),
                    ki(this.legs[1].scale, this.legsize),
                    xi(
                        this.chest.position,
                        0.01 * this.cycle(0.3),
                        0.02 * this.cycleSin + this.chestOffset,
                        0
                    ),
                    xi(
                        this.chest.rotation,
                        0,
                        0.01 * this.cycleSin,
                        0.01 * Math.sin(2 * this.cycleRad)
                    ),
                    this.entity.target > 0 &&
                        Math.random() < 0.3 &&
                        this.fraction(0.1, t) &&
                        Jr({
                            id: "crawler/crawlerMove",
                            loop: !1,
                            transform: this,
                            distance: Math.min(1 + 3 * this.scale[1], 10),
                            force: this.scale[1] > 2
                        });
            } else if (((this.speed = 0.5), this.currentAnim)) {
                const t = la.easeOutExpo(this.currentAnim.fract ** 3);
                switch (this.currentAnim.id) {
                    case 0: {
                        const e = Math.sin(6.28 * t - 3.14);
                        xi(
                            this.chest.position,
                            0,
                            Math.max(0, -e) + this.chestOffset,
                            0.5 * e
                        ),
                            this.legs.forEach((t, s) => {
                                const i = 0 == s ? 1 : -1,
                                    n = 1 == s ? Math.PI : 0;
                                t.rotation.set(
                                    i * Math.min(e, 0),
                                    n + 0.1 * e * i,
                                    0
                                ),
                                    xi(t.position, 0, Math.max(0, -e), 0.5 * e),
                                    xi(
                                        t.scale,
                                        this.legsize,
                                        this.legsize * (1 + 0.2 * e),
                                        this.legsize
                                    );
                            });
                        break;
                    }
                }
            } else
                xi(
                    this.chest.position,
                    0,
                    0.1 * this.cycle(-0.1) + this.chestOffset,
                    0
                ),
                    this.legs.forEach((t, e) => {
                        const s = this.cycle(0 == e ? 0 : 0.5);
                        t.rotation.set(
                            0,
                            1 == e ? Math.PI : 0,
                            this.falling ? 0.4 : 0
                        ),
                            xi(t.position, 0, 0.1 * s, 0),
                            xi(
                                t.scale,
                                (this.falling ? 0.6 : 1) * this.legsize,
                                this.legsize * (1 + 0.2 * s),
                                this.legsize
                            );
                    });
            this.chest.rotation.set(
                this.chest.rotation[0] - 5 * this.pushBack[1],
                this.chest.rotation[1],
                this.chest.rotation[2] + 5 * this.pushBack[0]
            );
        }
        mountPosition(t) {
            Ii(t, [0, 0.8, -1], this.chest.VN);
        }
        mountLegs(t, e) {
            t.rotation.set(-0.9, e ? 0.2 : -0.2, e ? 0.4 : -0.4),
                xi(t.position, e ? 0.6 : -0.6, -0.4, 0.5);
        }
    }
    const Bm = t => {
            ki(t.chest.scale, 0.8),
                ki(t.chest2.scale, 1.1),
                xi(t.chest2.position, 0, 0.2, -0.8),
                t.chest2.rotation.set(0, 3.14, 0),
                xi(t.eyes.position, 0, -0.2, 0.8),
                ki(t.eyes.scale, 0.6);
        },
        Fm = [
            [30, 1e4, 50, hm, {}],
            [30, 2e4, 50, Rm, {}],
            [
                30,
                5e4,
                80,
                Rm,
                {
                    colEyes: oa(11332842, 0),
                    colPrim: oa(4772165, -0.2),
                    colSec: oa(1351204, -0.2)
                }
            ],
            [
                30,
                5e4,
                80,
                Rm,
                {
                    colEyes: oa(16751284, 0),
                    colPrim: oa(15737892, 0.5),
                    colSec: oa(15737892, 0.5)
                }
            ],
            [
                30,
                5e4,
                95,
                Rm,
                {
                    colEyes: oa(14292553, 0),
                    colPrim: oa(4075311, 0.1),
                    colSec: oa(1970198, 0.1),
                    legsize: 0.5,
                    post: t => {
                        ki(t.chest.scale, 0.8);
                    }
                }
            ],
            [
                30,
                5e4,
                90,
                Rm,
                {
                    colEyes: oa(2029122, 0),
                    colPrim: oa(2565674, 0.3),
                    colSec: oa(2236197, 0.3),
                    legsize: 1.4,
                    post: t => {
                        xi(t.chest.scale, 0.6, 0.6, 1),
                            t.chest2.rotation.set(0.5, 0, 0);
                    }
                }
            ],
            [
                30,
                5e4,
                80,
                hm,
                {
                    colEyes: oa(12825266, 0),
                    colPrim: oa(11313312, 0.1),
                    colSec: oa(8221555, 0.1),
                    meshHead: "rocks/rock_02.ho",
                    post: t => xi(t.eyes.position, 0, 0, 0.75)
                }
            ],
            [
                30,
                5e4,
                90,
                hm,
                {
                    colEyes: oa(15880973, 0),
                    colPrim: Pu.fireorange,
                    colSec: Pu.fireorange,
                    meshHead: "rocks/rock_02.ho",
                    post: t => {
                        xi(t.eyes.position, 0, 0, 0.75);
                        const e = cc(Ru.burning, void 0, t);
                        e && t.effects.push(e);
                    }
                }
            ],
            [
                30,
                5e4,
                95,
                hm,
                {
                    colEyes: oa(12451327, 0),
                    colPrim: oa(3950066, -0.4),
                    colSec: oa(3525854, -0.4),
                    meshHead: "monsterparts/wyrmhead.ho",
                    meshEyes: "monsterparts/wyrmEyes.ho",
                    post: t => {
                        const e = cc(Ru.etherwyrm, void 0, t.blobs[0]);
                        e && t.effects.push(e);
                    }
                }
            ],
            [
                30,
                5e4,
                95,
                hm,
                {
                    colEyes: oa(2747996, 0),
                    colPrim: oa(1907231, 0.4),
                    colSec: oa(2293580, -0.8),
                    meshHead: "monsterparts/wyrmhead.ho",
                    meshEyes: "monsterparts/wyrmEyes.ho",
                    post: t => {
                        const e = cc(Ru.shadowwyrm, void 0, t.blobs[0]);
                        e && t.effects.push(e);
                    }
                }
            ],
            [
                30,
                5e4,
                80,
                Rm,
                {
                    colEyes: oa(16758891, 0),
                    colPrim: oa(15448667, 0.1),
                    colSec: oa(11370036, 0.1),
                    legsize: 0.6,
                    meshHead: "monsterparts/wyrmhead.ho",
                    meshBack: "monsterparts/wyrmhead.ho",
                    meshEyes: "monsterparts/wyrmEyes.ho",
                    chestOffset: 0.5,
                    post: Bm
                }
            ],
            [
                30,
                5e4,
                95,
                Rm,
                {
                    colEyes: oa(16777215, 0),
                    colPrim: Pu.darksteel,
                    colSec: Pu.gold,
                    legsize: 0.6,
                    meshHead: "monsterparts/wyrmhead.ho",
                    meshBack: "monsterparts/wyrmhead.ho",
                    meshEyes: "monsterparts/wyrmEyes.ho",
                    chestOffset: 0.5,
                    post: Bm
                }
            ],
            [
                30,
                5e4,
                95,
                Rm,
                {
                    colEyes: oa(16750598, 0),
                    colPrim: oa(13177876, -0.6),
                    colSec: oa(16721931, -0.7),
                    legsize: 1.1,
                    meshHead: "misc/misc_bones_skull.ho",
                    meshBack: "monsterparts/wyrmhead.ho",
                    meshEyes: "monsterparts/wyrmEyes.ho",
                    post: t => {
                        ki(t.chest2.scale, 0.7),
                            xi(t.eyes.position, 0, -0.1, 0.55),
                            ki(t.eyes.scale, 0.6);
                        const e = cc(Ru.burning, void 0, t);
                        e && t.effects.push(e);
                    }
                }
            ],
            [
                30,
                5e4,
                85,
                hm,
                {
                    colEyes: Pu.fireorange,
                    colPrim: Pu.darksteel,
                    colSec: Pu.fireorange
                }
            ],
            [
                30,
                5e4,
                95,
                hm,
                {
                    colEyes: Pu.ice,
                    colPrim: oa(3980543, -0.6),
                    colSec: Pu.ice,
                    post: t => {
                        const e = cc(Ru.arcticaura, void 0, t.blobs[1]);
                        e && (t.effects.push(e), (e.position[1] = -0.5));
                    }
                }
            ]
        ].map(t => ({
            level: t[0],
            goldValue: t[1],
            quality: t[2],
            visual: t[3],
            visualData: t[4]
        }));
    var Nm = new Tu({
            id: 79,
            breakOnCast: !0,
            icon: "skills/39",
            fx: {
                mount: t => Fm[t.data[0]].visual,
                mountVisualData: t => Fm[t.data[0]].visualData,
                startSound: {
                    id: "shaman/spiritAnimalCast",
                    distance: 5,
                    dynamic: !0
                },
                endSound: { id: "buffEnd", distance: 5, dynamic: !0 }
            },
            statsStatic: (t, e) => {
                e.addStat(15, 60);
            }
        }),
        Lm = new Tu({
            id: 90,
            icon: "skills/postsummon",
            fx: { stick: Ru.postsummon },
            diminish: !0,
            statsStatic: (t, e) => {
                e.addStat(15, 20);
            }
        }),
        Om = ["potionhp", "potionMp"].map(
            (t, e) =>
                new Tu({
                    id: [84, 85][e],
                    maxStacks: 1,
                    icon: "skills/" + t,
                    intervalHaste: !1,
                    intervalDuration: 0.5,
                    onInterval: (t, s, i) => ({
                        id: 100,
                        mode: [2, 3][e],
                        caster: t.caster,
                        target: s.id,
                        heal: 1 == e ? void 0 : t.level,
                        mprec: 0 == e ? void 0 : t.level,
                        nocrit: !0
                    })
                })
        ),
        qm = new Tu({
            id: 81,
            passive: !0,
            statsStatic: (t, e) => {
                e.addStat(15, 100), e.addStat(12, 1e4);
            }
        }),
        Hm = new Tu({
            id: 74,
            type: 1,
            incapacitated: !0,
            visualIncapacitation: !0,
            icon: "skills/stunBuff",
            fx: { stick: Ru.stunned, stickOffset: 0.5 },
            movementOverride: (t, e, s, i, n) => {}
        });
    const Wm = {
            postsummon: Lm,
            suddendeath: new Tu({
                id: 89,
                maxStacks: 99,
                icon: "skills/suddenDeath",
                statsStatic: (t, e) => {
                    e.maxStat(26, t.stacks);
                }
            }),
            hppotion: Om[0],
            mppotion: Om[1],
            stun: Hm,
            mount: Nm,
            daze: Am,
            resetting: qm
        },
        Zm = {
            temperBoostBuff: Gu,
            temperBuff: Vu,
            tauntDebuff: ju,
            chargeBuff: Lu,
            warcryBuff: Yu,
            courageBuff: Ou,
            armorreinforcementBuff: _u,
            crescentBleedDebuff: Hu,
            crescentBleedBuff: qu,
            healOnBlockBuff: Wu,
            blockBuff: Fu,
            blockBuffEnrage: Nu,
            specializationWarrior: Zu
        },
        jm = {
            plaguespreaderBuff: am,
            plaguespreaderBuffPassive: rm,
            agonizeDebuff: em,
            spiritanimalBuff: dm,
            caninehowlBuff: sm,
            manaBuff: nm,
            revitalizeBuff: om,
            specializationShaman: lm,
            decayBuff: im
        },
        Gm = {
            extraboltBuff: Em,
            deepFrozenBuff: Sm,
            iceboltBuff: Pm,
            frozenBuff: Tm,
            enchantmentBuff: Mm,
            arcticauraBuff: $m,
            iceshieldBuff: Um,
            icicleBuff: Im,
            frostnovaBuff: Cm,
            specializationMage: zm,
            hypothermicBuff: _m
        },
        Vm = {
            snipeMoveBuff: wm,
            preciseshotBuff: vm,
            snipeBuff: bm,
            poisonarrowsBuff: fm,
            poisonarrowsDebuff: gm,
            temporaldilationBuff: km,
            pathfindingBuff: pm,
            cranialpuncturesBuff: um,
            specializationArcher: xm,
            serpentArrowsBuff: ym,
            invigorateBuff: mm
        },
        Ym = new Map();
    [Wm, Zm, jm, Gm, Vm].forEach(t => {
        for (const e in t) Ym.set(t[e].id, t[e]);
    });
    class Jm {
        constructor(t) {
            (this.entity = t),
                (this.buffs = new Map()),
                (this.casters = new Map()),
                Eu.forEach(t => {
                    this[t] = new Set();
                }),
                (this.tags = new Map());
            for (let t = 0; t < 8; ++t) this.tags.set(t, new Set());
        }
        tick(t, e, s) {}
        setBuff(t, e, s, i, n, a) {
            s <= 0 && console.error("buff with zero or less stacks");
            const r = this.buffs.get(t) || this.buffs.set(t, new Map()).get(t),
                o = r.get(e) || {};
            if (
                ((o.caster = e),
                (o.id = t),
                (o.level = a),
                (o.stacks = s),
                (o.logic = Ym.get(t)),
                (o.diminish = 0),
                (o.diminishFactor = 0),
                (o.timer = new Al(i, n)),
                void 0 !== o.logic.intervalDuration)
            ) {
                const t = Wn.entity(e);
                o.interval = new Al(
                    i,
                    o.logic.intervalHaste && void 0 !== t
                        ? o.logic.intervalDuration / Mu(t.stats.getStat(16))
                        : o.logic.intervalDuration
                );
            }
            return (
                r.set(e, o),
                o.logic.onSet(o, e, this),
                (
                    this.casters.get(e) || this.casters.set(e, new Map()).get(e)
                ).set(t, o),
                o.logic.diminish && this.updateDiminish(t),
                o
            );
        }
        removeBuff(t, e) {
            const s = this.buffs.get(t);
            if (s) {
                const i = s.get(e);
                if (i) {
                    i.logic.onRemove(i, e, this),
                        s.delete(e),
                        0 === s.size && this.buffs.delete(t);
                    const n = this.casters.get(e);
                    return (
                        n.delete(t),
                        0 === n.size && this.casters.delete(e),
                        i.logic.diminish && this.updateDiminish(t),
                        i
                    );
                }
            }
        }
        updateDiminish(t) {
            const e = this.buffs.get(t);
            e &&
                e.forEach((t, s) => {
                    (t.diminish = e.size),
                        (t.diminishFactor = 4 / (3 + e.size));
                });
        }
        clear(t) {
            this.buffs.forEach((e, s) => {
                e.forEach((e, i) => {
                    e.logic.passive == t && this.removeBuff(s, i);
                });
            });
        }
        clearTempBuffs() {
            this.clear(!1);
        }
        clearPassiveBuffs() {
            this.clear(!0);
        }
        onDeath() {
            this.clearTempBuffs();
        }
    }
    class Xm extends Jm {
        constructor(t) {
            super(t);
        }
        setBuff(t, e, s, i, n, a, r, o) {
            const l = super.setBuff(t, e, s, i, n, a);
            (l.data = o),
                (this.entity.uiFrameDirty = !0),
                1 !== r ||
                    l.logic.fx.norefresh ||
                    (void 0 !== l.fx && this.removeBuffEffect(l),
                    l.logic.fx.startSound &&
                        Jr({
                            ...l.logic.fx.startSound,
                            transform: this.entity.transform
                        })),
                !l.fx &&
                    this.entity.transform &&
                    l.diminish < 2 &&
                    ((l.fx = {}),
                    l.logic.fx.visual &&
                        this.entity.transform.constructor !==
                            l.logic.fx.visual &&
                        this.changeEntityVisual(l.logic.fx.visual),
                    l.logic.fx.mount &&
                        this.changeEntityMount(
                            l.logic.fx.mount(l),
                            l.logic.fx.mountVisualData(l)
                        ),
                    l.logic.fx.stick &&
                        ((l.fx.stick = cc(
                            l.logic.fx.stick,
                            void 0,
                            this.entity.transform
                        )),
                        l.logic.fx.stickOffset &&
                            (l.fx.stick.position[1] +=
                                (this.entity.height * l.logic.fx.stickOffset) /
                                0.7),
                        0 === r &&
                            ((l.fx.stick.data.time = Math.max(
                                0,
                                l.timer.passed(Wn.time)
                            )),
                            (l.fx.stick.data.frame = Math.floor(
                                l.fx.stick.time / 0.016
                            ))),
                        (l.fx.stick.data.buff = l)),
                    l.logic.fx.color &&
                        this.entity.transform.addColor(l.logic.fx.color));
        }
        removeBuff(t, e) {
            const s = super.removeBuff(t, e);
            s &&
                ((this.entity.uiFrameDirty = !0),
                this.removeBuffEffect(s),
                s.logic.fx.endSound &&
                    Jr({
                        ...s.logic.fx.endSound,
                        transform: this.entity.transform
                    }));
        }
        removeBuffEffect(t) {
            if (void 0 !== t.fx) {
                if (t.diminish > 1) {
                    const e = this.buffs.get(t.id).values();
                    let s = e.next().value;
                    s === t && (s = e.next().value),
                        (s.fx = t.fx),
                        t.fx.stick && (t.fx.stick.data.buff = s);
                } else
                    t.fx.stick &&
                        ((t.fx.stick.data.remove = !0),
                        t.fx.stick.setParent(null),
                        (t.fx.stick = void 0)),
                        t.logic.fx.visual &&
                            this.entity.transform.constructor ===
                                t.logic.fx.visual &&
                            this.changeEntityVisual(),
                        t.logic.fx.mount && this.changeEntityMount(),
                        t.logic.fx.color &&
                            this.entity.transform.removeColor(t.logic.fx.color);
                t.fx = void 0;
            }
        }
        changeEntityVisual(t) {
            const e = this.entity.transform;
            this.entity.remakeTransform(t),
                (this.entity.transform.animQueue = e.animQueue),
                this.buffs.forEach(t => {
                    t.forEach(t => {
                        t.fx &&
                            void 0 !== t.fx.stick &&
                            t.fx.stick.setParent(this.entity.transform);
                    });
                });
        }
        changeEntityMount(t, e) {
            this.entity.mount &&
                (this.entity.mount.onRemove(), (this.entity.mount = void 0)),
                t &&
                    ((this.entity.mount = new t({ entity: this.entity, ...e })),
                    void 0 !== e.post && e.post(this.entity.mount));
        }
    }
    class Qm {
        constructor(t, e) {
            (this.data = t),
                (this.bounds = e),
                (this.gl = 0),
                (this.gr = 0),
                (this.gu = 0),
                (this.gd = 0),
                (this.l = 0),
                (this.r = 0),
                (this.t = 0),
                (this.b = 0),
                (this.u = 0),
                (this.d = 0);
        }
        update(t, e, s, i, n) {
            return (this.wU = t), (this.rot = e), this.aabb(), this;
        }
        onRemove() {}
    }
    class Km extends Qm {
        constructor(t, e, s, i, n, a) {
            super(t, e), this.update(i, n, a);
        }
        static get type() {
            return 1;
        }
        get type() {
            return this.constructor.type;
        }
        aabb() {
            (this.l = na(this.wU[0] - this.radius, 0, this.bounds)),
                (this.r = na(this.wU[0] + this.radius, 0, this.bounds)),
                (this.t = na(this.wU[1] + 0.5 * this.height, 0, this.bounds)),
                (this.b = na(this.wU[1] - 0.5 * this.height, 0, this.bounds)),
                (this.u = na(this.wU[2] - this.radius, 0, this.bounds)),
                (this.d = na(this.wU[2] + this.radius, 0, this.bounds));
        }
        update(t, e, s) {
            return (
                (this.height = s),
                (this.radius = e),
                super.update(t, 0, e, s, e)
            );
        }
    }
    class tp extends Qm {
        constructor(t, e, s, i, n, a, r) {
            super(t, e), this.update(i, s, n, a, r);
        }
        static get type() {
            return 16;
        }
        get type() {
            return this.constructor.type;
        }
        aabb() {
            const t = Math.abs(Math.sin(this.rot)),
                e = Math.abs(Math.cos(this.rot)),
                s = t * this.Jw + e * this.width,
                i = t * this.width + e * this.Jw;
            (this.l = na(this.wU[0] - 0.5 * s, 0, this.bounds)),
                (this.r = na(this.wU[0] + 0.5 * s, 0, this.bounds)),
                (this.t = this.wU[1] + 0.5 * this.height),
                (this.b = this.wU[1] - 0.5 * this.height),
                (this.u = na(this.wU[2] - 0.5 * i, 0, this.bounds)),
                (this.d = na(this.wU[2] + 0.5 * i, 0, this.bounds)),
                (this.local = Ai([0, 0, 0], this.wU, -this.rot)),
                (this.ll = this.local[0] - 0.5 * this.width),
                (this.lr = this.local[0] + 0.5 * this.width),
                (this.lu = this.local[2] - 0.5 * this.Jw),
                (this.ld = this.local[2] + 0.5 * this.Jw);
        }
        update(t, e, s, i, n) {
            return (
                (this.width = s),
                (this.height = i),
                (this.Jw = n),
                super.update(t, e, s, i, n)
            );
        }
    }
    const ep = {
            posXZ: { type: 2 },
            rot: { type: 1 },
            steer: { type: 0 },
            jump: { type: 0 },
            entityType: { type: 0 }
        },
        sp = {},
        ip = {};
    let np = 0;
    for (const t in ep) (ip[np] = ep[t].type), (sp[t] = np++);
    class ap {
        constructor(t) {
            (this.rot = 0),
                (this.wU = [0, 0, 0]),
                (this.size = t.size),
                (this.name = t.name);
        }
        async init(t) {
            this.name = t.name || "";
        }
        preFixed(t, e, s) {}
        tickFixed(t, e, s) {}
        postFixed(t, e, s) {}
        preDelta(t, e, s) {}
        tickDelta(t, e, s) {}
        postDelta(t, e, s) {}
        onRemove() {}
        setXZPos(t) {
            (this.wU[0] = t[0]), (this.wU[2] = t[1]);
        }
        setRot(t) {
            this.rot = ua(t);
        }
        compareDelta(t, e, s) {
            let i = !1;
            for (const [n, a] of t) {
                e.get(n) !== a ? (e.set(n, a), (i = !0)) : s && t.delete(n);
            }
            return i;
        }
        parseDelta(t, e, s) {
            switch (t) {
                case sp.posXZ:
                    this.setXZPos(Gc(e, 768));
                    break;
                case sp.rot:
                    this.setRot(qc(e, ha));
                    break;
                case sp.steer: {
                    const t = Zc(e);
                    this.setSteer([t[0] - 1, t[1] - 1]);
                    break;
                }
                case sp.jump:
                    this.setJump(e);
            }
        }
        onTarget(t) {
            return !0;
        }
        setName(t) {
            this.name = t;
        }
        clampWorldPos() {
            Wn.clampV3(this.wU),
                (this.wU[1] = Math.max(
                    this.wU[1],
                    this.getWorldYBody(Wn, this.wU[0], this.wU[2])
                ));
        }
        getWorldYBody(t, e, s) {
            return t.getHeight(e, s);
        }
        distanceV2(t) {
            return Un(ta, t, va(ea, this.wU)), An(ta);
        }
        distanceV3(t) {
            return Si(Gn, t, this.wU), bi(Gn);
        }
        squaredDistanceV2(t) {
            return (
                Un(ta, t, va(ea, this.wU)),
                (function (t) {
                    const e = t[0],
                        s = t[1];
                    return e * e + s * s;
                })(ta)
            );
        }
        squaredDistance(t) {
            return (
                Si(Gn, t, this.wU),
                (function (t) {
                    const e = t[0],
                        s = t[1],
                        i = t[2];
                    return e * e + s * s + i * i;
                })(Gn)
            );
        }
        rotationToV2(t) {
            return Un(ta, t, va(ea, this.wU)), Dn(ta, ta), ma(ta);
        }
        rotationToV3(t) {
            return Si(Gn, t, this.wU), _i(Gn, Gn), pa(Gn);
        }
    }
    class rp extends ap {
        constructor(t) {
            super(t),
                (this.hudPos = [0, 0, 0]),
                (this.netDeletion = new Al(0, 0));
        }
        onRemove() {
            this.transform && this.transform.onRemove();
        }
    }
    const op = (t, e) => ("function" == typeof t ? t(e) : t);
    class lp {
        constructor(t) {
            (this.id = t.id),
                (this.cd = void 0 !== t.cd ? t.cd : 1),
                (this.cost = t.cost || {}),
                (this.targetMode = t.targetMode || 0),
                (this.onCast = t.onCast),
                (this.onPermanent = t.onPermanent),
                (this.range = t.range || 0),
                (this.graceRange = this.range + Math.min(0.2 * this.range, 10)),
                (this.auto = t.auto || !1),
                (this.engineOnly = t.engineOnly || !1),
                (this.minlevel = t.minlevel || 0),
                (this.castLen = t.castLen || 0),
                (this.gcd = void 0 !== t.gcd ? t.gcd : 1),
                (this.custom = t.custom),
                (this.skilllevels = Math.min(5, t.skilllevels || 5)),
                (this.goldValue = t.goldValue || 0),
                (this.noReward = t.noReward || !1),
                (this.outOfCombat = t.outOfCombat || !1),
                (this.pvpBoundsAdd = t.pvpBoundsAdd || 0),
                (this.ignoreGcd = t.ignoreGcd || !1),
                (this.disablingBuffs = t.disablingBuffs || []),
                (this.skillpoints =
                    void 0 !== t.skillpoints ? t.skillpoints : 1);
        }
        can(t, e, s = 0, i) {
            if (this.outOfCombat && !t.stats.combatTimer.done(Wn.time))
                return 11;
            if (
                this.cost.resources &&
                !this.cost.resources.reduce(
                    (s, i) => s && t.stats.getResource(i[0]) >= op(i[1], e),
                    !0
                )
            )
                return 5;
            if (1 !== this.targetMode) {
                let e = Wn.getEntityById(s);
                const n = void 0 === e || e.stats.alive,
                    a = void 0 === e ? -1 : t.hostility(e);
                if (4096 === this.targetMode) {
                    if ((-1 === a || 0 === a) && n) return 3;
                    if (!t.canCombatInteract(e)) return 13;
                } else if (256 === this.targetMode) {
                    if ((-1 === a || 0 !== a) && n) return 4;
                } else if (16 === this.targetMode) e = t;
                else if (17 === this.targetMode && (void 0 === e || e === t))
                    return 3;
                if (void 0 !== e && !e.stats.alive) return 10;
                if (
                    e &&
                    s !== t.id &&
                    e !== t &&
                    this.range > 0 &&
                    !t.combatRangeCheck(e, i ? this.range : this.graceRange)
                )
                    return 6;
            }
            return this.disablingBuffs.some(e => t.buffs.tags.get(e).size > 0)
                ? 12
                : 0;
        }
    }
    class cp extends lp {
        constructor(t) {
            super(t),
                (this.fx = t.fx || {}),
                (this.autoSkillbar = !1 !== t.autoSkillBar);
        }
    }
    const hp = (t, e, s, i) => ({
            id: t,
            minlevel: s,
            engineOnly: !1,
            cd: 0,
            custom: i,
            autoSkillBar: !1,
            onPermanent: (t, s) => ({
                id: e,
                mode: 4,
                caster: t.id,
                target: t.id,
                duration: -1,
                stacks: 1,
                level: s
            })
        }),
        dp = (t, e, s, i, n, a, r) => ({
            id: t,
            targetMode: 16,
            minlevel: s,
            cd: n,
            cost: { resources: a },
            fx: r,
            onCast: (t, s, n) => ({
                id: e,
                mode: 4,
                stacks: 1,
                duration: i,
                caster: t.id,
                target: t.id,
                aoe: { faction: !0, party: !0, circleRadius: 30 },
                level: s
            })
        }),
        up = (t, e, s, i, n, a, r, o = 5, l) => ({
            id: t,
            targetMode: 256,
            range: 25,
            minlevel: s,
            cd: n,
            castLen: i,
            cost: { resources: r },
            fx: l,
            onCast: (t, s, i) => ({
                id: e,
                mode: o,
                stacks: 1,
                caster: t.id,
                target: i,
                refresh: !0,
                duration: a,
                level: s
            })
        }),
        mp = (t, e, s = 0, i = !0, n, a) => ({
            id: t,
            targetMode: 16,
            cd: e,
            gcd: 0,
            ignoreGcd: !0,
            castLen: s,
            engineOnly: !0,
            outOfCombat: n,
            fx: a
        });
    var pp = new cp(hp(21, 63, 1)),
        fp = new cp({
            id: 2,
            targetMode: 16,
            minlevel: 5,
            cd: 30,
            gcd: 0,
            cost: { resources: [[7, t => 3 + 5 * t]] },
            onCast: (t, e, s) => ({
                id: 44,
                mode: 4,
                stacks: 1,
                duration: 9,
                caster: t.id,
                target: t.id,
                level: e
            })
        });
    const gp = t => 0.7 + 0.2 * t;
    var vp = new cp({
            id: 33,
            targetMode: 17,
            skilllevels: 1,
            minlevel: 11,
            cd: 15,
            range: 25,
            disablingBuffs: [4],
            cost: { resources: [[7, t => 12]] },
            custom: [
                [gp, "s stunned at min range"],
                [t => gp(t) + 2, "s stunned at max range"]
            ],
            onCast: (t, e, s) => {}
        }),
        yp = new cp(dp(20, 62, 15, 300, 150, [[7, t => 8 * t]])),
        bp = new cp({
            id: 18,
            cd: 0,
            minlevel: 8,
            autoSkillBar: !1,
            fx: {
                effectDirImpact: [Ru.meleeSlash],
                impactSound: {
                    distance: 5,
                    id: "warrior/bleedImpact",
                    rndDelay: !0,
                    delay: 0.3
                }
            },
            onPermanent: (t, e) => ({
                id: 59,
                mode: 4,
                caster: t.id,
                target: t.id,
                duration: -1,
                stacks: 1,
                level: e
            })
        }),
        wp = new cp({
            id: 3,
            targetMode: 1,
            minlevel: 3,
            cd: 6,
            cost: { resources: [[7, t => 2 + 2 * t]] },
            fx: {
                animCast: {
                    id: 4,
                    dur: 0.8,
                    sounds: [
                        { delay: 0.1, distance: 6, id: "warrior/crescent" }
                    ]
                },
                impactSound: t => ({
                    delay: 0.1 + 0.3 * Math.random(),
                    distance: 4,
                    id: "warrior/crescent_hit"
                }),
                effectDirImpact: [Ru.meleeSlash, Ru.meleeFlash],
                effectCast: [Ru.crescentStrike],
                weaponRibbon: {
                    steps: 10,
                    interval: 0.02,
                    timer: 1,
                    a: [0.3, 1, 0],
                    b: [-0.3, 0, 0],
                    uvTop: 0.5,
                    uT: [2, 0.5, 0.5, 3],
                    Tp: [1, 0, 0, 0]
                }
            },
            onCast: (t, e, s) => ({
                id: 3,
                mode: 0,
                caster: t.id,
                dmg: t.stats.getDamageRoll() * (1 + 0.17 * e),
                type: 1,
                aoe: { faction: !1, circleRadius: 5 }
            })
        }),
        xp = new cp({
            id: 17,
            targetMode: 16,
            minlevel: 21,
            cd: 25,
            gcd: 0,
            cost: { resources: [[7, t => 8 * t]] },
            fx: { effectTarget: [Ru.gainHealth] },
            onCast: (t, e, s) => ({
                id: 58,
                mode: 4,
                stacks: 1,
                duration: 10,
                caster: t.id,
                target: t.id,
                level: e
            })
        }),
        kp = new cp({
            id: 1,
            targetMode: 4096,
            minlevel: 1,
            cd: 1,
            range: 1,
            cost: { resources: [[7, t => 1 + 1 * t]] },
            fx: {
                animCast: {
                    id: 1,
                    dur: 0.8,
                    sounds: [{ delay: 0.1, distance: 4, id: "woosh1" }]
                },
                impactSound: { distance: 5, id: "warrior/slash", delay: 0.3 },
                effectDirImpact: [Ru.meleeFlash, Ru.meleeSlash],
                weaponRibbon: {
                    steps: 9,
                    interval: 0.03,
                    timer: 0.5,
                    a: [0.3, 0.7, 0],
                    b: [-0.3, 0.2, 0],
                    uvTop: 0.8,
                    uT: [1, 1, 0, 2.5],
                    Tp: [1, 0, 0, 0.7]
                }
            },
            onCast: (t, e, s) => {
                const i = t.stats.getDamageRoll() * (1.1 + 0.14 * e);
                return {
                    id: 1,
                    mode: 0,
                    caster: t.id,
                    target: s,
                    dmg: i,
                    type: 1
                };
            }
        });
    var $p = new cp({
            id: 34,
            targetMode: 1,
            minlevel: 6,
            cd: 15,
            cost: { resources: [[7, t => 4 * t]] },
            fx: { animCast: { id: 9, dur: 0.6 }, effectCast: [Ru.taunt] },
            custom: [
                [t => Math.round(200 + t ** 1.2 * 100), " aggro generation"]
            ],
            onCast: (t, e, s) => ({
                id: 75,
                mode: 4,
                stacks: 1,
                caster: t.id,
                duration: 0.6 + 0.2 * e,
                level: e,
                aoe: { faction: !1, circleRadius: 10 }
            })
        }),
        Sp = new cp({
            id: 41,
            targetMode: 16,
            minlevel: 25,
            cd: 30,
            skilllevels: 1,
            gcd: 0,
            cost: { resources: [[7, t => 3 + 5 * t]] },
            onCast: (t, e, s) => {}
        }),
        Mp = new cp(dp(19, 61, 18, 300, 150, [[7, t => 8 * t]])),
        Ep = new cp(dp(22, 64, 17, 300, 120, [[7, t => 5 + 10 * t]])),
        Cp = new cp(
            up(24, 66, 15, 1.2, 0, 300, [[7, t => 2 + 3 * t]], 4, {
                animCast: {
                    id: 9,
                    dur: 0.3,
                    sounds: [
                        { delay: 0.1, distance: 4, id: "magic/genericcast" }
                    ]
                },
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5 }
            })
        ),
        Tp = new cp({
            id: 14,
            targetMode: 1,
            minlevel: 3,
            cd: 20,
            cost: { resources: [[7, t => 4 * t]] },
            fx: { animCast: { id: 9, dur: 0.6 }, effectCast: [Ru.icenova] },
            onCast: (t, e, s) => ({
                id: 55,
                mode: 4,
                stacks: 1,
                caster: t.id,
                duration: 6,
                level: e,
                aoe: { faction: !1, circleRadius: 8 }
            })
        }),
        _p = new cp({
            id: 16,
            targetMode: 16,
            minlevel: 13,
            cd: 45,
            gcd: 0,
            onCast: (t, e, s) => ({
                id: 57,
                mode: 4,
                stacks: 1,
                duration: 6,
                caster: t.id,
                target: t.id,
                level: e
            })
        }),
        Pp = new cp({
            id: 4,
            targetMode: 4096,
            range: 25,
            minlevel: 1,
            castLen: 1.5,
            cost: { resources: [[7, t => 1 + 3 * t]] },
            fx: {
                animCast: {
                    id: 6,
                    dur: 0.6,
                    sounds: [{ delay: 0.1, distance: 3, id: "mage/icecast1" }]
                },
                effectDirImpact: [Ru.iceimpact],
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5, effect: Ru.icecast },
                effectMissile: Ru.icebolt
            },
            onCast: (t, e, s) => ({
                id: 4,
                mode: 6,
                speed: 25,
                caster: t.id,
                target: s,
                dmg: 4 + t.stats.getDamageRoll() * (0.4 + 0.4 * e),
                type: 1
            }),
            onPermanent: (t, e, s) => ({
                id: 87,
                mode: 4,
                stacks: 1,
                duration: -1,
                caster: t.id,
                target: t.id,
                level: e
            })
        });
    const Up = t => 3 + t;
    var Ip = new cp({
            id: 23,
            targetMode: 16,
            minlevel: 5,
            cd: 60,
            gcd: 0,
            cost: { resources: [[7, t => 5 * t]] },
            custom: [[Up, " attacks blocked"]],
            fx: {
                animCast: {
                    id: 9,
                    dur: 0.6,
                    sounds: [
                        { delay: 0.01, distance: 4, id: "mage/iceshieldcast" }
                    ]
                }
            },
            onCast: (t, e, s) => ({
                id: 65,
                mode: 4,
                stacks: Up(e),
                duration: 60,
                caster: t.id,
                target: t.id,
                level: e
            })
        }),
        zp = new cp({
            id: 15,
            targetMode: 1,
            range: 25,
            minlevel: 8,
            cd: 15,
            castLen: 1.5,
            cost: { resources: [[7, t => 2 + 8 * t]] },
            fx: {
                animCast: { id: 6, dur: 0.6 },
                effectDirImpact: [Ru.icicleImpact],
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5, effect: Ru.icecast },
                effectMissile: Ru.icicle
            },
            onCast: (t, e, s) => ({
                id: 15,
                mode: 6,
                speed: 10,
                timeout: 2.5,
                caster: t.id,
                rot: t.rot,
                dmg: 10 + t.stats.getDamageRoll() * (1 + 0.65 * e),
                type: 1,
                aoe: { circleRadius: 4 + 0.5 * e, faction: !1, onlyOnce: [] }
            })
        });
    var Ap = new cp({
            id: 32,
            targetMode: 1,
            skilllevels: 1,
            minlevel: 5,
            cd: 12,
            disablingBuffs: [4],
            cost: { resources: [[7, t => 4 * t]] },
            fx: { animCast: { id: 9, dur: 0.6 }, effectCast: [Ru.teleport] },
            custom: [[() => 12, "m distance"]],
            onCast: (t, e, s) => {}
        }),
        Dp = new cp({
            id: 37,
            targetMode: 4096,
            range: 25,
            minlevel: 15,
            cd: 40,
            castLen: 2.3,
            cost: { resources: [[7, t => 5 + 5 * t]] },
            fx: {
                animCast: {
                    id: 6,
                    dur: 0.6,
                    sounds: [
                        { delay: 0.1, distance: 4, id: "magic/genericcast" },
                        { delay: 1, distance: 3, id: "shaman/agonizeImpact" }
                    ]
                },
                effectDirImpact: [Ru.decayImpact],
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5, effect: Ru.naturecast }
            },
            onCast: (t, e, s) => ({
                id: 77,
                mode: 4,
                stacks: 1,
                caster: t.id,
                target: s,
                duration: 2.5 + 0.7 * e,
                level: e
            })
        }),
        Rp = new cp(
            dp(28, 70, 12, 15, 60, [[7, t => 1 + 3 * t]], {
                animCast: {
                    id: 6,
                    dur: 0.6,
                    sounds: [
                        { delay: 0.1, distance: 4, id: "magic/genericcast" }
                    ]
                },
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5, effect: Ru.naturecast }
            })
        ),
        Bp = new cp({
            id: 12,
            targetMode: 4096,
            range: 25,
            minlevel: 1,
            castLen: 0,
            cd: 3,
            cost: { resources: [[7, t => 1 + 3 * t]] },
            fx: {
                animCast: {
                    id: 9,
                    dur: 0.4,
                    sounds: [
                        { delay: 0.05, distance: 4, id: "shaman/decayCast" }
                    ]
                },
                effectDirImpact: [Ru.decayImpact],
                effectMissile: Ru.decayMissile
            },
            onCast: (t, e, s) => ({
                id: 12,
                mode: 6,
                dmg: 3 + t.stats.getDamageRoll() * (0.2 + 0.2 * e),
                type: 1,
                speed: 15,
                caster: t.id,
                target: s,
                level: e
            })
        }),
        Fp = new cp({
            id: 30,
            targetMode: 1,
            range: 25,
            minlevel: 18,
            cd: 60,
            castLen: 2.3,
            cost: { resources: [[7, t => 10 + 8 * t]] },
            fx: {
                effectDirImpact: [Ru.gainHealthTotem],
                animCast: {
                    id: 9,
                    dur: 1,
                    sounds: [
                        {
                            delay: 0.1,
                            distance: 4,
                            id: "shaman/healingtotemcast"
                        }
                    ]
                },
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5, effect: Ru.naturecast },
                effectMissile: Ru.healingtotem
            },
            onCast: (t, e, s) => ({
                id: 30,
                mode: 6,
                speed: 0,
                timeout: 30,
                caster: t.id,
                rot: t.rot,
                interval: new Al(0, 1),
                heal: t.stats.getDamageRoll() * (0.04 + 0.025 * e),
                type: 1,
                aoe: {
                    circleRadius: 10,
                    circleHeight: 30,
                    faction: !0,
                    party: !0
                }
            })
        }),
        Np = new cp(dp(13, 54, 6, 15, 120, [])),
        Lp = new cp({
            id: 6,
            targetMode: 256,
            range: 25,
            minlevel: 8,
            cd: 8,
            castLen: 0,
            cost: { resources: [[7, t => 4 + 4 * t]] },
            fx: {
                animCast: {
                    id: 9,
                    dur: 0.6,
                    sounds: [
                        { delay: 0.1, distance: 4, id: "magic/genericcast" }
                    ]
                },
                effectTarget: [Ru.natureHealOneshot]
            },
            onCast: (t, e, s) => ({
                id: 6,
                mode: 2,
                caster: t.id,
                target: s,
                heal: 15 + t.stats.getDamageRoll() * (0.25 + 0.11 * e)
            })
        });
    var Op = new cp(
            hp(43, 94, 3, [
                [t => 3 + 3 * t, "% haste per stack"],
                [t => 1 + 2 * t, " jumps"]
            ])
        ),
        qp = new cp(
            up(7, 46, 3, 1.8, 0, 12, [[7, t => 3 + 3 * t]], 5, {
                animCast: {
                    id: 9,
                    dur: 0.6,
                    sounds: [
                        { delay: 0.1, distance: 4, id: "magic/genericcast" }
                    ]
                },
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5, effect: Ru.naturecast }
            })
        );
    var Hp = new cp({
            id: 42,
            targetMode: 1,
            minlevel: 8,
            cd: 8,
            castLen: 0,
            range: 20,
            custom: [[t => Math.round(2 + 1.5 * t), " mana gained per soul"]],
            cost: { resources: [[7, t => 8 + 6 * t]] },
            fx: {
                animCast: {
                    id: 9,
                    dur: 0.5,
                    sounds: [
                        {
                            delay: 0.05,
                            distance: 4,
                            id: "shaman/soulHarvestCast"
                        }
                    ]
                },
                effectDirImpact: [Ru.soulHarvestImpact],
                effectCast: [Ru.soulHarvestCast]
            },
            onCast: (t, e, s) => ({
                id: 42,
                mode: 1,
                caster: t.id,
                target: s,
                type: 1,
                dmg: 3 + t.stats.getDamageRoll() * (0.5 + 0.5 * e),
                level: e
            })
        }),
        Wp = new cp({
            id: 104,
            engineOnly: !0,
            fx: {
                effectDirImpact: [Ru.soulHarvestReturn],
                effectMissile: Ru.soulHarvestMissile
            }
        }),
        Zp = new cp({
            id: 36,
            targetMode: 16,
            minlevel: 10,
            cd: 30,
            gcd: 0,
            cost: { resources: [[7, t => 8 + 2 * t]] },
            onCast: (t, e, s) => ({
                id: 76,
                mode: 4,
                stacks: 1,
                duration: 17 + 3 * e,
                caster: t.id,
                target: t.id,
                level: e
            })
        }),
        jp = new cp({
            id: 35,
            targetMode: 1,
            skilllevels: 1,
            minlevel: 5,
            cd: 120,
            castLen: 5,
            outOfCombat: !0,
            pvpBoundsAdd: 5,
            cost: { resources: [[7, t => 20 + 5 * t]] },
            fx: {
                animCast: {
                    id: 9,
                    dur: 0.6,
                    sounds: [
                        { delay: 0.1, distance: 4, id: "magic/summoncast" }
                    ]
                },
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5, effect: Ru.purplecast }
            },
            onCast: (t, e, s) => {}
        }),
        Gp = new cp(hp(26, 68, 15));
    var Vp = new cp({
            id: 11,
            targetMode: 16,
            minlevel: 7,
            cd: 50,
            gcd: 0,
            custom: [[t => 23, "% of max mp recovered"]],
            onCast: (t, e, s) => ({
                id: 52,
                mode: 4,
                stacks: 1,
                duration: 15,
                caster: t.id,
                target: t.id,
                level: e
            })
        }),
        Yp = new cp(dp(27, 69, 12, 15, 100, [[7, t => 5 + 7 * t]])),
        Jp = new cp({
            id: 29,
            cd: 0,
            minlevel: 9,
            autoSkillBar: !1,
            fx: {
                effectDirImpact: [Ru.poisonImpact],
                impactSound: {
                    distance: 5,
                    id: "warrior/bleedImpact",
                    rndDelay: !0,
                    delay: 0.3
                }
            },
            onPermanent: (t, e) => ({
                id: 71,
                mode: 4,
                caster: t.id,
                target: t.id,
                duration: -1,
                stacks: 1,
                level: e
            })
        }),
        Xp = new cp({
            id: 9,
            targetMode: 4096,
            range: 25,
            minlevel: 3,
            cd: 6,
            castLen: 1.7,
            cost: { resources: [[7, t => 2 + 2 * t]] },
            fx: {
                animCast: {
                    id: 7,
                    dur: 0.3,
                    pre: 0.1,
                    sounds: [
                        { delay: 0.005, distance: 5, id: "archer/preciseshot" }
                    ]
                },
                impactSound: {
                    delay: 0.01,
                    distance: 6,
                    id: "archer/preciseimpact"
                },
                effectDirImpact: [Ru.arrowPreciseImpact],
                animTimedSound: {
                    distance: 2.5,
                    loop: !0,
                    id: "magic/casting"
                },
                animTimedCast: { id: 5 },
                effectMissile: Ru.precisearrow
            },
            onCast: (t, e, s) => ({
                id: 9,
                mode: 6,
                speed: 120,
                caster: t.id,
                target: s,
                dmg: 5 + t.stats.getDamageRoll() * (1.1 + 0.45 * e),
                type: 1
            })
        }),
        Qp = new cp({
            id: 10,
            targetMode: 16,
            minlevel: 5,
            cd: 0,
            autoSkillBar: !1,
            onPermanent: (t, e, s) => ({
                id: 51,
                mode: 4,
                stacks: 1,
                duration: -1,
                caster: t.id,
                target: t.id,
                level: e
            })
        }),
        Kp = new cp({
            id: 38,
            targetMode: 16,
            minlevel: 5,
            skilllevels: 1,
            cd: 10,
            gcd: 0,
            disablingBuffs: [4],
            cost: { resources: [[7, t => 6]] },
            fx: { animCast: { id: 10, dur: 0.3 } },
            onCast: (t, e, s) => !0
        }),
        tf = new cp({
            id: 31,
            targetMode: 4096,
            range: 25,
            minlevel: 1,
            cd: 0,
            castLen: 1.4,
            cost: { resources: [[7, t => 1 + 1 * t]] },
            fx: {
                animCast: {
                    id: 7,
                    dur: 0.3,
                    pre: 0.1,
                    sounds: [
                        { delay: 0.005, distance: 5, id: "archer/swiftshot" }
                    ]
                },
                impactSound: {
                    delay: 0.01,
                    distance: 6,
                    id: "archer/swiftimpact"
                },
                effectDirImpact: [Ru.arrowPreciseImpact],
                effectMissile: Ru.swiftarrow,
                animTimedSound: {
                    distance: 2.5,
                    loop: !0,
                    id: "magic/casting"
                },
                animTimedCast: { id: 5 }
            },
            onCast: (t, e, s) => ({
                id: 31,
                mode: 6,
                speed: 60,
                caster: t.id,
                target: s,
                dmg: 2 + t.stats.getDamageRoll() * (0.51 + 0.17 * e),
                type: 1
            })
        }),
        ef = new cp(dp(25, 67, 18, 300, 120, [[7, t => 5 + 5 * t]]));
    const sf = new cp(
            mp(100, 30, 0, !0, !0, {
                animCast: {
                    id: 3,
                    dur: 1,
                    sounds: [{ delay: 0.1, distance: 5, id: "potion1" }]
                },
                effectTarget: [Ru.potionConsume]
            })
        ),
        nf = new cp(mp(101, 0.5, 0, !0, !1)),
        af = new cp(
            mp(103, 0.5, 3, !0, !1, {
                animCast: {
                    id: 9,
                    dur: 0.6,
                    sounds: [{ delay: 0.1, distance: 5, id: "item/boxopening" }]
                },
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5 }
            })
        ),
        rf = new cp(
            mp(102, 0.5, 1.5, !1, !0, {
                animCast: { id: 9, dur: 0.6 },
                animTimedSound: { distance: 3, loop: !0, id: "magic/casting" },
                animTimedCast: { id: 5 }
            })
        );
    var of = new cp({
            id: 5,
            targetMode: 4096,
            range: 25,
            engineOnly: !0,
            auto: !0,
            cd: t => 100 / t.stats.getStat(17),
            fx: {
                animCast: {
                    id: 8,
                    dur: 0.4,
                    sounds: [
                        {
                            delay: 0.01,
                            distance: 5,
                            id: "archer/arrow_release1"
                        }
                    ]
                },
                impactSound: {
                    delay: 0.01,
                    distance: 4,
                    id: "archer/arrow_impact1"
                },
                effectDirImpact: [Ru.arrowImpact],
                effectMissile: Ru.arrow
            },
            onCast: (t, e, s) => ({
                id: 5,
                mode: 6,
                speed: 30,
                caster: t.id,
                target: s,
                dmg: t.stats.getDamageRoll(),
                type: 0
            })
        }),
        lf = new cp({
            id: 0,
            targetMode: 4096,
            engineOnly: !0,
            auto: !0,
            range: 1,
            cd: t => 100 / t.stats.getStat(17),
            fx: {
                animCast: {
                    id: 0,
                    dur: 1,
                    sounds: [{ delay: 0.3, distance: 5, id: "woosh1" }]
                },
                impactSound: t => t.transform.sounds.melee,
                impactSoundPitchCaster: !0,
                effectDirImpact: [Ru.meleeFlash, Ru.meleePhys]
            },
            onCast: (t, e, s) => ({
                id: 0,
                mode: 0,
                caster: t.id,
                target: s,
                dmg: t.stats.getDamageRoll(),
                type: 0
            })
        }),
        cf = new cp({
            id: 39,
            engineOnly: !1,
            skilllevels: 1,
            minlevel: 30,
            cd: 0,
            goldValue: 25e3,
            skillpoints: 0,
            noReward: !0,
            autoSkillBar: !1
        });
    const hf = {
            recall: new cp({
                id: 40,
                targetMode: 1,
                engineOnly: !0,
                cd: 300,
                castLen: 5,
                outOfCombat: !0,
                cost: { resources: [[7, t => 20 + 5 * t]] },
                fx: {
                    animCast: { id: 9, dur: 0.6 },
                    animTimedSound: {
                        distance: 3,
                        loop: !0,
                        id: "magic/casting"
                    },
                    animTimedCast: { id: 5, effect: Ru.purplecast }
                },
                onCast: (t, e, s) => {}
            }),
            arrow: of,
            melee: lf,
            potion: sf,
            book: nf,
            specialization: new cp({
                id: 8,
                engineOnly: !0,
                cd: 0,
                onPermanent: (t, e) => ({
                    id: t.class + 47,
                    mode: 4,
                    caster: t.id,
                    target: t.id,
                    duration: -1,
                    stacks: 1,
                    level: e
                })
            }),
            mount: cf,
            activatemount: rf,
            container: af
        },
        df = {
            temper: Sp,
            taunt: $p,
            charge: vp,
            warcry: Mp,
            courage: yp,
            armorreinforcement: pp,
            healOnBlock: xp,
            slash: kp,
            blockBuff: fp,
            crescentStrike: wp,
            crescentBleed: bp
        },
        uf = {
            teleport: Ap,
            enchantment: Cp,
            arcticaura: Ep,
            iceshield: Ip,
            hypothermic: _p,
            frostnova: Tp,
            icebolt: Pp,
            icicle: zp
        },
        mf = {
            snipe: Kp,
            poisonarrows: Jp,
            temporaldilation: ef,
            pathfinding: Yp,
            preciseShot: Xp,
            serpentArrows: Qp,
            invigorate: Vp,
            swiftshot: tf,
            cranialpunctures: Gp
        },
        pf = {
            soulharvestReturn: Wp,
            plaguespreader: Op,
            soulharvest: Hp,
            agonize: Dp,
            caninehowl: Rp,
            mana: Np,
            mend: Lp,
            revitalize: qp,
            decay: Bp,
            healingtotem: Fp,
            summon: jp,
            spiritanimal: Zp
        },
        ff = new Map();
    [df, uf, mf, pf, hf].forEach((t, e) => {
        for (const s in t) e <= 3 && (t[s].class = e), ff.set(t[s].id, t[s]);
    });
    class gf {
        constructor(t) {
            (this.entity = t),
                (this.skills = new Map()),
                (this.skillIds = []),
                (this.timedCast = new Al()),
                (this.timedSkill = void 0),
                (this.timedTarget = void 0),
                (this.pvpBoundModifier = 0);
        }
        tick(t, e, s) {}
        add(t, e = 0, s = 0, i) {
            let n = this.skills.get(t);
            return (
                (n = Object.assign(n || {}, {
                    level: void 0 !== i ? i : n ? n.level + 1 : 1,
                    logic: ff.get(t),
                    cd: new Al(e, s - e)
                })),
                this.skills.set(t, n),
                n
            );
        }
        remove(t) {
            this.skills.delete(t);
        }
        compileSkillIds() {
            (this.skillIds.length = 0),
                this.skills.forEach((t, e) => {
                    if (!t.logic.engineOnly)
                        for (let s = 0; s < t.level; ++s) this.skillIds.push(e);
                });
        }
        globalCd(t, e) {
            this.skills.forEach(s => {
                s.logic.auto ||
                    s.logic.ignoreGcd ||
                    (s.cd.end < t && (s.cd.start = t),
                    s.cd.end < e && (s.cd.end = e));
            });
        }
        startTimedCast(t, e, s, i) {
            this.timedCast.reset(e, i),
                (this.timedSkill = t),
                (this.timedTarget = s),
                (this.entity.steer[0] = 0),
                (this.entity.steer[1] = 0),
                (this.pvpBoundModifier = ff.get(t.id).pvpBoundsAdd);
        }
        interruptTimedCast() {
            this.timedCast.reset(0, 0),
                (this.timedSkill = void 0),
                (this.timedTarget = void 0),
                (this.pvpBoundModifier = 0);
        }
        finishTimedCast(t) {
            return this.interruptTimedCast(!1);
        }
        onDeath() {
            this.interruptTimedCast(!0);
        }
        clear() {}
        hasInstantCast(t) {
            return (
                this.entity.buffs.instantCast.size > 0 &&
                Array.from(this.entity.buffs.instantCast).some(e =>
                    e.logic.instantCast.has(t)
                )
            );
        }
    }
    class vf extends gf {
        constructor(t) {
            super(t);
        }
        tick(t, e, s) {
            super.tick(t, e, s),
                this.isPlayer &&
                    this.skills.forEach((t, s) => {
                        const i = new Map();
                        let n = t.logic.can(
                            this.entity,
                            t.level,
                            this.entity.target,
                            !0
                        );
                        (3 !== n && 4 !== n) ||
                            (n = t.logic.can(
                                this.entity,
                                t.level,
                                this.entity.id,
                                !0
                            )),
                            n !== t.status &&
                                ((t.status = n), i.set("status", n)),
                            t.cd.done(e)
                                ? t.cd.icondone ||
                                  ((t.cd.icondone = !0), i.set("cd", void 0))
                                : ((t.cd.icondone = !1),
                                  i.set(
                                      "cd",
                                      Math.round(100 - 100 * t.cd.fraction(e))
                                  )),
                            i.size > 0 &&
                                te.update(
                                    e => (
                                        i.forEach(
                                            (s, i) => (e[t.logic.id][i] = s)
                                        ),
                                        e
                                    )
                                );
                    }),
                this.timedSkill &&
                    ((this.entity.uiFrameDirty = !0),
                    this.timedSkill.fx &&
                        this.timedSkill.fx.animCast &&
                        (!this.entity.transform.currentAnim ||
                            this.entity.transform.currentAnim.id !==
                                this.timedSkill.fx.animCast.id) &&
                        (this.timedCast.remaining(e) <=
                            (void 0 !== this.timedSkill.fx.animCast.pre
                                ? this.timedSkill.fx.animCast.pre
                                : 0.5 * this.timedSkill.fx.animCast.dur) ||
                            this.timedCast.done(e)) &&
                        (this.entity.transform.clearAnims(),
                        this.entity.transform.anim(
                            this.timedSkill.fx.animCast
                        )));
        }
        add(t, e = 0, s = 0, i) {
            if ((super.add(t, e, s, i), this.isPlayer)) {
                this.compileSkillIds(), te.update(e => ((e[t] = {}), e));
                const e = this.skills.get(t);
                e.logic.id < 100 &&
                    ee.update(t => (t.indexOf(e) < 0 && t.push(e), t));
            }
        }
        remove(t) {
            if (this.isPlayer) {
                this.compileSkillIds(), te.update(e => ((e[t] = void 0), e));
                const e = this.skills.get(t);
                e && ee.update(t => (t = t.filter(t => t != e)));
            }
            super.remove(t);
        }
        cd(t, e, s) {
            this.skills.get(t).cd.set(e, s);
        }
        clearSkillInfo() {
            ee.update(t => ((t.length = 0), t));
        }
        startTimedCast(t, e, s, i) {
            this.cleanUpCastingEffect(),
                super.startTimedCast(t, e, s, i),
                (this.entity.uiFrameDirty = !0),
                this.entity.transform &&
                    (this.timedSkill.fx &&
                        this.timedSkill.fx.animTimedCast &&
                        (this.entity.transform.anim({
                            id: this.timedSkill.fx.animTimedCast.id,
                            loop: !0,
                            dur: i
                        }),
                        this.timedSkill.fx.animTimedCast.effect &&
                            this.entity.transform.hands &&
                            this.entity.transform.hands.forEach(t => {
                                const e = cc(
                                    this.timedSkill.fx.animTimedCast.effect
                                );
                                e.setParent(t), (t.data.timedCastEffect = e);
                            })),
                    this.timedSkill.fx &&
                        this.timedSkill.fx.animTimedSound &&
                        (this.animTimedSound = Jr({
                            transform: this.entity.transform,
                            ...this.timedSkill.fx.animTimedSound
                        })));
        }
        interruptTimedCast(t) {
            this.cleanUpCastingEffect(),
                super.interruptTimedCast(t),
                (this.entity.uiFrameDirty = !0),
                t &&
                    this.entity.transform &&
                    this.entity.transform.clearAnims();
        }
        clear() {
            super.clear(), this.cleanUpCastingEffect();
        }
        cleanUpCastingEffect() {
            this.timedSkill &&
                (this.entity.transform &&
                    this.entity.transform.hands &&
                    this.entity.transform.hands.forEach(t => {
                        void 0 !== t.data.timedCastEffect &&
                            (t.data.timedCastEffect.data.remove = !0),
                            (t.data.timedCastEffect = void 0);
                    }),
                this.animTimedSound &&
                    (this.animTimedSound.stop(),
                    (this.animTimedSound = void 0)));
        }
    }
    class yf {
        constructor(t) {
            (this.entity = t),
                (this.alive = !0),
                (this.stat = new Map()),
                (this.resource = new Map()),
                (this.combatTimer = new Al(-1, 6));
        }
        tick(t, e) {
            this.combatTimer.start > 0 &&
                this.combatTimer.done(e) &&
                this.onCombatEnd(e);
        }
        die() {
            return (
                !!this.alive &&
                ((this.alive = !1),
                this.entity.skills.onDeath(),
                this.entity.buffs.onDeath(),
                !0)
            );
        }
        getStat(t) {
            return 0 | this.stat.get(t);
        }
        getResource(t) {
            return 0 | this.resource.get(t);
        }
        addStat(t, e) {
            this.stat.set(t, (0 | this.stat.get(t)) + e);
        }
        maxStat(t, e) {
            this.stat.set(t, Math.max(0 | this.stat.get(t), e));
        }
        multiplyStat(t, e) {
            this.stat.set(t, (0 | this.stat.get(t)) * e);
        }
        setResource(t, e) {
            const s = Math.round(na(e, 0, this.getStat(t)));
            return this.resource.set(t, s), s;
        }
        changeResource(t, e) {
            return this.setResource(t, this.getResource(t) + e);
        }
        respawn() {
            this.alive = !0;
        }
        clear() {}
        refreshCombatTimer(t, e) {
            this.combatTimer.end < t + e && this.combatTimer.reset(t, e);
        }
        onCombatEnd() {
            this.combatTimer.reset(-1);
        }
        getDamageRoll() {
            return Math.round((this.getStat(10) + this.getStat(11)) / 2);
        }
    }
    class bf extends yf {
        constructor(t) {
            super(t);
        }
        setStat(t, e) {
            this.stat.set(t, e),
                (this.entity.uiFrameDirty = !0),
                (this.entity.statsDirty = !0),
                20 == t && this.entity.setFame(e),
                19 == t &&
                    this.entity.inventory &&
                    this.entity.inventory.setSize(e);
        }
        setResource(t, e) {
            super.setResource(t, e), (this.entity.uiFrameDirty = !0);
        }
        die() {
            super.die(),
                (this.entity.uiFrameDirty = !0),
                this.entity.transform && this.entity.transform.onDeath();
        }
        respawn() {
            super.respawn(),
                (this.entity.uiFrameDirty = !0),
                this.entity.transform && this.entity.remakeTransform();
        }
        refreshCombatTimer(t, e) {
            super.refreshCombatTimer(t, e), (this.entity.uiFrameDirty = !0);
        }
        onCombatEnd() {
            super.onCombatEnd(), (this.entity.uiFrameDirty = !0);
        }
    }
    const wf = {},
        xf = (t, e) =>
            !(t[0] > e.r) && !(t[0] < e.l) && !(t[2] < e.u) && !(t[2] > e.d),
        kf = (t, e) =>
            !(t.l > e.r) &&
            !(t.r < e.l) &&
            !(t.d < e.u) &&
            !(t.u > e.d) &&
            !(t.b > e.t) &&
            !(t.t < e.b),
        $f = (t, e, s) => !(s && !kf(t, e)) && wf[t.type | e.type](t, e);
    (wf[Km.type | Km.type] = (t, e) => {
        const s = [0, 0, 0],
            i = t.wU[1] > e.wU[1],
            n = i ? t.b - e.t : t.t - e.b;
        if (i ? n > 0 : n < 0) return s;
        Si(s, e.wU, t.wU);
        let a = s[0] ** 2 + s[2] ** 2;
        const r = t.radius + e.radius;
        if (a < r ** 2) {
            if (0 == (a = Math.sqrt(a)) || Math.abs(n) < r - a)
                return xi(s, 0, -n, 0);
            const t = (1 / a) * (a - r);
            return (s[0] *= t), (s[1] = 0), (s[2] *= t), s;
        }
        return xi(s, 0, 0, 0);
    }),
        (wf[Km.type | tp.type] = (t, e) => {
            const s = Ai([0, 0, 0], t.wU, -e.rot),
                i = [0, 0, 0],
                n = t.wU[1] > e.wU[1],
                a = n ? t.b - e.t : t.t - e.b;
            if (n ? a > 0 : a < 0) return i;
            if (
                (xi(i, na(s[0], e.ll, e.lr), 0, na(s[2], e.lu, e.ld)),
                Si(i, i, s),
                0 == i[0] && 0 == i[2])
            ) {
                const n = Si([0, 0, 0], s, e.local);
                n[0] > 0
                    ? (n[0] = e.lr - s[0] + t.radius)
                    : (n[0] = e.ll - s[0] - t.radius),
                    n[2] > 0
                        ? (n[2] = e.lu - s[2] + t.radius)
                        : (n[2] = e.ld - s[2] - t.radius),
                    Math.abs(n[0]) < Math.abs(n[2])
                        ? (i[0] = n[0])
                        : (i[2] = n[2]);
            } else {
                const e = Math.sqrt(i[0] ** 2 + i[2] ** 2);
                if (e < t.radius) {
                    const s = (1 / e) * (e - t.radius);
                    (i[0] *= s), (i[2] *= s);
                } else xi(i, 0, 0, 0);
            }
            return (
                (0 != i[0] || 0 != i[2]) &&
                (Math.abs(a) < Math.abs(i[0]) || Math.abs(a) < Math.abs(i[2]))
                    ? xi(i, 0, -a, 0)
                    : (i[1] = 0),
                Ai(s, i, e.rot),
                s
            );
        });
    class Sf extends rp {
        constructor(t) {
            t.spawn && "" !== t.spawn.name && (t.name = t.spawn.name),
                super(t),
                (this.stats = new bf(this)),
                (this.buffs = new Xm(this)),
                (this.skills = new vf(this)),
                (this.height = 1.1),
                (this.shape = new Km(
                    this,
                    Wn.bounds,
                    0,
                    this.wU,
                    0.5 * this.size,
                    this.size * this.height
                )),
                Wn.grids.entities.add(this.shape),
                (this.steer = [0, 0]),
                (this.vel = [0, 0, 0]),
                (this.speed = 1),
                (this.static = !1),
                (this.jump = !1),
                (this.onGround = !0),
                (this.onProp = !1),
                (this.weight = this.size ** 3),
                (this.target = 0),
                (this.level = 0),
                (this.faction = 0),
                (this.yReach = 10),
                (this.posLock = [0, 0]),
                (this.posLockRadius = 0);
        }
        tickFixed(t, e, s) {
            super.tickFixed(t, e, s),
                this.buffs.tick(t, e, s),
                this.stats.tick(t, e),
                this.skills.tick(t, e, this),
                (this.speed = this.stats.getStat(15) / 20),
                this.buffMovementOverride(t, e, s),
                this.handleEntityCollisions(),
                this.handlePosLock(),
                this.clampWorldPos();
        }
        handlePosLock() {
            if (this.posLockRadius > 0) {
                Un(ea, va(ta, this.wU), this.posLock);
                const t = An(ea);
                t > this.posLockRadius &&
                    this.setXZPos(
                        (function (t, e, s) {
                            return (
                                (t[0] = e[0] + s[0]), (t[1] = e[1] + s[1]), t
                            );
                        })(ea, this.posLock, In(ea, ea, this.posLockRadius / t))
                    );
            }
        }
        handleEntityCollisions() {
            (this.onProp = !1),
                this.stats.alive &&
                    !this.static &&
                    (this.shape.aabb(),
                    Wn.grids.entities.query(this.shape).forEach(t => {
                        if (
                            t == this.shape ||
                            !t.data.stats.alive ||
                            (this.stationary && t.data.static)
                        )
                            return;
                        const e = $f(this.shape, t, !1);
                        if (0 != e[0] || e[1] != [0] || 0 != e[2]) {
                            let s = t.data.static
                                ? 0
                                : this.weight / (t.data.weight + this.weight);
                            e[1] > 0 &&
                                ((s = 0),
                                (this.onGround = !0),
                                (this.onProp = !0)),
                                Ei(this.wU, this.wU, e, 1 - s),
                                t.data.static ||
                                    Ei(t.data.wU, t.data.wU, e, -s),
                                _i(e, e);
                            const i = Pi(this.vel, e),
                                n = Mi(Gn, e, i * (1 - s));
                            Si(this.vel, this.vel, n),
                                this.shape.aabb(),
                                (this.hasCollided = !0);
                        }
                    }));
        }
        buffMovementOverride(t, e, s) {
            this.buffs.movementOverride.size &&
                this.buffs.movementOverride.forEach(i => {
                    i.logic.movementOverride(t, e, s, this, i);
                });
        }
        combatRangeCheck(t, e) {
            const s = this.wU[0] - t.wU[0],
                i = Math.max(
                    0,
                    Math.abs(this.shape.b - t.shape.b) - this.yReach
                ),
                n = this.wU[2] - t.wU[2];
            return (
                Math.sqrt(s * s + i * i + n * n) -
                    (t.shape.radius + this.shape.radius + 0.5) <
                e
            );
        }
        getWorldYBody(t, e, s) {
            return super.getWorldYBody(t, e, s) + 0.5 * this.height * this.size;
        }
        clampWorldPos() {
            super.clampWorldPos(), this.shape.aabb(), this.updateShape();
        }
        updateShape() {
            this.shape.update(
                this.wU,
                0.5 * this.size,
                this.size * this.height
            ),
                Wn.grids.entities.update(this.shape);
        }
        horizontalSteer(t) {
            if (this.stats.alive) {
                const e = Dn(ta, this.steer);
                this.steer[1] < 0 && (e[1] *= 0.5),
                    In(e, e, this.speed * t),
                    Di(this.vel, e, this.rot);
            } else (this.vel[0] = 0), (this.vel[2] = 0);
        }
        setSteer(t) {
            t != this.steer && this.stats.alive && _n(this.steer, t);
        }
        setJump(t) {
            (t && !this.stats.alive) || (this.jump = t);
        }
        setRot(t) {
            this.stats.alive && super.setRot(t);
        }
        setTarget(t) {
            const e = t > 0 && this.canTarget(Wn.getEntityById(t));
            return !1 !== e && void 0 !== e
                ? e.onTarget(this.id)
                : this.target !== (this.target = 0);
        }
        onTarget(t) {
            return (Wn.getEntityById(t).target = this.id), super.onTarget(t);
        }
        getTargetEntity() {
            return Wn.getEntityById(this.target);
        }
        canTarget(t) {
            return t;
        }
        setFaction(t) {
            this.faction = t;
        }
        setLevel(t) {
            this.level = t;
        }
        setClass(t) {
            this.class = t;
        }
        onRemove() {
            this.stats.clear(),
                this.buffs.clearTempBuffs(),
                this.buffs.clearPassiveBuffs(),
                this.skills.clear(),
                Wn.grids.entities.remove(this.shape),
                this.shape.onRemove(),
                super.onRemove();
        }
        hostility(t) {
            return (
                !0 === Wn.mode.partyBasedHostility
                    ? t.party !== this.party
                    : t.faction !== this.faction
            )
                ? 0 === t.constructor.type
                    ? 2
                    : 1
                : 0;
        }
        canCombatInteract(t) {
            return !0;
        }
        die(t, e, s) {}
        setPosLock(t, e, s) {
            (this.posLock[0] = ~~t),
                (this.posLock[1] = ~~e),
                (this.posLockRadius = ~~s);
        }
    }
    class Mf extends Sf {
        constructor(t) {
            super(t),
                (this.netPosOffset = [0, 0]),
                (this.uiFrameDirty = !0),
                (this.visualPosition = [0, 0, 0]),
                (this.speechTimer = new Al(0, 5)),
                (this.mount = void 0),
                (this.mountRotAdd = 0),
                (this.internalYRot = 0),
                (this.netViolations = 0);
        }
        remakeTransform() {
            void 0 !== this.transform &&
                (this.transform.onRemove(), (this.transform = void 0));
        }
        onRemove() {
            super.onRemove(), void 0 !== this.mount && this.mount.onRemove();
        }
        updateVisualPosition(t, e, s) {
            Ei(this.visualPosition, this.visualPosition, this.vel, t),
                Si(Gn, this.wU, this.visualPosition);
            const i = bi(Gn);
            i > 10
                ? wi(this.visualPosition, this.wU)
                : i > 0.001 &&
                  Ei(
                      this.visualPosition,
                      this.visualPosition,
                      Gn,
                      Math.min(0.5, 30 * t)
                  ),
                s.clampV3(this.visualPosition),
                this.onGround &&
                    !this.onProp &&
                    (this.visualPosition[1] = this.getWorldYBody(
                        s,
                        this.visualPosition[0],
                        this.visualPosition[2]
                    )),
                void 0 === this.mount
                    ? wi(this.transform.position, this.visualPosition)
                    : (wi(this.mount.position, this.visualPosition),
                      this.mount.tick(t, e, s),
                      this.mount.mountPosition(this.transform.position));
        }
        updateTransformScale(t) {
            ki(this.transform.scale, 0.7 * this.size),
                void 0 !== this.mount && ki(this.mount.scale, 0.9 * this.size);
        }
        updateTransformRotation(t) {
            if (this.stats.alive) {
                const e = fa(this.rot, ua(this.internalYRot));
                Math.abs(e) > 0.1 &&
                    (this.internalYRot -= 0.2 * Math.sign(e) * t * 8),
                    (this.internalYRot -= e * t * 5),
                    (this.transform.rotation[1] = this.internalYRot),
                    void 0 !== this.mount && this.updateMountRotation(t),
                    this.transform.rotation.onChange();
            }
        }
        updateMountRotation(t) {
            if (this.onGround && (0 !== this.steer[0] || 0 !== this.steer[1])) {
                let e = 1.5 * this.steer[0];
                this.steer[1] > 0 ? (e *= 0.5) : this.steer[1] < 0 && (e = 0),
                    (this.mountRotAdd -= (this.mountRotAdd - e) * t * 10);
            }
            (this.transform.rotation[1] += this.mountRotAdd),
                (this.mount.rotation[1] = this.transform.rotation[1]),
                this.mount.rotation.onChange();
        }
        tickFixed(t, e, s) {
            super.tickFixed(t, e, s);
        }
        postFixed(t, e, s) {
            if (
                (super.postFixed(t, e, s),
                this.transform.tickFixed(t, e, s),
                void 0 !== this.mount && this.mount.tickFixed(t, e, s),
                this.onGround && (this.vel[1] = Math.max(0, this.vel[1])),
                this !== s.player &&
                    (0 != this.netPosOffset[0] || 0 != this.netPosOffset[1]))
            ) {
                const e = In(ta, this.netPosOffset, 30 * t);
                (this.wU[0] += e[0]),
                    (this.wU[2] += e[1]),
                    Un(this.netPosOffset, this.netPosOffset, e);
            }
        }
        forceNetPosition(t) {
            (this.netViolations = 0),
                (this.netPosOffset[0] = 0),
                (this.netPosOffset[1] = 0),
                (this.wU[0] = t[0]),
                (this.wU[2] = t[1]),
                this.onGround &&
                    (this.wU[1] = this.getWorldYBody(
                        Wn,
                        this.wU[0],
                        this.wU[2]
                    )),
                wi(this.visualPosition, this.wU);
        }
        parseDelta(t, e, s) {
            switch (t) {
                case sp.posXZ: {
                    const t = Gc(e, 768);
                    (this.netPosOffset[0] = t[0] - this.wU[0]),
                        (this.netPosOffset[1] = t[1] - this.wU[2]);
                    const i = An(this.netPosOffset);
                    i > (this !== s.player ? 0.2 * this.speed : this.speed) &&
                        (this.netViolations++,
                        (i > 10 || this.netViolations > 3) &&
                            this.forceNetPosition(t));
                    break;
                }
                default:
                    super.parseDelta(t, e, s);
            }
        }
        postDelta(t, e, s) {
            super.postDelta(t, e, s),
                this.updateTransformScale(t),
                this.updateTransformRotation(t),
                this.updateVisualPosition(t, e, s),
                this.transform.tick(t, e, s),
                this.uiFrameDirty &&
                    (s.player.target == this.id && this.setUiStore(Gt),
                    this == s.player
                        ? this.setUiStore(jt)
                        : s.party.has(this.name) &&
                          this.setUiStore(s.party.get(this.name).store)),
                this.speechText &&
                    this.speechTimer.done(e) &&
                    (this.speechText = void 0);
        }
        setTarget(t) {
            const e = this.target,
                s = super.setTarget(t);
            if (e != this.target && this == Wn.player && s) {
                const e = Wn.getEntityById(t);
                e ? e.setUiStore(Gt) : Gt.update(t => ((t.visible = !1), t));
            }
            return s;
        }
        setUiStore(t) {
            t.update(
                t => (
                    (t.visible = !0),
                    (t.name = this.name),
                    (t.alive = this.stats.alive),
                    (t.hp = this.stats.getResource(6)),
                    (t.hpMax = this.stats.getStat(6)),
                    (t.mp = this.stats.getResource(7)),
                    (t.mpMax = this.stats.getStat(7)),
                    (t.level = this.level),
                    (t.class = this.class),
                    (t.id = this.id),
                    (t.clan = this.clan),
                    (t.faction = this.faction),
                    (t.role = this.partyRole),
                    (window.partyRole = this.partyRole),
                    (t.type = this.constructor.type),
                    (t.combat = !this.stats.combatTimer.done(Wn.time)),
                    (t.range = !0),
                    (t.powertype =
                        2 === this.faction &&
                        void 0 !== this.spawn &&
                        (this.spawn.meta[4] || !1)),
                    (t.buffs.length = 0),
                    this.buffs.buffs.forEach(e => {
                        e.forEach(e => {
                            e.logic.passive ||
                                (vi.buffsHideIrrelevant &&
                                    e.caster !== Wn.player.id &&
                                    (this !== Wn.player ||
                                        1 != e.logic.type)) ||
                                (e.logic.diminish &&
                                    0 !==
                                        t.buffs.reduce(
                                            (t, s) =>
                                                t + (s.id === e.id ? 1 : 0),
                                            0
                                        )) ||
                                t.buffs.push(e);
                        });
                    }),
                    t.buffs.sort((t, e) => e.timer.end - t.timer.end),
                    t.buffs.sort((t, e) => t.logic.type - e.logic.type),
                    (t.timedSkill = this.skills.timedSkill),
                    (t.timedCast = this.skills.timedCast),
                    t
                )
            ),
                (this.uiFrameDirty = !1);
        }
        speech(t, e) {
            (this.speechText = t),
                (this.speechStyle = e),
                this.speechTimer.reset(Wn.time);
        }
    }
    class Ef extends Mf {
        constructor(t) {
            super(t), (this.static = !0);
        }
    }
    class Cf extends Ef {
        constructor(t) {
            super(t),
                (this.interactions = t.interactions),
                this.setDialogue(
                    this.interactions[0].text,
                    this.interactions[0].choices
                ),
                this.remakeTransform();
        }
        interact(t) {
            this.createInteraction();
        }
        createInteraction() {
            Nt.set({
                title: this.name,
                text: this.text,
                choices: this.choices
            });
        }
        setDialogue(t, e) {
            (this.text = t), (this.choices = e);
        }
    }
    const Tf = (t, e, s) => {},
        _f = [
            {
                id: 0,
                storeValue: 300,
                quality: 90,
                level: 1,
                custom: ["Contains one random mount of rare or epic quality"]
            }
        ],
        Pf = (t, e) => Lr[t].baselvl + Math.floor((e / Lr[t].tiers) * 100),
        Uf = (t, e) => {
            const s = {
                level: t.level,
                type: t.type,
                tier: t.tier,
                stats: t.stats ? new Map() : void 0,
                class: t.class,
                quality: t.quality
            };
            t.stats &&
                Object.keys(t.stats)
                    .sort((t, e) => t - e)
                    .forEach(e => {
                        const i = t.stats[e];
                        s.stats.set(parseInt(e), {
                            min: i.base + t.level * i.min,
                            max: i.base + (t.level + 10) * i.max
                        });
                    }),
                (e[t.type + t.tier] = s);
        },
        If = {};
    (t => {
        for (const e in Lr)
            if (Lr[e].tiers) {
                const s = Lr[e];
                for (let i = 0; i < s.tiers; ++i)
                    Uf(
                        {
                            type: e,
                            tier: i,
                            stats: s.stats,
                            level: Pf(e, i),
                            class: s.class,
                            quality: s.quality
                        },
                        t
                    );
            }
    })(If),
        (t => {
            const e = [150, 100, 300, 200, 600, 300];
            for (let s = 0; s < 6; ++s) {
                const i = Math.floor(s / 2),
                    n = s % 2 == 0;
                t["misc" + s] = {
                    type: "misc",
                    tier: s,
                    level: 1 + 20 * i,
                    goldvalue: 5 ** i,
                    quality: 15,
                    custom: [e[s] + (n ? " HP recovered" : " MP recovered")],
                    useSkill: 100,
                    use: (t, e, s, i) => {}
                };
            }
        })(If),
        (t => {
            ff.forEach(e => {
                if (!e.engineOnly)
                    for (let s = 0; s < e.skilllevels; ++s) {
                        const i = 5 * e.id + s;
                        t[`book${i}`] = {
                            type: "book",
                            tier: i,
                            level: e.minlevel + 8 * s,
                            skillid: e.id,
                            skilllevel: s,
                            class: e.class,
                            noReward: e.noReward || !1,
                            goldValue:
                                e.goldValue || (e.minlevel + 5 * s < 5 ? 4 : 0),
                            quality: Math.round(
                                Math.min(99, 30 + (s / 5) * 70)
                            ),
                            art: Wd(i, e.class),
                            useSkill: 101,
                            use: (t, s, i, n) => {
                                Tf(t, e.id);
                            }
                        };
                    }
            });
        })(If),
        (t => {
            Fm.forEach((e, s) => {
                t["mount" + s] = {
                    ...e,
                    type: "mount",
                    tier: s,
                    requiredSkills: [39],
                    useSkill: 102,
                    use: (t, e, i, n, a) => ({
                        id: 79,
                        mode: 4,
                        stacks: 1,
                        duration: 600,
                        caster: t.id,
                        target: t.id,
                        buffdata: [s],
                        sendBuffdata: !0,
                        level: e
                    })
                };
            });
        })(If),
        (t => {
            _f.forEach(e => {
                t["box" + e.id] = {
                    ...e,
                    type: "box",
                    tier: e.id,
                    unsellable: !0,
                    useSkill: 103,
                    use: (t, e, s, i) => {}
                };
            });
        })(If);
    const zf = Object.values(If);
    zf.forEach((t, e) => (t.logicId = e));
    const Af = [];
    for (const t in If) {
        const e = If[t];
        "book" === e.type && 0 === e.skilllevel
            ? Af.push({ stacks: 1, item: e })
            : "misc" === e.type
            ? Af.push({ stacks: 5, item: e })
            : "box" === e.type
            ? Af.push({ bind: !0, rolls: !0, maxquality: 0, item: e })
            : "mount" === e.type &&
              e.tier < 2 &&
              Af.push({ item: e, rolls: !0, maxquality: 0, bind: !0 });
    }
    class Df extends Cf {
        constructor(t) {
            super({ size: 1.2, name: "Trader", ...t }), (this.items = Af);
        }
        static get type() {
            return 8;
        }
    }
    const Rf = [
        { step: 10, fun: () => oo.fwd.down || oo.left.down || oo.right.down },
        { step: 10, fun: () => oo.lmb.down || oo.rmb.down, click: !0 },
        { click: !0 },
        { element: "ufplayer", click: !0 },
        {},
        { element: "uftarget", click: !0 },
        { element: "sk1" },
        {},
        { click: !0 },
        { element: "expbar", click: !0 },
        {},
        { element: "sysbag", step: 100, fun: () => vi.inventoryOpen },
        { element: "bag2", click: !0 },
        { click: !0 },
        { element: "syschar", step: 100, fun: () => vi.charpanelOpen },
        { element: "equipslots", click: !0 },
        {
            fixed: () =>
                Wn.player.stats.getStat(21) > 0
                    ? 100
                    : Math.round((Wn.player.exp / su(Wn.player.level)) * 100)
        },
        { element: "syschar", step: 100, fun: () => vi.charpanelOpen },
        { element: "statpoints" },
        {
            step: 100,
            fixed: () =>
                Math.round((Wn.player.exp / su(Wn.player.level)) * 100),
            fun: () => Wn.player.level > 3
        },
        { click: !0 },
        { fixed: () => Math.round((Wn.player.inventory.gold / 32) * 100) },
        { fun: () => vi.traderWindow },
        {
            element: () =>
                "trader" +
                Af.findIndex(
                    t =>
                        "book" === t.item.type &&
                        3 === t.item.level &&
                        t.item.class === Wn.player.class
                )
        },
        { element: "bag0", click: !0 },
        { element: "sysbook", step: 100, fun: () => vi.skillmenuOpen },
        { element: "skilllist", click: !0 },
        { element: "skillbar", click: !0 },
        { click: !0 },
        { click: !0 },
        { click: !0 },
        { click: !0, element: "partybtn" },
        { click: !0 },
        { click: !0 },
        { click: !0 },
        { click: !0 },
        { click: !0 },
        { click: !0 },
        { element: "chat" },
        { element: "chatinput" },
        { element: "syscog", step: 100, click: !0, fun: () => vi.settingsOpen },
        { click: !0 },
        { step: 100, fun: () => !vi.settingsOpen },
        { click: !0 },
        { click: !0 },
        { gate: () => Wn.player.level >= 25, click: !0 }
    ];
    let Bf = !1;
    const Ff = t => (
            Jr({ id: "ui/event1", pitch: -1 }),
            { ...Rf[t], msg: Wh.ui.tutorial.msg[t], Qj: 0 }
        ),
        Nf = new Al(0, 0.2),
        Lf = (t, e, s) =>
            !(!(s || e > 0) || (-1 !== t && vi.tutprogress !== t)) &&
            (le.update(i =>
                i
                    ? ((i.Qj = Math.min(100, s || i.Qj + e)),
                      (i.complete = i.Qj >= 100),
                      i.complete &&
                          !i.closing &&
                          ((i.closing = !0),
                          Jr({ id: "ui/event2", gain: 0.4, pitch: -1 }),
                          setTimeout(() => {
                              le.set(),
                                  setTimeout(() => {
                                      cs.update(
                                          t => (
                                              tu(
                                                  "tutorial",
                                                  "completestep",
                                                  t,
                                                  Math.round(
                                                      performance.now() / 1e3
                                                  )
                                              ),
                                              Rf[t + 1] &&
                                                  Rf[t + 1].element &&
                                                  "string" !=
                                                      typeof Rf[t + 1]
                                                          .element &&
                                                  (Rf[t + 1].element = Rf[
                                                      t + 1
                                                  ].element()),
                                              t + 1
                                          )
                                      );
                                  }, 100);
                          }, 1e3)),
                      i)
                    : Ff(t)
            ),
            !0);
    var Of = Object.freeze({
        __proto__: null,
        steps: Rf,
        onWorldEnter: () => {
            Nf.reset(Wn.smoothtime),
                Bf ||
                    ((Bf = !0),
                    cs.subscribe(t => {
                        const e = Rf[t];
                        e && (void 0 === e.gate || e.gate())
                            ? le.set(Ff(t))
                            : le.set();
                    }));
        },
        postTick: () => {
            const t = Rf[vi.tutprogress];
            t &&
                Nf.done(Wn.smoothtime) &&
                (Nf.reset(Wn.smoothtime),
                (void 0 === t.gate || t.gate()) &&
                    (t.gate && t.gate() && Lf(vi.tutprogress, void 0, 1),
                    t.fun && t.fun() && Lf(vi.tutprogress, t.step),
                    t.fixed && Lf(vi.tutprogress, void 0, t.fixed())));
        },
        tut: Lf
    });
    const { Map: qf } = xt;
    function Hf(t, e, s) {
        const i = t.slice();
        return (i[27] = e[s]), i;
    }
    function Wf(t, e, s) {
        const i = t.slice();
        return (i[30] = e[s]), i;
    }
    function Zf(t, e, s) {
        const i = t.slice();
        return (i[33] = e[s]), i;
    }
    function jf(t) {
        let e, s, i, n;
        const a = [Vf, Gf],
            r = [];
        function o(t, e) {
            return "whisper" != t[33].channel && void 0 !== t[33].faction
                ? 0
                : 1;
        }
        return (
            (e = o(t)),
            (s = r[e] = a[e](t)),
            {
                c() {
                    s.c(), (i = _());
                },
                m(t, s) {
                    r[e].m(t, s), $(t, i, s), (n = !0);
                },
                p(t, n) {
                    let l = e;
                    (e = o(t)) === l
                        ? r[e].p(t, n)
                        : (ft(),
                          yt(r[l], 1, 1, () => {
                              r[l] = null;
                          }),
                          gt(),
                          (s = r[e]) || (s = r[e] = a[e](t)).c(),
                          vt(s, 1),
                          s.m(i.parentNode, i));
                },
                i(t) {
                    n || (vt(s), (n = !0));
                },
                o(t) {
                    yt(s), (n = !1);
                },
                d(t) {
                    r[e].d(t), t && S(i);
                }
            }
        );
    }
    function Gf(e) {
        let s,
            i,
            n,
            a,
            r = e[33].sender + "";
        return {
            c() {
                (s = E("span")),
                    (i = C(r)),
                    (a = T()),
                    U(
                        s,
                        "class",
                        (n = "textf" + e[33].faction + " svelte-1vrlsr3")
                    );
            },
            m(t, e) {
                $(t, s, e), k(s, i), $(t, a, e);
            },
            p(t, e) {
                64 & e[0] && r !== (r = t[33].sender + "") && z(i, r),
                    64 & e[0] &&
                        n !==
                            (n = "textf" + t[33].faction + " svelte-1vrlsr3") &&
                        U(s, "class", n);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), t && S(a);
            }
        };
    }
    function Vf(t) {
        let e;
        const s = new Kd({
            props: {
                name: t[33].sender,
                pclass: t[33].cclass,
                level: t[33].level,
                faction: t[33].faction,
                sub: t[33].sub
            }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                64 & e[0] && (i.name = t[33].sender),
                    64 & e[0] && (i.pclass = t[33].cclass),
                    64 & e[0] && (i.level = t[33].level),
                    64 & e[0] && (i.faction = t[33].faction),
                    64 & e[0] && (i.sub = t[33].sub),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Yf(t) {
        let e,
            s,
            i,
            n = t[33].text + "";
        return {
            c() {
                (e = E("span")),
                    (s = C(n)),
                    U(
                        e,
                        "class",
                        (i = "text" + t[33].channel + " svelte-1vrlsr3")
                    );
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, a) {
                64 & a[0] && n !== (n = t[33].text + "") && z(s, n),
                    64 & a[0] &&
                        i !==
                            (i = "text" + t[33].channel + " svelte-1vrlsr3") &&
                        U(e, "class", i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Jf(t) {
        let e,
            s,
            i = t[33].text + "";
        return {
            c() {
                U(
                    (e = E("span")),
                    "class",
                    (s = "text" + t[33].channel + " svelte-1vrlsr3")
                );
            },
            m(t, s) {
                $(t, e, s), (e.innerHTML = i);
            },
            p(t, n) {
                64 & n[0] && i !== (i = t[33].text + "") && (e.innerHTML = i),
                    64 & n[0] &&
                        s !==
                            (s = "text" + t[33].channel + " svelte-1vrlsr3") &&
                        U(e, "class", s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Xf(t, e) {
        let s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u = e[33].time + "",
            m = e[33].channel + "",
            p = e[33].sender && jf(e);
        function f(t, e) {
            return t[33].interpolate ? Jf : Yf;
        }
        let g = f(e),
            v = g(e);
        return {
            key: t,
            first: null,
            c() {
                (s = E("article")),
                    (i = E("div")),
                    (n = E("span")),
                    (a = C(u)),
                    (r = E("span")),
                    (o = E("span")),
                    (l = C(m)),
                    (c = T()),
                    p && p.c(),
                    v.c(),
                    U(n, "class", "time svelte-1vrlsr3"),
                    U(o, "class", "capitalize channel svelte-1vrlsr3"),
                    U(
                        r,
                        "class",
                        (h = "text" + e[33].channel + " content svelte-1vrlsr3")
                    ),
                    U(i, "class", "linewrap svelte-1vrlsr3"),
                    U(s, "class", "line svelte-1vrlsr3"),
                    (this.first = s);
            },
            m(t, e) {
                $(t, s, e),
                    k(s, i),
                    k(i, n),
                    k(n, a),
                    k(i, r),
                    k(r, o),
                    k(o, l),
                    k(r, c),
                    p && p.m(r, null),
                    v.m(i, null),
                    (d = !0);
            },
            p(t, e) {
                (!d || 64 & e[0]) && u !== (u = t[33].time + "") && z(a, u),
                    (!d || 64 & e[0]) &&
                        m !== (m = t[33].channel + "") &&
                        z(l, m),
                    t[33].sender
                        ? p
                            ? (p.p(t, e), vt(p, 1))
                            : ((p = jf(t)).c(), vt(p, 1), p.m(r, null))
                        : p &&
                          (ft(),
                          yt(p, 1, 1, () => {
                              p = null;
                          }),
                          gt()),
                    (!d ||
                        (64 & e[0] &&
                            h !==
                                (h =
                                    "text" +
                                    t[33].channel +
                                    " content svelte-1vrlsr3"))) &&
                        U(r, "class", h),
                    g === (g = f(t)) && v
                        ? v.p(t, e)
                        : (v.d(1), (v = g(t)) && (v.c(), v.m(i, null)));
            },
            i(t) {
                d || (vt(p), (d = !0));
            },
            o(t) {
                yt(p), (d = !1);
            },
            d(t) {
                t && S(s), p && p.d(), v.d();
            }
        };
    }
    function Qf(t) {
        let e,
            s,
            i,
            n,
            a,
            r = t[30] + "";
        function o(...e) {
            return t[22](t[30], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    (s = C("/")),
                    (i = C(r)),
                    U(
                        e,
                        "class",
                        (n =
                            "choice textsystem text" +
                            t[30] +
                            " svelte-1vrlsr3")
                    ),
                    (a = P(e, "click", o));
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(e, s) {
                t = e;
            },
            d(t) {
                t && S(e), a();
            }
        };
    }
    function Kf(t) {
        let e,
            s,
            i,
            n,
            a = t[27] + "";
        function r(...e) {
            return t[26](t[27], ...e);
        }
        return {
            c() {
                (e = E("small")),
                    (s = C(a)),
                    U(
                        e,
                        "class",
                        (i =
                            "btn border black text" +
                            (t[5].indexOf(t[27]) < 0 ? t[27] : "grey") +
                            " svelte-1vrlsr3")
                    ),
                    (n = P(e, "click", r));
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(s, n) {
                (t = s),
                    32 & n[0] &&
                        i !==
                            (i =
                                "btn border black text" +
                                (t[5].indexOf(t[27]) < 0 ? t[27] : "grey") +
                                " svelte-1vrlsr3") &&
                        U(e, "class", i);
            },
            d(t) {
                t && S(e), n();
            }
        };
    }
    function tg(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y = [],
            b = new qf(),
            w = t[6];
        const x = t => t[33].id;
        for (let e = 0; e < w.length; e += 1) {
            let s = Zf(t, w, e),
                i = x(s);
            b.set(i, (y[e] = Xf(i, s)));
        }
        let T = Object.keys(Od),
            _ = [];
        for (let e = 0; e < T.length; e += 1) _[e] = Qf(Wf(t, T, e));
        let I = t[10],
            A = [];
        for (let e = 0; e < I.length; e += 1) A[e] = Kf(Hf(t, I, e));
        return {
            c() {
                (e = E("div")), (s = E("section"));
                for (let t = 0; t < y.length; t += 1) y[t].c();
                (i = E("div")),
                    (n = E("section")),
                    (r = E("div")),
                    (o = E("div"));
                for (let t = 0; t < _.length; t += 1) _[t].c();
                ((l = E("div")).textContent = "/[playername]"),
                    (c = E("div")),
                    (h = C(t[4])),
                    (u = E("input")),
                    (p = E("div"));
                for (let t = 0; t < A.length; t += 1) A[t].c();
                U(s, "id", "chat"),
                    U(s, "class", "panel frame svelte-1vrlsr3"),
                    U(l, "class", "choice textwhisper"),
                    U(
                        o,
                        "class",
                        "panel context commandlist textsystem svelte-1vrlsr3"
                    ),
                    D(o, "display", t[3] ? "block" : "none"),
                    U(
                        c,
                        "class",
                        (d =
                            "command btn black text" +
                            (qd[t[4]]
                                ? qd[t[4]].chat
                                    ? t[4]
                                    : "system"
                                : "whisper") +
                            " svelte-1vrlsr3")
                    ),
                    U(u, "maxlength", "480"),
                    U(u, "type", "text"),
                    U(u, "class", "svelte-1vrlsr3"),
                    U(r, "id", "chatinput"),
                    U(
                        r,
                        "class",
                        "inputcontainer panel-black border black svelte-1vrlsr3"
                    ),
                    U(
                        n,
                        "class",
                        (m =
                            "chatsection " +
                            (t[2] ? "" : "hidden") +
                            " svelte-1vrlsr3")
                    ),
                    U(
                        p,
                        "class",
                        (f =
                            "channelselect " +
                            (t[2] ? "hidden" : "") +
                            " svelte-1vrlsr3")
                    ),
                    U(i, "class", "lowercontainer svelte-1vrlsr3"),
                    U(
                        e,
                        "class",
                        "l-corner-ll container uiscaled svelte-1vrlsr3"
                    ),
                    (v = [
                        P(c, "click", function () {
                            t[23].apply(this, arguments);
                        }),
                        P(u, "input", t[25])
                    ]);
            },
            m(a, d) {
                $(a, e, d), k(e, s);
                for (let t = 0; t < y.length; t += 1) y[t].m(s, null);
                t[21](s), k(e, i), k(i, n), k(n, r), k(r, o);
                for (let t = 0; t < _.length; t += 1) _[t].m(o, null);
                k(o, l), k(r, c), k(c, h), k(r, u), t[24](u), k(i, p);
                for (let t = 0; t < A.length; t += 1) A[t].m(p, null);
                g = !0;
            },
            p(e, i) {
                const a = (t = e)[6];
                if (
                    (ft(),
                    (y = St(y, i, x, 1, t, a, b, s, $t, Xf, null, Zf)),
                    gt(),
                    256 & i[0])
                ) {
                    let e;
                    for (T = Object.keys(Od), e = 0; e < T.length; e += 1) {
                        const s = Wf(t, T, e);
                        _[e]
                            ? _[e].p(s, i)
                            : ((_[e] = Qf(s)), _[e].c(), _[e].m(o, l));
                    }
                    for (; e < _.length; e += 1) _[e].d(1);
                    _.length = T.length;
                }
                if (
                    ((!g || 8 & i[0]) &&
                        D(o, "display", t[3] ? "block" : "none"),
                    (!g || 16 & i[0]) && z(h, t[4]),
                    (!g ||
                        (16 & i[0] &&
                            d !==
                                (d =
                                    "command btn black text" +
                                    (qd[t[4]]
                                        ? qd[t[4]].chat
                                            ? t[4]
                                            : "system"
                                        : "whisper") +
                                    " svelte-1vrlsr3"))) &&
                        U(c, "class", d),
                    (!g ||
                        (4 & i[0] &&
                            m !==
                                (m =
                                    "chatsection " +
                                    (t[2] ? "" : "hidden") +
                                    " svelte-1vrlsr3"))) &&
                        U(n, "class", m),
                    1568 & i[0])
                ) {
                    let e;
                    for (I = t[10], e = 0; e < I.length; e += 1) {
                        const s = Hf(t, I, e);
                        A[e]
                            ? A[e].p(s, i)
                            : ((A[e] = Kf(s)), A[e].c(), A[e].m(p, null));
                    }
                    for (; e < A.length; e += 1) A[e].d(1);
                    A.length = I.length;
                }
                (!g ||
                    (4 & i[0] &&
                        f !==
                            (f =
                                "channelselect " +
                                (t[2] ? "hidden" : "") +
                                " svelte-1vrlsr3"))) &&
                    U(p, "class", f);
            },
            i(t) {
                if (!g) {
                    for (let t = 0; t < w.length; t += 1) vt(y[t]);
                    g = !0;
                }
            },
            o(t) {
                for (let t = 0; t < y.length; t += 1) yt(y[t]);
                g = !1;
            },
            d(s) {
                s && S(e);
                for (let t = 0; t < y.length; t += 1) y[t].d();
                t[21](null), M(_, s), t[24](null), M(A, s), a(v);
            }
        };
    }
    function eg(t, e, s) {
        let i, n, a, r;
        h(t, Zt, t => s(14, (i = t))),
            h(t, Le, t => s(4, (n = t))),
            h(t, ps, t => s(5, (a = t)));
        let o,
            l = !0;
        G(() => {
            l =
                r &&
                (r.offsetHeight + r.scrollTop > r.scrollHeight - 20 ||
                    0 == r.scrollTop);
        }),
            Y(() => {
                !1 !== l && r.scrollTo(0, r.scrollHeight);
            });
        let c = !1,
            d = [],
            u = 0,
            m = !1,
            p = "global";
        const g = new Map([
                ["c", "clan"],
                ["p", "party"],
                ["g", "global"],
                ["f", "faction"]
            ]),
            v = t => {
                const e = t.match(/^\/[a-zA-Z0-9]+ /g);
                if (e) {
                    const a = e[0].substring(1, e[0].length - 1);
                    if ("r" === a || "w" === a)
                        for (let t = i.length - 1; t > 0; --t) {
                            const e = i[t];
                            "whisper" == e.channel &&
                                "from" === e.sender.substring(0, 4) &&
                                (f(Le, (n = e.sender.slice(5))), (t = 0));
                        }
                    else f(Le, (n = g.has(a) ? g.get(a) : a));
                    s(1, (o.value = t.substring(e[0].length)), o);
                }
            },
            y = t => qd[t] && qd[t].chat,
            b = t => {
                if (13 === t.keyCode)
                    if (t.target == o) {
                        if ("" != t.target.value) {
                            Lf(39, 100);
                            const e = t.target.value.match(/^\/[a-zA-Z0-9]+/g);
                            e &&
                                (f(Le, (n = e[0].substring(1))),
                                s(1, (o.value = ""), o)),
                                Ld(n, o.value);
                            const i = `/${n} ` + o.value;
                            d[d.length - 1] != i && (u = d.push(i)),
                                s(1, (o.value = ""), o),
                                s(2, (c = !1)),
                                o.blur();
                        } else y(n) || Ld(n, o.value), s(2, (c = !1)), o.blur();
                        y(n) ? (p = n) : f(Le, (n = p));
                    } else
                        document.activeElement == document.body &&
                            (s(2, (c = !0)), o.focus(), (rt(), it).then(w));
                else
                    (38 !== t.keyCode && 40 !== t.keyCode) || !d.length
                        ? 27 === t.keyCode && (s(2, (c = !1)), o.blur())
                        : t.target == o &&
                          ((u += 38 === t.keyCode ? -1 : 1),
                          (u = na(u, 0, d.length - 1)),
                          v(d[u]),
                          t.preventDefault());
            },
            w = t => {
                o && o.focus(), Lf(38, 100);
            },
            x = t => {
                f(Le, (n = t)), s(3, (m = !1)), o && o.focus();
            };
        V(() => {
            document.addEventListener("keydown", b);
        }),
            J(() => {
                document.removeEventListener("keydown", b), s(1, (o = void 0));
            });
        const k = t => {
            const e = a.indexOf(t);
            ps.update(s => (e >= 0 ? s.splice(e, 1) : s.push(t), s));
        };
        let $;
        return (
            (t.$$.update = () => {
                16416 & t.$$.dirty[0] &&
                    s(6, ($ = i.filter(t => a.indexOf(t.channel) < 0)));
            }),
            [
                r,
                o,
                c,
                m,
                n,
                a,
                $,
                v,
                x,
                k,
                ["global", "faction", "party", "clan", "pvp", "inv"],
                l,
                u,
                p,
                i,
                d,
                void 0,
                g,
                y,
                b,
                w,
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(0, (r = t));
                    });
                },
                (t, e) => x(t),
                t => s(3, (m = !m)),
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(1, (o = t));
                    });
                },
                t => v(t.target.value),
                (t, e) => k(t)
            ]
        );
    }
    class sg extends Pt {
        constructor(t) {
            super(), _t(this, t, eg, tg, o, {}, [-1, -1]);
        }
    }
    function ig(t) {
        let e, s;
        return {
            c() {
                (e = E("img")).src !==
                    (s = "/assets/ui/icons/" + t[1] + ".svg?v=35201089") &&
                    U(e, "src", s),
                    U(e, "class", "titleicon svgicon svelte-1rw636");
            },
            m(t, s) {
                $(t, e, s);
            },
            p(t, i) {
                2 & i &&
                    e.src !==
                        (s = "/assets/ui/icons/" + t[1] + ".svg?v=35201089") &&
                    U(e, "src", s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function ng(e) {
        let s, i, n;
        return {
            c() {
                (s = E("img")).src !==
                    (i = "/assets/ui/icons/cross.svg?v=35201089") &&
                    U(s, "src", "/assets/ui/icons/cross.svg?v=35201089"),
                    U(s, "class", "btn black svgicon"),
                    (n = P(s, "click", e[7]));
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            d(t) {
                t && S(s), n();
            }
        };
    }
    function ag(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c = t[1] && ig(t),
            h = t[2] && ng(t);
        const p = t[6].default,
            f = d(p, t, t[5], null);
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    c && c.c(),
                    (i = E("div")),
                    (n = E("div")),
                    (a = C(t[0])),
                    h && h.c(),
                    (r = E("div")),
                    f && f.c(),
                    U(n, "name", "title"),
                    U(i, "class", "textprimary title svelte-1rw636"),
                    U(s, "class", "titleframe svelte-1rw636"),
                    U(r, "class", "slot svelte-1rw636"),
                    U(r, "style", (o = t[3] ? "overflow-y: auto;" : "")),
                    U(e, "class", "window panel-black svelte-1rw636");
            },
            m(t, o) {
                $(t, e, o),
                    k(e, s),
                    c && c.m(s, null),
                    k(s, i),
                    k(i, n),
                    k(n, a),
                    h && h.m(s, null),
                    k(e, r),
                    f && f.m(r, null),
                    (l = !0);
            },
            p(t, [e]) {
                t[1]
                    ? c
                        ? c.p(t, e)
                        : ((c = ig(t)).c(), c.m(s, i))
                    : c && (c.d(1), (c = null)),
                    (!l || 1 & e) && z(a, t[0]),
                    t[2]
                        ? h
                            ? h.p(t, e)
                            : ((h = ng(t)).c(), h.m(s, null))
                        : h && (h.d(1), (h = null)),
                    f &&
                        f.p &&
                        32 & e &&
                        f.p(u(p, t, t[5], null), m(p, t[5], e, null)),
                    (!l ||
                        (8 & e &&
                            o !== (o = t[3] ? "overflow-y: auto;" : ""))) &&
                        U(r, "style", o);
            },
            i(t) {
                l || (vt(f, t), (l = !0));
            },
            o(t) {
                yt(f, t), (l = !1);
            },
            d(t) {
                t && S(e), c && c.d(), h && h.d(), f && f.d(t);
            }
        };
    }
    function rg(t, e, s) {
        const i = X();
        let { title: n = "Title" } = e,
            { icon: a } = e,
            { close: r = !0 } = e,
            { scroll: o = !1 } = e,
            { $$slots: l = {}, $$scope: c } = e;
        return (
            (t.$set = t => {
                "title" in t && s(0, (n = t.title)),
                    "icon" in t && s(1, (a = t.icon)),
                    "close" in t && s(2, (r = t.close)),
                    "scroll" in t && s(3, (o = t.scroll)),
                    "$$scope" in t && s(5, (c = t.$$scope));
            }),
            [n, a, r, o, i, c, l, () => i("close")]
        );
    }
    class og extends Pt {
        constructor(t) {
            super(),
                _t(this, t, rg, ag, o, {
                    title: 0,
                    icon: 1,
                    close: 2,
                    scroll: 3
                });
        }
    }
    const lg = (t, e) => {
            const { c: s, s: i, g: n } = (t => {
                const e = (t || 0).toString().split("");
                return {
                    c: e.splice(-2).join(""),
                    s: e.splice(-2).join(""),
                    g: e.join("")
                };
            })(t);
            let a = "<span/>";
            return (
                "" != n &&
                    (a += `<span class=${
                        e ? "textred" : "textgold"
                    }>${n}</span> <img class=texticon src='/assets/ui/currency/gold.${kr}?v=35201089'/>`),
                "" != i &&
                    (a += `<span class=${
                        e ? "textred" : "textsilver"
                    }>${i}</span> <img class=texticon src='/assets/ui/currency/silver.${kr}?v=35201089'/>`),
                "" != s &&
                    (a += `<span class=${
                        e ? "textred" : "textcopper"
                    }>${s}</span> <img class=texticon src='/assets/ui/currency/copper.${kr}?v=35201089'/>`),
                a + "</span>"
            );
        },
        cg = [
            t =>
                t.replace(
                    /\$c(\d)/g,
                    (t, e) => `<img class=texticon src='${Vd(e)}'>`
                ),
            t =>
                t.replace(
                    /\$l(\d+)/g,
                    (t, e) => `<span class=textwhite>${e}</span>`
                ),
            t =>
                t.replace(
                    /\$f(\d)(\w*)/g,
                    (t, e, s) => `<span class=textf${e}>${s}</span>`
                ),
            t => t.replace(/\$g(\d+)/g, (t, e) => lg(e, !1)),
            t =>
                t.replace(
                    /\$fm(\d+)/g,
                    (t, e) =>
                        `<span class=textfame><img class=texticon src='/assets/ui/icons/crown.svg?v=35201089'> ${e}</span>`
                ),
            t =>
                t.replace(
                    /\$gt/g,
                    (t, e) =>
                        '<img class="svgicon" src="/assets/ui/icons/check.svg?v=35201089">'
                ),
            t =>
                t.replace(
                    /\$sp(\d+)/g,
                    (t, e) =>
                        "<img class=texticon src=/assets/ui/icons/gem.svg?v=35201089/>" +
                        e
                )
        ],
        hg = t => cg.reduce((t, e) => e(t), t);
    function dg(t, e, s) {
        const i = t.slice();
        return (i[4] = e[s]), (i[6] = s), i;
    }
    function ug(t) {
        let e, s;
        const i = new og({
            props: {
                title: "Interaction",
                $$slots: { default: [pg] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", t[3]),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(
                            e,
                            "class",
                            "l-upperLeftModal container uiscaled svelte-1uoyfak"
                        );
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(t, e) {
                    const s = {};
                    129 & e && (s.$$scope = { dirty: e, ctx: t }), i.$set(s);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    function mg(t) {
        let e,
            s,
            i,
            n,
            a = hg(t[4]) + "";
        function r(...e) {
            return t[2](t[6], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    (s = E("span")),
                    U(e, "class", "choice"),
                    U(e, "value", (i = t[6])),
                    (n = P(e, "click", r));
            },
            m(t, i) {
                $(t, e, i), k(e, s), (s.innerHTML = a);
            },
            p(e, i) {
                (t = e),
                    1 & i && a !== (a = hg(t[4]) + "") && (s.innerHTML = a);
            },
            d(t) {
                t && S(e), n();
            }
        };
    }
    function pg(t) {
        let e,
            s,
            i,
            n,
            a,
            r = t[0].title + "",
            o = t[0].text + "",
            l = t[0].choices,
            c = [];
        for (let e = 0; e < l.length; e += 1) c[e] = mg(dg(t, l, e));
        return {
            c() {
                (e = E("div")),
                    (s = E("h3")),
                    (i = C(r)),
                    (n = E("p")),
                    (a = C(o));
                for (let t = 0; t < c.length; t += 1) c[t].c();
                U(s, "class", "textprimary name svelte-1uoyfak"),
                    U(e, "class", "container svelte-1uoyfak");
            },
            m(t, r) {
                $(t, e, r), k(e, s), k(s, i), k(e, n), k(n, a);
                for (let t = 0; t < c.length; t += 1) c[t].m(e, null);
            },
            p(t, s) {
                if (
                    (1 & s && r !== (r = t[0].title + "") && z(i, r),
                    1 & s && o !== (o = t[0].text + "") && z(a, o),
                    3 & s)
                ) {
                    let i;
                    for (l = t[0].choices, i = 0; i < l.length; i += 1) {
                        const n = dg(t, l, i);
                        c[i]
                            ? c[i].p(n, s)
                            : ((c[i] = mg(n)), c[i].c(), c[i].m(e, null));
                    }
                    for (; i < c.length; i += 1) c[i].d(1);
                    c.length = l.length;
                }
            },
            d(t) {
                t && S(e), M(c, t);
            }
        };
    }
    function fg(t) {
        let e,
            s,
            i = t[0] && ug(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[0]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = ug(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function gg(t, e, s) {
        let i;
        function n(t) {
            gd(tr.clientPlayerInteract.packData({ id: t })),
                f(Nt, (i = void 0));
        }
        h(t, Nt, t => s(0, (i = t)));
        return [
            i,
            n,
            (t, e) => n(t),
            () => {
                f(Nt, (i = void 0));
            }
        ];
    }
    class vg extends Pt {
        constructor(t) {
            super(), _t(this, t, gg, fg, o, {});
        }
    }
    function yg(t) {
        let e, s, i, n, a, r, o, l, c;
        const h = t[7].default,
            p = d(h, t, t[6], null);
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    (i = E("span")),
                    (n = C(t[0])),
                    (a = E("span")),
                    (r = C(t[1])),
                    p && p.c(),
                    U(i, "class", "left svelte-kl29tr"),
                    U(a, "class", "right svelte-kl29tr"),
                    U(
                        s,
                        "class",
                        (o = "progressBar " + t[3] + " svelte-kl29tr")
                    ),
                    D(s, "width", t[2] + "%"),
                    D(s, "font-size", t[4]),
                    U(
                        e,
                        "class",
                        (l = "bar " + (t[5] ? "dark" : "") + " svelte-kl29tr")
                    ),
                    D(e, "z-index", "hp" == t[3] ? "1" : "0");
            },
            m(t, o) {
                $(t, e, o),
                    k(e, s),
                    k(s, i),
                    k(i, n),
                    k(s, a),
                    k(a, r),
                    p && p.m(e, null),
                    (c = !0);
            },
            p(t, [i]) {
                (!c || 1 & i) && z(n, t[0]),
                    (!c || 2 & i) && z(r, t[1]),
                    (!c ||
                        (8 & i &&
                            o !==
                                (o =
                                    "progressBar " +
                                    t[3] +
                                    " svelte-kl29tr"))) &&
                        U(s, "class", o),
                    (!c || 4 & i) && D(s, "width", t[2] + "%"),
                    (!c || 16 & i) && D(s, "font-size", t[4]),
                    p &&
                        p.p &&
                        64 & i &&
                        p.p(u(h, t, t[6], null), m(h, t[6], i, null)),
                    (!c ||
                        (32 & i &&
                            l !==
                                (l =
                                    "bar " +
                                    (t[5] ? "dark" : "") +
                                    " svelte-kl29tr"))) &&
                        U(e, "class", l),
                    (!c || 8 & i) && D(e, "z-index", "hp" == t[3] ? "1" : "0");
            },
            i(t) {
                c || (vt(p, t), (c = !0));
            },
            o(t) {
                yt(p, t), (c = !1);
            },
            d(t) {
                t && S(e), p && p.d(t);
            }
        };
    }
    function bg(t, e, s) {
        let { left: i } = e,
            { right: n } = e,
            { fract: a } = e,
            { barcol: r } = e,
            { size: o } = e,
            { darken: l } = e,
            { $$slots: c = {}, $$scope: h } = e;
        return (
            (t.$set = t => {
                "left" in t && s(0, (i = t.left)),
                    "right" in t && s(1, (n = t.right)),
                    "fract" in t && s(2, (a = t.fract)),
                    "barcol" in t && s(3, (r = t.barcol)),
                    "size" in t && s(4, (o = t.size)),
                    "darken" in t && s(5, (l = t.darken)),
                    "$$scope" in t && s(6, (h = t.$$scope));
            }),
            [i, n, a, r, o, l, h, c]
        );
    }
    class wg extends Pt {
        constructor(t) {
            super(),
                _t(this, t, bg, yg, l, {
                    left: 0,
                    right: 1,
                    fract: 2,
                    barcol: 3,
                    size: 4,
                    darken: 5
                });
        }
    }
    function xg(t) {
        let e,
            s,
            i = t[2] > 99 ? Math.round(t[2] / 60) + "m" : t[2] + "s";
        return {
            c() {
                (e = E("div")), (s = C(i)), U(e, "class", "time svelte-jq1jh2");
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, e) {
                4 & e &&
                    i !==
                        (i =
                            t[2] > 99
                                ? Math.round(t[2] / 60) + "m"
                                : t[2] + "s") &&
                    z(s, i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function kg(e) {
        let s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u = "default" === e[1] && xg(e);
        return {
            c() {
                (s = E("div")),
                    u && u.c(),
                    (i = E("div")),
                    (n = E("img")),
                    (o = E("div")),
                    (l = E("div")),
                    (c = C(e[3])),
                    U(n, "class", (a = "icon " + e[1] + " svelte-jq1jh2")),
                    n.src !== (r = e[5]) && U(n, "src", r),
                    U(o, "class", "overlay cd svelte-jq1jh2"),
                    D(o, "height", e[4] + "%"),
                    U(l, "class", "stacks slottext svelte-jq1jh2"),
                    U(
                        i,
                        "class",
                        (h =
                            "slot border " +
                            (1 === e[0].logic.type ? "negative" : "positive") +
                            " svelte-jq1jh2")
                    ),
                    U(
                        s,
                        "class",
                        (d =
                            "container " +
                            (e[2] < 5 ? "soon" : "") +
                            " svelte-jq1jh2")
                    );
            },
            m(t, e) {
                $(t, s, e),
                    u && u.m(s, null),
                    k(s, i),
                    k(i, n),
                    k(i, o),
                    k(i, l),
                    k(l, c);
            },
            p(t, [e]) {
                "default" === t[1]
                    ? u
                        ? u.p(t, e)
                        : ((u = xg(t)).c(), u.m(s, i))
                    : u && (u.d(1), (u = null)),
                    2 & e &&
                        a !== (a = "icon " + t[1] + " svelte-jq1jh2") &&
                        U(n, "class", a),
                    32 & e && n.src !== (r = t[5]) && U(n, "src", r),
                    16 & e && D(o, "height", t[4] + "%"),
                    8 & e && z(c, t[3]),
                    1 & e &&
                        h !==
                            (h =
                                "slot border " +
                                (1 === t[0].logic.type
                                    ? "negative"
                                    : "positive") +
                                " svelte-jq1jh2") &&
                        U(i, "class", h),
                    4 & e &&
                        d !==
                            (d =
                                "container " +
                                (t[2] < 5 ? "soon" : "") +
                                " svelte-jq1jh2") &&
                        U(s, "class", d);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), u && u.d();
            }
        };
    }
    function $g(t, e, s) {
        let i;
        h(t, Se, t => s(6, (i = t)));
        let n,
            a,
            r,
            o,
            { buff: l } = e,
            { mode: c } = e,
            d = "default" == c ? 29 : 21;
        return (
            (t.$set = t => {
                "buff" in t && s(0, (l = t.buff)),
                    "mode" in t && s(1, (c = t.mode));
            }),
            (t.$$.update = () => {
                1 & t.$$.dirty &&
                    s(5, (o = `/assets/ui/${l.logic.icon}.${$r}?v=35201089`)),
                    69 & t.$$.dirty &&
                        (s(
                            2,
                            (n = Math.max(0, Math.ceil(l.timer.remaining(i))))
                        ),
                        s(
                            4,
                            (r = ~~(
                                (Math.round(l.timer.fraction(i) * d) / d) *
                                100
                            ))
                        ),
                        s(
                            3,
                            (a =
                                l.diminish > 1
                                    ? l.diminish
                                    : l.stacks > 1
                                    ? l.stacks
                                    : "")
                        ));
            }),
            [l, c, n, a, r, o]
        );
    }
    class Sg extends Pt {
        constructor(t) {
            super(), _t(this, t, $g, kg, l, { buff: 0, mode: 1 });
        }
    }
    let Mg = 0,
        Eg = !1;
    const Cg = [0, 0, 0],
        Tg = { enemy: [1, 0, 0], friendly: [0, 1, 0], dead: [0.6, 0.6, 0.6] },
        _g = t => {
            if (Wn && Wn.player) {
                const e = tr.clientPlayerChangeTarget.packData({ target: t });
                gd(e);
            }
        };
    let Pg = 0;
    const Ug = (t, e = !0) => {
        (Mg = t),
            (Eg = e && Mg > 0),
            Yt.set(Eg ? "pointer" : "auto"),
            re.set(Mg);
    };
    let Ig = 0,
        zg = 0;
    let Ag = 0;
    const Dg = t => {
        if (Ag > 0) {
            let e = 0,
                s = 0;
            t = t.filter(
                t =>
                    void 0 !== t.transform &&
                    void 0 !== t.stats &&
                    t.stats.alive &&
                    t !== Wn.player &&
                    Wn.player.canCombatInteract(t) &&
                    Math.abs(fa(Wn.player.rot, Wn.player.rotationToV3(t.wU))) <
                        0.7
            );
            let i = 0 === Wn.player.target;
            for (let n = t.length - 1; n >= 0; --n) {
                const a = t[n];
                (1 === Ag) != Wn.player.hostility(a) > 0 &&
                    (i && (e = a.id),
                    Wn.player.target === a.id && (i = !0),
                    s || (s = a.id),
                    0 !== e && (n = 0));
            }
            0 === e && 0 !== s && (e = s), _g(e), (Ag = 0);
        }
    };
    var Rg = Object.freeze({
        __proto__: null,
        get hovertarget() {
            return Mg;
        },
        get hoverinteractive() {
            return Eg;
        },
        YD: Cg,
        setTarget: _g,
        init: () => {
            oo.lmb.onPress(t => {
                Pg = Wn.time;
            }),
                oo.lmb.onRelease(t => {
                    Mg > 0 && mo < 20 && Wn.time - Pg < 0.3 && _g(Mg);
                }),
                oo.nextTarget.onPress(t => {
                    Ag = t.shiftKey ? 1 : 2;
                }),
                oo.untarget.onPress(t => {
                    _g(0);
                });
        },
        setHoverTarget: Ug,
        preTick: t => {
            if (oo.shift.down) return;
            if (go)
                return void (
                    Mg > 0 &&
                    (mo >= 20 || Wn.time - Pg > 0.3) &&
                    Ug(0, !1)
                );
            xi(Cg, no[0], no[1], 0.5),
                Nn.unproject(Cg),
                Si(Cg, Cg, Nn.worldPosition),
                _i(Cg, Cg);
            const e = Mg;
            Mg = 0;
            let s = 1 / 0,
                i = !1;
            Wn.entities.array.forEach(t => {
                if (!t.transform.visible) return;
                const e = wi(Yn, t.transform.position);
                e[1] += 0.3 * t.size;
                const n = Ti(
                    e,
                    ((t, e, s) => {
                        Si(Gn, s, t);
                        const i = Pi(Gn, e);
                        return Ei(Gn, t, e, i);
                    })(Nn.worldPosition, Cg, e)
                );
                (void 0 === t.stats || t.stats.alive) &&
                    n < s &&
                    n < (t.size + 0.5) ** 2 &&
                    t.hudPos[2] < 1 &&
                    ((s = n),
                    (Mg = t.id),
                    (i =
                        3 !== t.constructor.type ||
                        t.canBePickedUpBy(Wn.player)));
            }),
                (e == Mg && i === Eg) || Ug(Mg, i);
        },
        tick: t => {
            if (!Wn.player) return;
            let e = Wn.player.target;
            const s = Mg && Wn.getEntityById(Mg);
            if (
                (s && 3 == s.constructor.type && (e = Mg),
                e !== Ig
                    ? ((Ig = e), (zg = 1))
                    : (zg = Math.max(zg * (1 - 20 * t), 0)),
                e > 0)
            ) {
                const t = Wn.getEntityById(e);
                if (void 0 !== t) {
                    xi(
                        hl.oZ.value,
                        t.transform.position[0],
                        0.5 * t.size + 0.5 + zg,
                        t.transform.position[2]
                    );
                    const e =
                        t.stats && t.stats.alive
                            ? Wn.player.hostility(t) > 0
                                ? Tg.enemy
                                : Tg.friendly
                            : Tg.dead;
                    en(hl.zW.value, ...e, 1 - zg);
                }
            } else xi(hl.oZ.value, 0, 0, 0);
        },
        parseHudTargets: Dg
    });
    const Bg = {
            hZ: {
                managers: [],
                partyBasedHostility: !1,
                allowRespawn: !0,
                pvpprotect: !0
            },
            arena1v1: {
                name: "Arena 3v3",
                queue: !0,
                instances: ["arena_ruins"],
                partyBasedHostility: !0,
                allowRespawn: !1,
                pvpprotect: !1,
                groupsize: 3,
                groupcount: 2
            },
            arena2v2: {
                name: "Arena 5v5",
                queue: !0,
                instances: ["arena_ruins2"],
                partyBasedHostility: !0,
                allowRespawn: !1,
                pvpprotect: !1,
                groupsize: 5,
                groupcount: 2
            },
            memberfind: { name: "Find members", queue: !0, partyfind: !0 }
        },
        Fg = {
            partyleave: t => ({
                name: Wh.ui.party.leave,
                fun: () => {
                    Ld("partyleave");
                }
            }),
            partyinvite: t => ({
                name: Wh.ui.party.invite,
                fun: () => {
                    Ld("partyinvite", t);
                }
            }),
            partykick: t => ({
                name: Wh.ui.party.kick,
                fun: () => {
                    Ld("partykick", t);
                }
            }),
            partygiveassistant: t => ({
                name: Wh.ui.party.giveAssistant,
                fun: () => {
                    Ld("partysetrole", t + " 1");
                }
            }),
            partygiveleader: t => ({
                name: Wh.ui.party.giveLeader,
                fun: () => {
                    Ld("partysetrole", t + " 2");
                }
            }),
            partyremoveassistant: t => ({
                name: Wh.ui.party.removeAssistant,
                fun: () => {
                    Ld("partysetrole", t + " 0");
                }
            }),
            partylink: t => ({
                name: Wh.ui.party.link,
                fun: () => {
                    Ld("partylink");
                }
            }),
            partycreate: t => ({
                name: Wh.ui.party.create,
                fun: () => {
                    Ld("partycreate");
                }
            }),
            whisper: t => ({
                name: Wh.ui.chat.whisper,
                fun: () => {
                    Le.set(t);
                }
            }),
            itemdrop: t => ({
                name: Wh.ui.inventory.drop,
                fun: () => {
                    Ld("itemdrop", t);
                }
            }),
            itemstash: t => ({
                name: Wh.ui.stash.stash,
                fun: () => {
                    Ld("itemstash", t);
                }
            }),
            itemmove: (t, e) => ({
                name: Wh.ui.inventory.equip,
                fun: () => {
                    Lf(13, 100), Ld("itemmove", `${t} ${e}`);
                }
            }),
            itemsplithalf: t => ({
                name: Wh.ui.inventory.splithalf,
                fun: () => {
                    Ld("itemsplithalf", t);
                }
            }),
            itemsplitone: t => ({
                name: Wh.ui.inventory.splitone,
                fun: () => {
                    Ld("itemsplitone", t);
                }
            }),
            itemuse: (t, e) => ({
                name: ff.get(e).name || Wh.ui.inventory.use,
                fun: () => {
                    gd(tr.clientPlayerSkill.packData({ id: e, info: [t] }));
                }
            }),
            startqueue: (t, e) => ({
                name: Bg[t].name,
                css: e ? "" : "disabled",
                fun: () => {
                    Ld("startqueue", t);
                }
            }),
            stopqueue: (t, e) => ({
                icon: "check",
                name: Bg[t].name,
                css: e ? "" : "disabled",
                fun: () => {
                    Ld("stopqueue", t);
                }
            })
        },
        Ng = (t, e) => {
            const s = [];
            0 === e.type &&
                (e.id == Wn.player.id
                    ? vi.partyinfo.membercount > 0
                        ? s.push(Fg.partyleave())
                        : s.push(Fg.partycreate())
                    : (e.faction == Wn.player.faction &&
                          (Wn.party.has(e.name)
                              ? vi.partyinfo.role > e.role &&
                                (2 == vi.partyinfo.role &&
                                    s.push(Fg.partykick(e.name)),
                                0 == e.role
                                    ? s.push(Fg.partygiveassistant(e.name))
                                    : 1 == e.role &&
                                      s.push(Fg.partyremoveassistant(e.name)),
                                vi.partyinfo.role > 1 &&
                                    s.push(Fg.partygiveleader(e.name)))
                              : s.push(Fg.partyinvite(e.name))),
                      s.push(Fg.whisper(e.name)))),
                Rt.set({ x: t.pageX, y: t.pageY, opts: s });
        },
        Lg = t => (t > 1e3 ? (t / 1e3).toFixed(1) + "k" : t + ""),
        Og = t => (t > 1e3 ? Math.round(t / 1e3) + "k" : t + ""),
        qg = t =>
            t < 999
                ? t + ""
                : qg(~~(t / 1e3)) + "," + ("00" + ~~(t % 1e3)).substr(-3, 3),
        Hg = (t, e) => (t.length > e ? `${t.slice(0, e - 2)}...` : t),
        Wg = iu({ 14: 0.1, 13: 0.1, 9: 0.1, 8: 0.1, 16: 0.1 }),
        Zg = iu({ 14: "%", 13: "%", 16: "%", 18: "%" }),
        jg = (t, e) => (
            Wg.has(t) && (e = (e *= Wg.get(t)).toFixed(e >= 0.1 ? 1 : 2)),
            e + (Zg.get(t) || "")
        );
    function Gg(t, e, s) {
        const i = t.slice();
        return (i[26] = e[s]), i;
    }
    function Vg(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g = [],
            v = new Map(),
            y = "default" == t[1] && Yg();
        const b = new wg({
            props: {
                size: "1.3em",
                fract: t[7],
                barcol: t[12],
                left: t[9],
                right: t[5],
                darken: !1,
                $$slots: { default: [Xg] },
                $$scope: { ctx: t }
            }
        });
        let w = ("default" == t[1] || t[18]) && Qg(t);
        function x(t, e) {
            return t[14].role >= 1 ? ev : tv;
        }
        let M = x(t),
            C = M(t),
            T = "default" == t[1] && t[14].combat && t[14].alive && sv(),
            I = t[14].buffs.slice(0, t[4]);
        const z = t => t[26].caster + 1e5 * t[26].id;
        for (let e = 0; e < I.length; e += 1) {
            let s = Gg(t, I, e),
                i = z(s);
            v.set(i, (g[e] = iv(i, s)));
        }
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    y && y.c(),
                    (i = E("img")),
                    (o = E("div")),
                    Et(b.$$.fragment),
                    w && w.c(),
                    (l = _()),
                    C.c(),
                    (c = _()),
                    T && T.c(),
                    (h = E("div"));
                for (let t = 0; t < g.length; t += 1) g[t].c();
                U(
                    i,
                    "class",
                    (n =
                        "pclass icon border black bgc" +
                        t[14].class +
                        " svelte-1rrmvqb")
                ),
                    i.src !==
                        (r =
                            (!1 !== t[14].powertype
                                ? "/assets/ui/mobpower/" + t[14].powertype
                                : "/assets/ui/classes/" + t[14].class) +
                            "." +
                            kr) && U(i, "src", r),
                    U(s, "class", "iconcontainer svelte-1rrmvqb"),
                    U(
                        h,
                        "class",
                        (d = "buffarray " + t[1] + " svelte-1rrmvqb")
                    ),
                    U(
                        o,
                        "class",
                        (u =
                            "panel-black bars " +
                            (t[17] && t[14].id == t[17].id && "party" == t[1]
                                ? "target"
                                : "") +
                            " " +
                            (t[14].id && t[14].range ? "targetable" : "") +
                            " svelte-1rrmvqb")
                    ),
                    U(e, "id", t[3]),
                    U(
                        e,
                        "class",
                        (m =
                            "grid " +
                            (t[2] ? "right" : "left") +
                            " svelte-1rrmvqb")
                    ),
                    D(e, "font-size", t[16] + "%"),
                    D(e, "opacity", t[14].range ? "" : 0.5),
                    (f = [
                        P(e, "click", t[19]),
                        P(e, "contextmenu", function () {
                            t[25].apply(this, arguments);
                        })
                    ]);
            },
            m(t, n) {
                $(t, e, n),
                    k(e, s),
                    y && y.m(s, null),
                    k(s, i),
                    k(e, o),
                    Ct(b, o, null),
                    w && w.m(o, null),
                    k(o, l),
                    C.m(o, null),
                    k(o, c),
                    T && T.m(o, null),
                    k(o, h);
                for (let t = 0; t < g.length; t += 1) g[t].m(h, null);
                p = !0;
            },
            p(a, f) {
                "default" == (t = a)[1]
                    ? y || ((y = Yg()).c(), y.m(s, i))
                    : y && (y.d(1), (y = null)),
                    (!p ||
                        (16384 & f &&
                            n !==
                                (n =
                                    "pclass icon border black bgc" +
                                    t[14].class +
                                    " svelte-1rrmvqb"))) &&
                        U(i, "class", n),
                    (!p ||
                        (16384 & f &&
                            i.src !==
                                (r =
                                    (!1 !== t[14].powertype
                                        ? "/assets/ui/mobpower/" +
                                          t[14].powertype
                                        : "/assets/ui/classes/" + t[14].class) +
                                    "." +
                                    kr))) &&
                        U(i, "src", r);
                const k = {};
                128 & f && (k.fract = t[7]),
                    4096 & f && (k.barcol = t[12]),
                    512 & f && (k.left = t[9]),
                    32 & f && (k.right = t[5]),
                    536883330 & f && (k.$$scope = { dirty: f, ctx: t }),
                    b.$set(k),
                    "default" == t[1] || t[18]
                        ? w
                            ? (w.p(t, f), vt(w, 1))
                            : ((w = Qg(t)).c(), vt(w, 1), w.m(o, l))
                        : w &&
                          (ft(),
                          yt(w, 1, 1, () => {
                              w = null;
                          }),
                          gt()),
                    M === (M = x(t)) && C
                        ? C.p(t, f)
                        : (C.d(1), (C = M(t)) && (C.c(), C.m(o, c))),
                    "default" == t[1] && t[14].combat && t[14].alive
                        ? T || ((T = sv()).c(), T.m(o, h))
                        : T && (T.d(1), (T = null));
                const $ = t[14].buffs.slice(0, t[4]);
                ft(),
                    (g = St(g, f, z, 1, t, $, v, h, $t, iv, null, Gg)),
                    gt(),
                    (!p ||
                        (2 & f &&
                            d !==
                                (d =
                                    "buffarray " +
                                    t[1] +
                                    " svelte-1rrmvqb"))) &&
                        U(h, "class", d),
                    (!p ||
                        (147458 & f &&
                            u !==
                                (u =
                                    "panel-black bars " +
                                    (t[17] &&
                                    t[14].id == t[17].id &&
                                    "party" == t[1]
                                        ? "target"
                                        : "") +
                                    " " +
                                    (t[14].id && t[14].range
                                        ? "targetable"
                                        : "") +
                                    " svelte-1rrmvqb"))) &&
                        U(o, "class", u),
                    (!p || 8 & f) && U(e, "id", t[3]),
                    (!p ||
                        (4 & f &&
                            m !==
                                (m =
                                    "grid " +
                                    (t[2] ? "right" : "left") +
                                    " svelte-1rrmvqb"))) &&
                        U(e, "class", m),
                    (!p || 65536 & f) && D(e, "font-size", t[16] + "%"),
                    (!p || 16384 & f) &&
                        D(e, "opacity", t[14].range ? "" : 0.5);
            },
            i(t) {
                if (!p) {
                    vt(b.$$.fragment, t), vt(w);
                    for (let t = 0; t < I.length; t += 1) vt(g[t]);
                    p = !0;
                }
            },
            o(t) {
                yt(b.$$.fragment, t), yt(w);
                for (let t = 0; t < g.length; t += 1) yt(g[t]);
                p = !1;
            },
            d(t) {
                t && S(e), y && y.d(), Tt(b), w && w.d(), C.d(), T && T.d();
                for (let t = 0; t < g.length; t += 1) g[t].d();
                a(f);
            }
        };
    }
    function Yg(t) {
        let e;
        return {
            c() {
                U((e = E("div")), "class", "deco svelte-1rrmvqb");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Jg(t) {
        let e, s, i;
        return {
            c() {
                U(
                    (e = E("div")),
                    "class",
                    (s = "progressBar " + t[12] + " hpdelta svelte-1rrmvqb")
                ),
                    U(
                        e,
                        "style",
                        (i =
                            (t[13] ? "transition:none;" : "") +
                            "width:" +
                            t[7] +
                            "%;")
                    );
            },
            m(t, s) {
                $(t, e, s);
            },
            p(t, n) {
                4096 & n &&
                    s !==
                        (s =
                            "progressBar " +
                            t[12] +
                            " hpdelta svelte-1rrmvqb") &&
                    U(e, "class", s),
                    8320 & n &&
                        i !==
                            (i =
                                (t[13] ? "transition:none;" : "") +
                                "width:" +
                                t[7] +
                                "%;") &&
                        U(e, "style", i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Xg(t) {
        let e,
            s = "default" == t[1] && Jg(t);
        return {
            c() {
                s && s.c(), (e = _());
            },
            m(t, i) {
                s && s.m(t, i), $(t, e, i);
            },
            p(t, i) {
                "default" == t[1]
                    ? s
                        ? s.p(t, i)
                        : ((s = Jg(t)).c(), s.m(e.parentNode, e))
                    : s && (s.d(1), (s = null));
            },
            d(t) {
                s && s.d(t), t && S(e);
            }
        };
    }
    function Qg(t) {
        let e;
        const s = new wg({
            props: {
                size: "0.7em",
                fract: t[8],
                barcol: t[15],
                left: t[10],
                right: t[6],
                darken: !0,
                $$slots: { default: [Kg] },
                $$scope: { ctx: t }
            }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                256 & e && (i.fract = t[8]),
                    32768 & e && (i.barcol = t[15]),
                    1024 & e && (i.left = t[10]),
                    64 & e && (i.right = t[6]),
                    536872960 & e && (i.$$scope = { dirty: e, ctx: t }),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Kg(t) {
        let e;
        return {
            c() {
                U(
                    (e = E("div")),
                    "class",
                    "progressBar bgspell castbar svelte-1rrmvqb"
                ),
                    D(e, "width", t[11] + "%"),
                    D(e, "display", t[11] > 0 ? "inherit" : "none");
            },
            m(t, s) {
                $(t, e, s);
            },
            p(t, s) {
                2048 & s && D(e, "width", t[11] + "%"),
                    2048 & s && D(e, "display", t[11] > 0 ? "inherit" : "none");
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function tv(t) {
        let e, s, i;
        return {
            c() {
                U(
                    (e = E("img")),
                    "class",
                    (s =
                        "tag icon border black bgf" +
                        t[14].faction +
                        " round svelte-1rrmvqb")
                ),
                    e.src !==
                        (i =
                            "/assets/ui/factions/" +
                            t[14].faction +
                            "." +
                            kr) && U(e, "src", i);
            },
            m(t, s) {
                $(t, e, s);
            },
            p(t, n) {
                16384 & n &&
                    s !==
                        (s =
                            "tag icon border black bgf" +
                            t[14].faction +
                            " round svelte-1rrmvqb") &&
                    U(e, "class", s),
                    16384 & n &&
                        e.src !==
                            (i =
                                "/assets/ui/factions/" +
                                t[14].faction +
                                "." +
                                kr) &&
                        U(e, "src", i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function ev(t) {
        let e, s;
        return {
            c() {
                U(
                    (e = E("img")),
                    "class",
                    "tag icon border black bgblack round svelte-1rrmvqb"
                ),
                    e.src !==
                        (s =
                            "/assets/ui/icons/" +
                            (2 == t[14].role ? "star" : "starsilver") +
                            "." +
                            kr) && U(e, "src", s);
            },
            m(t, s) {
                $(t, e, s);
            },
            p(t, i) {
                16384 & i &&
                    e.src !==
                        (s =
                            "/assets/ui/icons/" +
                            (2 == t[14].role ? "star" : "starsilver") +
                            "." +
                            kr) &&
                    U(e, "src", s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function sv(t) {
        let e;
        return {
            c() {
                U(
                    (e = E("div")),
                    "class",
                    "tag icon border black round combat svelte-1rrmvqb"
                );
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function iv(t, e) {
        let s, i;
        const n = new Sg({ props: { buff: e[26], mode: e[1] } });
        return {
            key: t,
            first: null,
            c() {
                (s = _()), Et(n.$$.fragment), (this.first = s);
            },
            m(t, e) {
                $(t, s, e), Ct(n, t, e), (i = !0);
            },
            p(t, e) {
                const s = {};
                16400 & e && (s.buff = t[26]),
                    2 & e && (s.mode = t[1]),
                    n.$set(s);
            },
            i(t) {
                i || (vt(n.$$.fragment, t), (i = !0));
            },
            o(t) {
                yt(n.$$.fragment, t), (i = !1);
            },
            d(t) {
                t && S(s), Tt(n, t);
            }
        };
    }
    function nv(t) {
        let e,
            s,
            i = t[14].visible && Vg(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[14].visible
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = Vg(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function av(e, s, i) {
        let n,
            a,
            r,
            o = t,
            l = () => (o(), (o = c(d, t => i(14, (n = t)))), d);
        h(e, Gt, t => i(17, (a = t))),
            h(e, ws, t => i(18, (r = t))),
            e.$$.on_destroy.push(() => o());
        let { unit: d } = s;
        l();
        let u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            { mode: k = "default" } = s,
            { order: $ = 0 } = s,
            { id: S = "" } = s,
            { buffcount: M } = s,
            E = !1,
            C = 0;
        let T, _, P;
        return (
            (e.$set = t => {
                "unit" in t && l(i(0, (d = t.unit))),
                    "mode" in t && i(1, (k = t.mode)),
                    "order" in t && i(2, ($ = t.order)),
                    "id" in t && i(3, (S = t.id)),
                    "buffcount" in t && i(4, (M = t.buffcount));
            }),
            (e.$$.update = () => {
                16384 & e.$$.dirty &&
                    i(
                        23,
                        (T = n.world == Wn.id ? !n.alive && "Dead" : n.world)
                    ),
                    9453570 & e.$$.dirty &&
                        (i(
                            20,
                            (u = n.hpMax
                                ? "default" == k
                                    ? Lg(n.hp) + "/" + Lg(n.hpMax)
                                    : Lg(n.hp)
                                : "?")
                        ),
                        i(5, (p = T || u)),
                        i(
                            7,
                            (g =
                                "offline" != T
                                    ? n.hpMax
                                        ? (n.hp / n.hpMax) * 100
                                        : 100
                                    : 0)
                        ),
                        i(
                            12,
                            (x = T
                                ? "bggrey"
                                : n.faction === Wn.player.faction
                                ? "bghealth"
                                : "bgenemy")
                        )),
                    16386 & e.$$.dirty &&
                        i(
                            21,
                            (m = n.mpMax
                                ? "default" == k
                                    ? Lg(n.mp) + "/" + Lg(n.mpMax)
                                    : Lg(n.mp)
                                : "?")
                        ),
                    16384 & e.$$.dirty &&
                        i(9, (y = n.name ? Hg(n.name, 10) : "")),
                    16384 & e.$$.dirty &&
                        i(
                            10,
                            (b = n.timedSkill
                                ? (
                                      Wh.ui.hiddenskills[n.timedSkill.id] ||
                                      Wh.items.book[n.timedSkill.id]
                                  ).name
                                : `Lv. ${n.level}`)
                        ),
                    10502144 & e.$$.dirty &&
                        i(
                            6,
                            (f =
                                T ||
                                (n.timedSkill
                                    ? n.timedCast
                                          .remaining(Wn.smoothtime)
                                          .toFixed(1)
                                    : m))
                        ),
                    8404992 & e.$$.dirty &&
                        i(
                            8,
                            (v =
                                "offline" != T
                                    ? n.mpMax
                                        ? (n.mp / n.mpMax) * 100
                                        : 100
                                    : 0)
                        ),
                    8404992 & e.$$.dirty &&
                        i(
                            11,
                            (w =
                                "offline" != T && n.timedSkill
                                    ? 100 * n.timedCast.fraction(Wn.smoothtime)
                                    : 0)
                        ),
                    8388608 & e.$$.dirty &&
                        i(15, (_ = T ? "bggrey" : "bgmana")),
                    2 & e.$$.dirty &&
                        i(16, (P = Math.round("default" == k ? 100 : 85))),
                    4210688 & e.$$.dirty &&
                        (i(13, (E = C != n.id)), i(22, (C = n.id)));
            }),
            [
                d,
                k,
                $,
                S,
                M,
                p,
                f,
                g,
                v,
                y,
                b,
                w,
                x,
                E,
                n,
                _,
                P,
                a,
                r,
                t => {
                    n.id && _g(n.id);
                },
                u,
                m,
                C,
                T,
                void 0,
                t => Ng(t, n)
            ]
        );
    }
    class rv extends Pt {
        constructor(t) {
            super(),
                _t(this, t, av, nv, o, {
                    unit: 0,
                    mode: 1,
                    order: 2,
                    id: 3,
                    buffcount: 4
                });
        }
    }
    function ov(t) {
        let e, s;
        const i = new rv({
                props: { id: "ufplayer", order: 0, unit: jt, buffcount: t[0] }
            }),
            n = new rv({
                props: { id: "uftarget", order: 1, unit: Gt, buffcount: t[0] }
            });
        return {
            c() {
                (e = E("div")),
                    Et(i.$$.fragment),
                    Et(n.$$.fragment),
                    U(e, "class", "targetframes svelte-17up9g6");
            },
            m(t, a) {
                $(t, e, a), Ct(i, e, null), Ct(n, e, null), (s = !0);
            },
            p(t, [e]) {
                const s = {};
                1 & e && (s.buffcount = t[0]), i.$set(s);
                const a = {};
                1 & e && (a.buffcount = t[0]), n.$set(a);
            },
            i(t) {
                s || (vt(i.$$.fragment, t), vt(n.$$.fragment, t), (s = !0));
            },
            o(t) {
                yt(i.$$.fragment, t), yt(n.$$.fragment, t), (s = !1);
            },
            d(t) {
                t && S(e), Tt(i), Tt(n);
            }
        };
    }
    function lv(t, e, s) {
        let i;
        return h(t, xs, t => s(0, (i = t))), [i];
    }
    class cv extends Pt {
        constructor(t) {
            super(), _t(this, t, lv, ov, l, {});
        }
    }
    function hv(t) {
        let e, s;
        return {
            c() {
                (e = E("span")), (s = C(t[2])), U(e, "class", "slottext key");
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, e) {
                4 & e[0] && z(s, t[2]);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function dv(t) {
        let e, s;
        return {
            c() {
                (e = E("span")),
                    (s = C(t[3])),
                    U(e, "class", "slottext stacks");
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, e) {
                8 & e[0] && z(s, t[3]);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function uv(e) {
        let s;
        return {
            c() {
                U((s = E("div")), "class", "overlay svelte-1vj82uv");
            },
            m(t, i) {
                $(t, s, i), e[33](s);
            },
            p: t,
            d(t) {
                t && S(s), e[33](null);
            }
        };
    }
    function mv(t) {
        let e;
        return {
            c() {
                U((e = E("div")), "class", "overlay combat svelte-1vj82uv");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function pv(t) {
        let e;
        return {
            c() {
                U((e = E("div")), "class", "overlay range svelte-1vj82uv");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function fv(t) {
        let e;
        return {
            c() {
                U((e = E("div")), "class", "overlay oom svelte-1vj82uv");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function gv(t) {
        let e;
        return {
            c() {
                U((e = E("div")), "class", "overlay queued svelte-1vj82uv");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function vv(t) {
        let e;
        return {
            c() {
                U((e = E("div")), "class", "autocast svelte-1vj82uv");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function yv(t) {
        let e, s, i;
        const n = t[32].default,
            a = d(n, t, t[31], null);
        return {
            c() {
                (e = E("div")),
                    a && a.c(),
                    U(
                        e,
                        "class",
                        (s =
                            "border " +
                            t[5] +
                            " slotdescription svelte-1vj82uv")
                    ),
                    U(e, "style", t[10]);
            },
            m(s, n) {
                $(s, e, n), a && a.m(e, null), t[34](e), (i = !0);
            },
            p(t, r) {
                a &&
                    a.p &&
                    1 & r[1] &&
                    a.p(u(n, t, t[31], null), m(n, t[31], r, null)),
                    (!i ||
                        (32 & r[0] &&
                            s !==
                                (s =
                                    "border " +
                                    t[5] +
                                    " slotdescription svelte-1vj82uv"))) &&
                        U(e, "class", s),
                    (!i || 1024 & r[0]) && U(e, "style", t[10]);
            },
            i(t) {
                i || (vt(a, t), (i = !0));
            },
            o(t) {
                yt(a, t), (i = !1);
            },
            d(s) {
                s && S(e), a && a.d(s), t[34](null);
            }
        };
    }
    function bv(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g = void 0 !== t[2] && hv(t),
            v = void 0 !== t[3] && dv(t),
            y = void 0 !== t[4] && uv(t);
        function b(t, e) {
            return 5 == t[12]
                ? fv
                : 6 == t[12]
                ? pv
                : 11 == t[12]
                ? mv
                : void 0;
        }
        let w = b(t),
            x = w && w(t),
            M = (t[11] || t[9]) && gv(),
            C = t[11] && vv(),
            I = t[8] && t[0] && t[1] && !t[17] && yv(t);
        return {
            c() {
                (e = E("div")),
                    g && g.c(),
                    (s = _()),
                    v && v.c(),
                    (i = _()),
                    y && y.c(),
                    (n = _()),
                    x && x.c(),
                    (r = T()),
                    (o = E("div")),
                    M && M.c(),
                    (c = _()),
                    C && C.c(),
                    (h = E("img")),
                    I && I.c(),
                    U(
                        o,
                        "class",
                        (l =
                            "overlay " +
                            (!t[15] || (t[4] > 0 && t[4] < 10) ? "" : "offCd") +
                            " svelte-1vj82uv")
                    ),
                    U(
                        h,
                        "class",
                        (d = "icon " + (t[1] ? t[6] : "") + " svelte-1vj82uv")
                    ),
                    h.src !== (u = t[16]) && U(h, "src", u),
                    U(e, "id", t[7]),
                    U(
                        e,
                        "class",
                        (m =
                            "border " +
                            t[5] +
                            " " +
                            (t[17] && t[17].data == t[1] ? "grey" : "") +
                            " slot " +
                            (t[1] ? "filled" : "") +
                            " svelte-1vj82uv")
                    ),
                    (f = [
                        P(e, "pointerenter", t[20]),
                        P(e, "pointerleave", t[21]),
                        P(e, "pointerdown", t[18]),
                        P(e, "pointerup", t[19])
                    ]);
            },
            m(t, a) {
                $(t, e, a),
                    g && g.m(e, null),
                    k(e, s),
                    v && v.m(e, null),
                    k(e, i),
                    y && y.m(e, null),
                    k(e, n),
                    x && x.m(e, null),
                    k(e, r),
                    k(e, o),
                    M && M.m(e, null),
                    k(e, c),
                    C && C.m(e, null),
                    k(e, h),
                    I && I.m(e, null),
                    (p = !0);
            },
            p(t, a) {
                void 0 !== t[2]
                    ? g
                        ? g.p(t, a)
                        : ((g = hv(t)).c(), g.m(e, s))
                    : g && (g.d(1), (g = null)),
                    void 0 !== t[3]
                        ? v
                            ? v.p(t, a)
                            : ((v = dv(t)).c(), v.m(e, i))
                        : v && (v.d(1), (v = null)),
                    void 0 !== t[4]
                        ? y
                            ? y.p(t, a)
                            : ((y = uv(t)).c(), y.m(e, n))
                        : y && (y.d(1), (y = null)),
                    w !== (w = b(t)) &&
                        (x && x.d(1), (x = w && w(t)) && (x.c(), x.m(e, r))),
                    (!p ||
                        (32784 & a[0] &&
                            l !==
                                (l =
                                    "overlay " +
                                    (!t[15] || (t[4] > 0 && t[4] < 10)
                                        ? ""
                                        : "offCd") +
                                    " svelte-1vj82uv"))) &&
                        U(o, "class", l),
                    t[11] || t[9]
                        ? M || ((M = gv()).c(), M.m(e, c))
                        : M && (M.d(1), (M = null)),
                    t[11]
                        ? C || ((C = vv()).c(), C.m(e, h))
                        : C && (C.d(1), (C = null)),
                    (!p ||
                        (66 & a[0] &&
                            d !==
                                (d =
                                    "icon " +
                                    (t[1] ? t[6] : "") +
                                    " svelte-1vj82uv"))) &&
                        U(h, "class", d),
                    (!p || (65536 & a[0] && h.src !== (u = t[16]))) &&
                        U(h, "src", u),
                    t[8] && t[0] && t[1] && !t[17]
                        ? I
                            ? (I.p(t, a), vt(I, 1))
                            : ((I = yv(t)).c(), vt(I, 1), I.m(e, null))
                        : I &&
                          (ft(),
                          yt(I, 1, 1, () => {
                              I = null;
                          }),
                          gt()),
                    (!p || 128 & a[0]) && U(e, "id", t[7]),
                    (!p ||
                        (131106 & a[0] &&
                            m !==
                                (m =
                                    "border " +
                                    t[5] +
                                    " " +
                                    (t[17] && t[17].data == t[1]
                                        ? "grey"
                                        : "") +
                                    " slot " +
                                    (t[1] ? "filled" : "") +
                                    " svelte-1vj82uv"))) &&
                        U(e, "class", m);
            },
            i(t) {
                p || (vt(I), (p = !0));
            },
            o(t) {
                yt(I), (p = !1);
            },
            d(t) {
                t && S(e),
                    g && g.d(),
                    v && v.d(),
                    y && y.d(),
                    x && x.d(),
                    M && M.d(),
                    C && C.d(),
                    I && I.d(),
                    a(f);
            }
        };
    }
    const wv = 40,
        xv = 20,
        kv = [],
        $v = document.createElement("canvas");
    ($v.width = wv), ($v.height = wv);
    const Sv = $v.getContext("2d");
    for (let t = 0; t < 101; ++t) {
        Sv.clearRect(0, 0, wv, wv), Sv.beginPath(), Sv.strokeRect(0, 0, wv, wv);
        let e = t / 100;
        (Sv.fillStyle = "rgba(0, 0, 0, 0.75)"),
            Sv.beginPath(),
            Sv.moveTo(xv, xv);
        for (let t = 0; t < e; t += 0.25)
            Sv.lineTo(
                xv + Math.sin(2 * t * Math.PI - Math.PI) * wv,
                xv + Math.cos(2 * t * Math.PI - Math.PI) * wv
            );
        Sv.lineTo(
            xv + Math.sin(2 * e * Math.PI - Math.PI) * wv,
            xv + Math.cos(2 * e * Math.PI - Math.PI) * wv
        ),
            Sv.fill();
        const s = new Image();
        (s.src = $v.toDataURL()), kv.push([s]);
    }
    const Mv = (t, e) => {
        e &&
            t !== e.step &&
            (void 0 !== e.cdimg &&
                (kv[e.step].push(e.removeChild(e.cdimg)), (e.cdimg = void 0)),
            (e.step = t) > 0 &&
                (1 === kv[e.step].length
                    ? (e.cdimg = kv[e.step][0].cloneNode())
                    : (e.cdimg = kv[e.step].pop()),
                e.appendChild(e.cdimg)));
    };
    function Ev(t, e, s) {
        let i;
        h(t, Vt, t => s(17, (i = t)));
        let n,
            { data: a } = e,
            { key: r } = e,
            { stacks: o } = e,
            { cd: l } = e,
            { border: c = "grey" } = e,
            { img: d } = e,
            { meta: u } = e,
            { css: m = "" } = e,
            { id: p = "" } = e,
            { describe: g = !0 } = e,
            { queued: v = !1 } = e,
            { pickable: y = !0 } = e,
            { descRoot: b } = e,
            { descPos: w = "bottom: 100%; right: 100%;" } = e,
            { auto: x = !1 } = e,
            { status: k = 0 } = e,
            { hover: $ = !1 } = e,
            S = !1;
        const M = () => {
                T("discard");
            },
            E = t => {
                "force" !== $ && s(0, ($ = t));
            },
            C = () => {
                a &&
                    !1 !== y &&
                    (a.moving ||
                        f(
                            Vt,
                            (i = {
                                data: a,
                                img: d,
                                meta: u,
                                border: c,
                                css: m,
                                discard: M
                            })
                        ),
                    a.type && so(a.type));
            },
            T = X();
        let _,
            P,
            U,
            { $$slots: I = {}, $$scope: z } = e;
        return (
            (t.$set = t => {
                "data" in t && s(1, (a = t.data)),
                    "key" in t && s(2, (r = t.key)),
                    "stacks" in t && s(3, (o = t.stacks)),
                    "cd" in t && s(4, (l = t.cd)),
                    "border" in t && s(5, (c = t.border)),
                    "img" in t && s(22, (d = t.img)),
                    "meta" in t && s(23, (u = t.meta)),
                    "css" in t && s(6, (m = t.css)),
                    "id" in t && s(7, (p = t.id)),
                    "describe" in t && s(8, (g = t.describe)),
                    "queued" in t && s(9, (v = t.queued)),
                    "pickable" in t && s(24, (y = t.pickable)),
                    "descRoot" in t && s(25, (b = t.descRoot)),
                    "descPos" in t && s(10, (w = t.descPos)),
                    "auto" in t && s(11, (x = t.auto)),
                    "status" in t && s(12, (k = t.status)),
                    "hover" in t && s(0, ($ = t.hover)),
                    "$$scope" in t && s(31, (z = t.$$scope));
            }),
            (t.$$.update = () => {
                32784 & t.$$.dirty[0] && s(15, (P = P || l > 0)),
                    4329489 & t.$$.dirty[0] &&
                        s(
                            16,
                            (U = d
                                ? (i && $) || l > 0 || -1 == k
                                    ? d
                                          .replace(".", "_grey.")
                                          .replace(/_q[0-9]/g, "")
                                    : d
                                : `/assets/ui/slotbg/bg.${$r}?v=35201089`)
                        ),
                    33562624 & t.$$.dirty[0] && n && b && b.appendChild(n),
                    16400 & t.$$.dirty[0] && Mv(Math.floor(l || 0), _);
            }),
            [
                $,
                a,
                r,
                o,
                l,
                c,
                m,
                p,
                g,
                v,
                w,
                x,
                k,
                n,
                _,
                P,
                U,
                i,
                t => {
                    (S = !0), E(!1), T("click", u);
                },
                t => {
                    2 == t.button
                        ? oo.shift.down
                            ? T("use", { e: t, ...u })
                            : T("context", { e: t, ...u })
                        : i
                        ? (i.data.type && so(i.data.type),
                          T("move", { from: i.meta, to: u }),
                          i.meta && i.meta.store && i.meta.store.set(),
                          f(Vt, (i = void 0)))
                        : C(),
                        (S = !1);
                },
                t => {
                    E(!0);
                },
                t => {
                    E(!1), a && S && ((S = !1), C());
                },
                d,
                u,
                y,
                b,
                S,
                M,
                E,
                C,
                T,
                z,
                I,
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(14, (_ = t));
                    });
                },
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(13, (n = t));
                    });
                }
            ]
        );
    }
    class Cv extends Pt {
        constructor(t) {
            super(),
                _t(
                    this,
                    t,
                    Ev,
                    bv,
                    l,
                    {
                        data: 1,
                        key: 2,
                        stacks: 3,
                        cd: 4,
                        border: 5,
                        img: 22,
                        meta: 23,
                        css: 6,
                        id: 7,
                        describe: 8,
                        queued: 9,
                        pickable: 24,
                        descRoot: 25,
                        descPos: 10,
                        auto: 11,
                        status: 12,
                        hover: 0
                    },
                    [-1, -1]
                );
        }
    }
    function Tv(t, e, s) {
        const i = t.slice();
        return (i[13] = e[s]), i;
    }
    function _v(t, e, s) {
        const i = t.slice();
        return (i[16] = e[s]), i;
    }
    function Pv(t, e, s) {
        const i = t.slice();
        return (i[19] = e[s]), i;
    }
    function Uv(t, e, s) {
        const i = t.slice();
        return (i[19] = e[s]), i;
    }
    function Iv(t, e, s) {
        const i = t.slice();
        return (i[27] = e[s]), i;
    }
    function zv(t, e, s) {
        const i = t.slice();
        return (i[24] = e[s]), i;
    }
    function Av(t, e, s) {
        const i = t.slice();
        return (i[27] = e[s]), i;
    }
    function Dv(t, e, s) {
        const i = t.slice();
        return (i[24] = e[s]), i;
    }
    function Rv(t, e, s) {
        const i = t.slice();
        return (i[27] = e[s]), i;
    }
    function Bv(t, e, s) {
        const i = t.slice();
        return (i[34] = e[s]), i;
    }
    function Fv(t, e, s) {
        const i = t.slice();
        return (i[39] = e[s]), i;
    }
    function Nv(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            C,
            T = !t[2] && void 0 === t[0].parent && Ov(t),
            P = t[0].actiontype && qv(t),
            I = t[0].auto && Hv(),
            z = t[0].cost && t[0].cost.resources && Wv(t),
            A = t[0].castLen && jv(t),
            D = t[0].cd && Gv(t),
            R = t[0].duration > 0 && Vv(t),
            B = t[0].refresh && Yv(),
            F = t[0].range && Jv(t),
            N = t[7][t[0].targetMode] && Xv(t),
            L = t[0].maxStacks && Qv(t),
            O = t[0].dmg && Kv(t),
            q = t[0].heal && ty(t),
            H = [t[0].multiplyIncomingHeal, t[0].multiplyIncomingDamage],
            W = [];
        for (let e = 0; e < 2; e += 1) W[e] = sy(Bv(t, H, e));
        let Z = [t[0].addIncomingHeal, t[0].addIncomingDamage],
            j = [];
        for (let e = 0; e < 2; e += 1) j[e] = ny(Dv(t, Z, e));
        let G = [t[0].addIncomingCrit],
            V = [];
        for (let e = 0; e < 1; e += 1) V[e] = ry(zv(t, G, e));
        let Y = t[0].statsStatic && oy(t),
            J = t[0].statsConvert && cy(t),
            X = t[0].custom && dy(t),
            Q = t[0].aoe && t[0].aoe.circleRadius && my(t),
            K = !t[0].parent && py(t),
            tt = t[3],
            et = [];
        for (let e = 0; e < tt.length; e += 1) et[e] = fy(Tv(t, tt, e));
        const st = t =>
            yt(et[t], 1, 1, () => {
                et[t] = null;
            });
        return {
            c() {
                T && T.c(),
                    (e = E("div")),
                    P && P.c(),
                    (s = _()),
                    I && I.c(),
                    (i = _()),
                    z && z.c(),
                    (n = _()),
                    A && A.c(),
                    (a = _()),
                    D && D.c(),
                    (r = _()),
                    R && R.c(),
                    (o = _()),
                    B && B.c(),
                    (l = E("div")),
                    F && F.c(),
                    (c = _()),
                    N && N.c(),
                    L && L.c(),
                    (h = _()),
                    O && O.c(),
                    (d = _()),
                    q && q.c(),
                    (u = _());
                for (let t = 0; t < 2; t += 1) W[t].c();
                m = _();
                for (let t = 0; t < 2; t += 1) j[t].c();
                p = _();
                for (let t = 0; t < 1; t += 1) V[t].c();
                (f = _()),
                    Y && Y.c(),
                    (g = _()),
                    J && J.c(),
                    (v = _()),
                    X && X.c(),
                    (y = _()),
                    Q && Q.c(),
                    (b = _()),
                    K && K.c(),
                    (w = _());
                for (let t = 0; t < et.length; t += 1) et[t].c();
                (x = _()), U(e, "class", "pad textgreen svelte-14w0l4b");
            },
            m(t, S) {
                T && T.m(t, S),
                    $(t, e, S),
                    P && P.m(e, null),
                    k(e, s),
                    I && I.m(e, null),
                    k(e, i),
                    z && z.m(e, null),
                    k(e, n),
                    A && A.m(e, null),
                    k(e, a),
                    D && D.m(e, null),
                    k(e, r),
                    R && R.m(e, null),
                    k(e, o),
                    B && B.m(e, null),
                    k(e, l),
                    F && F.m(l, null),
                    k(l, c),
                    N && N.m(l, null),
                    L && L.m(t, S),
                    $(t, h, S),
                    O && O.m(t, S),
                    $(t, d, S),
                    q && q.m(t, S),
                    $(t, u, S);
                for (let e = 0; e < 2; e += 1) W[e].m(t, S);
                $(t, m, S);
                for (let e = 0; e < 2; e += 1) j[e].m(t, S);
                $(t, p, S);
                for (let e = 0; e < 1; e += 1) V[e].m(t, S);
                $(t, f, S),
                    Y && Y.m(t, S),
                    $(t, g, S),
                    J && J.m(t, S),
                    $(t, v, S),
                    X && X.m(t, S),
                    $(t, y, S),
                    Q && Q.m(t, S),
                    $(t, b, S),
                    K && K.m(t, S),
                    $(t, w, S);
                for (let e = 0; e < et.length; e += 1) et[e].m(t, S);
                $(t, x, S), (C = !0);
            },
            p(t, k) {
                if (
                    (t[2] || void 0 !== t[0].parent
                        ? T && (T.d(1), (T = null))
                        : T
                        ? T.p(t, k)
                        : ((T = Ov(t)).c(), T.m(e.parentNode, e)),
                    t[0].actiontype
                        ? P
                            ? P.p(t, k)
                            : ((P = qv(t)).c(), P.m(e, s))
                        : P && (P.d(1), (P = null)),
                    t[0].auto
                        ? I || ((I = Hv()).c(), I.m(e, i))
                        : I && (I.d(1), (I = null)),
                    t[0].cost && t[0].cost.resources
                        ? z
                            ? z.p(t, k)
                            : ((z = Wv(t)).c(), z.m(e, n))
                        : z && (z.d(1), (z = null)),
                    t[0].castLen
                        ? A
                            ? A.p(t, k)
                            : ((A = jv(t)).c(), A.m(e, a))
                        : A && (A.d(1), (A = null)),
                    t[0].cd
                        ? D
                            ? D.p(t, k)
                            : ((D = Gv(t)).c(), D.m(e, r))
                        : D && (D.d(1), (D = null)),
                    t[0].duration > 0
                        ? R
                            ? R.p(t, k)
                            : ((R = Vv(t)).c(), R.m(e, o))
                        : R && (R.d(1), (R = null)),
                    t[0].refresh
                        ? B || ((B = Yv()).c(), B.m(e, l))
                        : B && (B.d(1), (B = null)),
                    t[0].range
                        ? F
                            ? F.p(t, k)
                            : ((F = Jv(t)).c(), F.m(l, c))
                        : F && (F.d(1), (F = null)),
                    t[7][t[0].targetMode]
                        ? N
                            ? N.p(t, k)
                            : ((N = Xv(t)).c(), N.m(l, null))
                        : N && (N.d(1), (N = null)),
                    t[0].maxStacks
                        ? L
                            ? L.p(t, k)
                            : ((L = Qv(t)).c(), L.m(h.parentNode, h))
                        : L && (L.d(1), (L = null)),
                    t[0].dmg
                        ? O
                            ? O.p(t, k)
                            : ((O = Kv(t)).c(), O.m(d.parentNode, d))
                        : O && (O.d(1), (O = null)),
                    t[0].heal
                        ? q
                            ? q.p(t, k)
                            : ((q = ty(t)).c(), q.m(u.parentNode, u))
                        : q && (q.d(1), (q = null)),
                    257 & k[0])
                ) {
                    let e;
                    for (
                        H = [
                            t[0].multiplyIncomingHeal,
                            t[0].multiplyIncomingDamage
                        ],
                            e = 0;
                        e < 2;
                        e += 1
                    ) {
                        const s = Bv(t, H, e);
                        W[e]
                            ? W[e].p(s, k)
                            : ((W[e] = sy(s)),
                              W[e].c(),
                              W[e].m(m.parentNode, m));
                    }
                    for (; e < 2; e += 1) W[e].d(1);
                }
                if (257 & k[0]) {
                    let e;
                    for (
                        Z = [t[0].addIncomingHeal, t[0].addIncomingDamage],
                            e = 0;
                        e < 2;
                        e += 1
                    ) {
                        const s = Dv(t, Z, e);
                        j[e]
                            ? j[e].p(s, k)
                            : ((j[e] = ny(s)),
                              j[e].c(),
                              j[e].m(p.parentNode, p));
                    }
                    for (; e < 2; e += 1) j[e].d(1);
                }
                if (257 & k[0]) {
                    let e;
                    for (G = [t[0].addIncomingCrit], e = 0; e < 1; e += 1) {
                        const s = zv(t, G, e);
                        V[e]
                            ? V[e].p(s, k)
                            : ((V[e] = ry(s)),
                              V[e].c(),
                              V[e].m(f.parentNode, f));
                    }
                    for (; e < 1; e += 1) V[e].d(1);
                }
                if (
                    (t[0].statsStatic
                        ? Y
                            ? Y.p(t, k)
                            : ((Y = oy(t)).c(), Y.m(g.parentNode, g))
                        : Y && (Y.d(1), (Y = null)),
                    t[0].statsConvert
                        ? J
                            ? J.p(t, k)
                            : ((J = cy(t)).c(), J.m(v.parentNode, v))
                        : J && (J.d(1), (J = null)),
                    t[0].custom
                        ? X
                            ? X.p(t, k)
                            : ((X = dy(t)).c(), X.m(y.parentNode, y))
                        : X && (X.d(1), (X = null)),
                    t[0].aoe && t[0].aoe.circleRadius
                        ? Q
                            ? Q.p(t, k)
                            : ((Q = my(t)).c(), Q.m(b.parentNode, b))
                        : Q && (Q.d(1), (Q = null)),
                    t[0].parent
                        ? K && (K.d(1), (K = null))
                        : K
                        ? K.p(t, k)
                        : ((K = py(t)).c(), K.m(w.parentNode, w)),
                    10 & k[0])
                ) {
                    let e;
                    for (tt = t[3], e = 0; e < tt.length; e += 1) {
                        const s = Tv(t, tt, e);
                        et[e]
                            ? (et[e].p(s, k), vt(et[e], 1))
                            : ((et[e] = fy(s)),
                              et[e].c(),
                              vt(et[e], 1),
                              et[e].m(x.parentNode, x));
                    }
                    for (ft(), e = tt.length; e < et.length; e += 1) st(e);
                    gt();
                }
            },
            i(t) {
                if (!C) {
                    for (let t = 0; t < tt.length; t += 1) vt(et[t]);
                    C = !0;
                }
            },
            o(t) {
                et = et.filter(Boolean);
                for (let t = 0; t < et.length; t += 1) yt(et[t]);
                C = !1;
            },
            d(t) {
                T && T.d(t),
                    t && S(e),
                    P && P.d(),
                    I && I.d(),
                    z && z.d(),
                    A && A.d(),
                    D && D.d(),
                    R && R.d(),
                    B && B.d(),
                    F && F.d(),
                    N && N.d(),
                    L && L.d(t),
                    t && S(h),
                    O && O.d(t),
                    t && S(d),
                    q && q.d(t),
                    t && S(u),
                    M(W, t),
                    t && S(m),
                    M(j, t),
                    t && S(p),
                    M(V, t),
                    t && S(f),
                    Y && Y.d(t),
                    t && S(g),
                    J && J.d(t),
                    t && S(v),
                    X && X.d(t),
                    t && S(y),
                    Q && Q.d(t),
                    t && S(b),
                    K && K.d(t),
                    t && S(w),
                    M(et, t),
                    t && S(x);
            }
        };
    }
    function Lv(e) {
        let s,
            i,
            n = e[0].item + "";
        return {
            c() {
                (s = E("div")), (i = C(n));
            },
            m(t, e) {
                $(t, s, e), k(s, i);
            },
            p(t, e) {
                1 & e[0] && n !== (n = t[0].item + "") && z(i, n);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function Ov(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = Wh.items.book[t[0].id].name + "",
            l = t[0].engineOnly ? "" : " Lv. " + t[1];
        return {
            c() {
                (e = E("div")),
                    (s = E("img")),
                    (n = T()),
                    (a = C(o)),
                    (r = C(l)),
                    U(s, "class", "texticon"),
                    s.src !== (i = jd(t[0].id)) && U(s, "src", i),
                    U(e, "class", "slottitle textprimary");
            },
            m(t, i) {
                $(t, e, i), k(e, s), k(e, n), k(e, a), k(e, r);
            },
            p(t, e) {
                1 & e[0] && s.src !== (i = jd(t[0].id)) && U(s, "src", i),
                    1 & e[0] &&
                        o !== (o = Wh.items.book[t[0].id].name + "") &&
                        z(a, o),
                    3 & e[0] &&
                        l !== (l = t[0].engineOnly ? "" : " Lv. " + t[1]) &&
                        z(r, l);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function qv(t) {
        let e,
            s,
            i,
            n,
            a = t[9][t[0].mode] + "",
            r = t[0].actiontype + "";
        return {
            c() {
                (e = E("div")),
                    (s = C(a)),
                    (i = T()),
                    (n = C(r)),
                    U(e, "class", "textwhite");
            },
            m(t, a) {
                $(t, e, a), k(e, s), k(e, i), k(e, n);
            },
            p(t, e) {
                1 & e[0] && a !== (a = t[9][t[0].mode] + "") && z(s, a),
                    1 & e[0] && r !== (r = t[0].actiontype + "") && z(n, r);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Hv(t) {
        let e;
        return {
            c() {
                (e = E("div")).textContent = "Auto cast";
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Wv(t) {
        let e,
            s,
            i = t[0].cost.resources,
            n = [];
        for (let e = 0; e < i.length; e += 1) n[e] = Zv(Fv(t, i, e));
        return {
            c() {
                (e = E("div")), (s = C("Cost: "));
                for (let t = 0; t < n.length; t += 1) n[t].c();
            },
            m(t, i) {
                $(t, e, i), k(e, s);
                for (let t = 0; t < n.length; t += 1) n[t].m(e, null);
            },
            p(t, s) {
                if (259 & s[0]) {
                    let a;
                    for (i = t[0].cost.resources, a = 0; a < i.length; a += 1) {
                        const r = Fv(t, i, a);
                        n[a]
                            ? n[a].p(r, s)
                            : ((n[a] = Zv(r)), n[a].c(), n[a].m(e, null));
                    }
                    for (; a < n.length; a += 1) n[a].d(1);
                    n.length = i.length;
                }
            },
            d(t) {
                t && S(e), M(n, t);
            }
        };
    }
    function Zv(t) {
        let e,
            s,
            i,
            n,
            a = t[8](t[39][1], t[1]) + "",
            r = Wh.ui.stats.array[t[39][0]] + "";
        return {
            c() {
                (e = C(a)), (s = T()), (i = C(r)), (n = T());
            },
            m(t, a) {
                $(t, e, a), $(t, s, a), $(t, i, a), $(t, n, a);
            },
            p(t, s) {
                3 & s[0] && a !== (a = t[8](t[39][1], t[1]) + "") && z(e, a),
                    1 & s[0] &&
                        r !== (r = Wh.ui.stats.array[t[39][0]] + "") &&
                        z(i, r);
            },
            d(t) {
                t && S(e), t && S(s), t && S(i), t && S(n);
            }
        };
    }
    function jv(t) {
        let e,
            s,
            i,
            n = t[8](t[0].castLen) + "";
        return {
            c() {
                (e = E("div")), (s = C(n)), (i = C("s Cast time"));
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                1 & e[0] && n !== (n = t[8](t[0].castLen) + "") && z(s, n);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Gv(t) {
        let e,
            s,
            i,
            n = t[8](t[0].cd) + "";
        return {
            c() {
                (e = E("div")), (s = C(n)), (i = C("s Cooldown"));
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                1 & e[0] && n !== (n = t[8](t[0].cd) + "") && z(s, n);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Vv(t) {
        let e,
            s,
            i,
            n = t[8](t[0].duration) + "";
        return {
            c() {
                (e = E("div")), (s = C(n)), (i = C("s Duration"));
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                1 & e[0] && n !== (n = t[8](t[0].duration) + "") && z(s, n);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Yv(t) {
        let e;
        return {
            c() {
                (e = E("div")).textContent = "Stacks refresh duration";
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Jv(t) {
        let e,
            s,
            i,
            n = t[8](t[0].range) + "";
        return {
            c() {
                (e = E("span")), (s = C(n)), (i = C("m range "));
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                1 & e[0] && n !== (n = t[8](t[0].range) + "") && z(s, n);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Xv(t) {
        let e,
            s,
            i = t[7][t[0].targetMode] + "";
        return {
            c() {
                (e = E("span")), (s = C(i));
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, e) {
                1 & e[0] && i !== (i = t[7][t[0].targetMode] + "") && z(s, i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Qv(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l = t[5].stacks + "";
        return {
            c() {
                (e = E("div")),
                    (s = E("u")),
                    (i = C("At ")),
                    (n = C(l)),
                    (a = C(" stacks")),
                    (r = C(":")),
                    ((o = E("span")).textContent = "(Press shift to toggle)"),
                    U(e, "class", "pad textsecondary svelte-14w0l4b"),
                    U(o, "class", "textgrey");
            },
            m(t, l) {
                $(t, e, l),
                    k(e, s),
                    k(s, i),
                    k(s, n),
                    k(s, a),
                    k(e, r),
                    $(t, o, l);
            },
            p(t, e) {
                32 & e[0] && l !== (l = t[5].stacks + "") && z(n, l);
            },
            d(t) {
                t && S(e), t && S(o);
            }
        };
    }
    function Kv(t) {
        let e,
            s,
            i,
            n = t[8](t[0].dmg) + "";
        return {
            c() {
                (e = E("div")),
                    (s = C(n)),
                    (i = C(" DMG")),
                    U(e, "class", "textgreen");
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                1 & e[0] && n !== (n = t[8](t[0].dmg) + "") && z(s, n);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function ty(t) {
        let e,
            s,
            i,
            n = t[8](t[0].heal) + "";
        return {
            c() {
                (e = E("div")),
                    (s = C(n)),
                    (i = C(" Heal")),
                    U(e, "class", "textgreen");
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                1 & e[0] && n !== (n = t[8](t[0].heal) + "") && z(s, n);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function ey(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = Wh.items.book[t[27]].name + "",
            l = Math.round(100 * t[8](t[34][t[27]](t[0])) - 100) + "";
        return {
            c() {
                (e = E("div")),
                    (s = C("Empower ")),
                    (i = C(o)),
                    (n = C(" by ")),
                    (a = C(l)),
                    (r = C("%")),
                    U(e, "class", "textcyan");
            },
            m(t, o) {
                $(t, e, o), k(e, s), k(e, i), k(e, n), k(e, a), k(e, r);
            },
            p(t, e) {
                1 & e[0] &&
                    o !== (o = Wh.items.book[t[27]].name + "") &&
                    z(i, o),
                    1 & e[0] &&
                        l !==
                            (l =
                                Math.round(
                                    100 * t[8](t[34][t[27]](t[0])) - 100
                                ) + "") &&
                        z(a, l);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function sy(t) {
        let e,
            s = Object.keys(t[34] || {}),
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = ey(Rv(t, s, e));
        return {
            c() {
                for (let t = 0; t < i.length; t += 1) i[t].c();
                e = _();
            },
            m(t, s) {
                for (let e = 0; e < i.length; e += 1) i[e].m(t, s);
                $(t, e, s);
            },
            p(t, n) {
                if (257 & n[0]) {
                    let a;
                    for (
                        s = Object.keys(t[34] || {}), a = 0;
                        a < s.length;
                        a += 1
                    ) {
                        const r = Rv(t, s, a);
                        i[a]
                            ? i[a].p(r, n)
                            : ((i[a] = ey(r)),
                              i[a].c(),
                              i[a].m(e.parentNode, e));
                    }
                    for (; a < i.length; a += 1) i[a].d(1);
                    i.length = s.length;
                }
            },
            d(t) {
                M(i, t), t && S(e);
            }
        };
    }
    function iy(t) {
        let e,
            s,
            i,
            n,
            a,
            r = Wh.items.book[t[27]].name + "",
            o = t[8](t[24][t[27]](t[0])) + "";
        return {
            c() {
                (e = E("div")),
                    (s = C("Empower ")),
                    (i = C(r)),
                    (n = C(" by ")),
                    (a = C(o)),
                    U(e, "class", "textcyan");
            },
            m(t, r) {
                $(t, e, r), k(e, s), k(e, i), k(e, n), k(e, a);
            },
            p(t, e) {
                1 & e[0] &&
                    r !== (r = Wh.items.book[t[27]].name + "") &&
                    z(i, r),
                    1 & e[0] &&
                        o !== (o = t[8](t[24][t[27]](t[0])) + "") &&
                        z(a, o);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function ny(t) {
        let e,
            s = Object.keys(t[24] || {}),
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = iy(Av(t, s, e));
        return {
            c() {
                for (let t = 0; t < i.length; t += 1) i[t].c();
                e = _();
            },
            m(t, s) {
                for (let e = 0; e < i.length; e += 1) i[e].m(t, s);
                $(t, e, s);
            },
            p(t, n) {
                if (257 & n[0]) {
                    let a;
                    for (
                        s = Object.keys(t[24] || {}), a = 0;
                        a < s.length;
                        a += 1
                    ) {
                        const r = Av(t, s, a);
                        i[a]
                            ? i[a].p(r, n)
                            : ((i[a] = iy(r)),
                              i[a].c(),
                              i[a].m(e.parentNode, e));
                    }
                    for (; a < i.length; a += 1) i[a].d(1);
                    i.length = s.length;
                }
            },
            d(t) {
                M(i, t), t && S(e);
            }
        };
    }
    function ay(t) {
        let e,
            s,
            i,
            n,
            a,
            r = Wh.items.book[t[27]].name + "",
            o = jg(14, t[8](t[24][t[27]](t[0]))) + "";
        return {
            c() {
                (e = E("div")),
                    (s = C("Empower Crit% of ")),
                    (i = C(r)),
                    (n = C(" by ")),
                    (a = C(o)),
                    U(e, "class", "textcyan");
            },
            m(t, r) {
                $(t, e, r), k(e, s), k(e, i), k(e, n), k(e, a);
            },
            p(t, e) {
                1 & e[0] &&
                    r !== (r = Wh.items.book[t[27]].name + "") &&
                    z(i, r),
                    1 & e[0] &&
                        o !== (o = jg(14, t[8](t[24][t[27]](t[0]))) + "") &&
                        z(a, o);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function ry(t) {
        let e,
            s = Object.keys(t[24] || {}),
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = ay(Iv(t, s, e));
        return {
            c() {
                for (let t = 0; t < i.length; t += 1) i[t].c();
                e = _();
            },
            m(t, s) {
                for (let e = 0; e < i.length; e += 1) i[e].m(t, s);
                $(t, e, s);
            },
            p(t, n) {
                if (257 & n[0]) {
                    let a;
                    for (
                        s = Object.keys(t[24] || {}), a = 0;
                        a < s.length;
                        a += 1
                    ) {
                        const r = Iv(t, s, a);
                        i[a]
                            ? i[a].p(r, n)
                            : ((i[a] = ay(r)),
                              i[a].c(),
                              i[a].m(e.parentNode, e));
                    }
                    for (; a < i.length; a += 1) i[a].d(1);
                    i.length = s.length;
                }
            },
            d(t) {
                M(i, t), t && S(e);
            }
        };
    }
    function oy(t) {
        let e,
            s = Array.from(t[4].stat),
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = ly(Uv(t, s, e));
        return {
            c() {
                for (let t = 0; t < i.length; t += 1) i[t].c();
                e = _();
            },
            m(t, s) {
                for (let e = 0; e < i.length; e += 1) i[e].m(t, s);
                $(t, e, s);
            },
            p(t, n) {
                if (16 & n[0]) {
                    let a;
                    for (
                        s = Array.from(t[4].stat), a = 0;
                        a < s.length;
                        a += 1
                    ) {
                        const r = Uv(t, s, a);
                        i[a]
                            ? i[a].p(r, n)
                            : ((i[a] = ly(r)),
                              i[a].c(),
                              i[a].m(e.parentNode, e));
                    }
                    for (; a < i.length; a += 1) i[a].d(1);
                    i.length = s.length;
                }
            },
            d(t) {
                M(i, t), t && S(e);
            }
        };
    }
    function ly(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = jg(t[19][0], t[19][1]) + "",
            l = Wh.ui.stats.array[t[19][0]] + "";
        return {
            c() {
                (e = E("div")),
                    (s = C("+")),
                    (i = C(o)),
                    (n = T()),
                    (a = C(l)),
                    (r = T()),
                    U(e, "class", "textcyan");
            },
            m(t, o) {
                $(t, e, o), k(e, s), k(e, i), k(e, n), k(e, a), k(e, r);
            },
            p(t, e) {
                16 & e[0] && o !== (o = jg(t[19][0], t[19][1]) + "") && z(i, o),
                    16 & e[0] &&
                        l !== (l = Wh.ui.stats.array[t[19][0]] + "") &&
                        z(a, l);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function cy(t) {
        let e,
            s = t[0].statsConvert,
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = hy(Pv(t, s, e));
        return {
            c() {
                for (let t = 0; t < i.length; t += 1) i[t].c();
                e = _();
            },
            m(t, s) {
                for (let e = 0; e < i.length; e += 1) i[e].m(t, s);
                $(t, e, s);
            },
            p(t, n) {
                if (1 & n[0]) {
                    let a;
                    for (s = t[0].statsConvert, a = 0; a < s.length; a += 1) {
                        const r = Pv(t, s, a);
                        i[a]
                            ? i[a].p(r, n)
                            : ((i[a] = hy(r)),
                              i[a].c(),
                              i[a].m(e.parentNode, e));
                    }
                    for (; a < i.length; a += 1) i[a].d(1);
                    i.length = s.length;
                }
            },
            d(t) {
                M(i, t), t && S(e);
            }
        };
    }
    function hy(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l = Wh.ui.stats.array[t[19][0]] + "",
            c = jg(t[19][0], t[19][1]) + "",
            h = Wh.ui.stats.array[t[19][2]] + "";
        return {
            c() {
                (e = E("div")),
                    (s = C("For 1 ")),
                    (i = C(l)),
                    (n = C(" gain ")),
                    (a = C(c)),
                    (r = T()),
                    (o = C(h)),
                    U(e, "class", "textcyan");
            },
            m(t, l) {
                $(t, e, l),
                    k(e, s),
                    k(e, i),
                    k(e, n),
                    k(e, a),
                    k(e, r),
                    k(e, o);
            },
            p(t, e) {
                1 & e[0] &&
                    l !== (l = Wh.ui.stats.array[t[19][0]] + "") &&
                    z(i, l),
                    1 & e[0] &&
                        c !== (c = jg(t[19][0], t[19][1]) + "") &&
                        z(a, c),
                    1 & e[0] &&
                        h !== (h = Wh.ui.stats.array[t[19][2]] + "") &&
                        z(o, h);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function dy(t) {
        let e,
            s = t[0].custom,
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = uy(_v(t, s, e));
        return {
            c() {
                for (let t = 0; t < i.length; t += 1) i[t].c();
                e = _();
            },
            m(t, s) {
                for (let e = 0; e < i.length; e += 1) i[e].m(t, s);
                $(t, e, s);
            },
            p(t, n) {
                if (259 & n[0]) {
                    let a;
                    for (s = t[0].custom, a = 0; a < s.length; a += 1) {
                        const r = _v(t, s, a);
                        i[a]
                            ? i[a].p(r, n)
                            : ((i[a] = uy(r)),
                              i[a].c(),
                              i[a].m(e.parentNode, e));
                    }
                    for (; a < i.length; a += 1) i[a].d(1);
                    i.length = s.length;
                }
            },
            d(t) {
                M(i, t), t && S(e);
            }
        };
    }
    function uy(t) {
        let e,
            s,
            i,
            n = t[8](t[16][0](t[1])) + "",
            a = t[16][1] + "";
        return {
            c() {
                (e = E("div")),
                    (s = C(n)),
                    (i = C(a)),
                    U(e, "class", "textcyan");
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                3 & e[0] && n !== (n = t[8](t[16][0](t[1])) + "") && z(s, n),
                    1 & e[0] && a !== (a = t[16][1] + "") && z(i, a);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function my(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = t[0].aoe.faction
                ? t[0].aoe.party
                    ? "party members"
                    : "allies"
                : "enemies",
            l = t[8](t[0].aoe.circleRadius) + "";
        return {
            c() {
                (e = E("div")),
                    (s = C("All ")),
                    (i = C(o)),
                    (n = C(" within ")),
                    (a = C(l)),
                    (r = C("m")),
                    U(e, "class", "textfame");
            },
            m(t, o) {
                $(t, e, o), k(e, s), k(e, i), k(e, n), k(e, a), k(e, r);
            },
            p(t, e) {
                1 & e[0] &&
                    o !==
                        (o = t[0].aoe.faction
                            ? t[0].aoe.party
                                ? "party members"
                                : "allies"
                            : "enemies") &&
                    z(i, o),
                    1 & e[0] &&
                        l !== (l = t[8](t[0].aoe.circleRadius) + "") &&
                        z(a, l);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function py(t) {
        let e,
            s,
            i,
            n,
            a = Wh.items.book[t[0].id].description + "";
        return {
            c() {
                (e = E("div")),
                    ((s = E("u")).textContent = "Effect"),
                    (i = C(": ")),
                    (n = C(a)),
                    U(e, "class", "textsecondary pad svelte-14w0l4b");
            },
            m(t, a) {
                $(t, e, a), k(e, s), k(e, i), k(e, n);
            },
            p(t, e) {
                1 & e[0] &&
                    a !== (a = Wh.items.book[t[0].id].description + "") &&
                    z(n, a);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function fy(t) {
        let e, s;
        const i = new wy({ props: { level: t[1], skill: t[13] } });
        return {
            c() {
                (e = E("div")),
                    Et(i.$$.fragment),
                    U(e, "class", "pad svelte-14w0l4b");
            },
            m(t, n) {
                $(t, e, n), Ct(i, e, null), (s = !0);
            },
            p(t, e) {
                const s = {};
                2 & e[0] && (s.level = t[1]),
                    8 & e[0] && (s.skill = t[13]),
                    i.$set(s);
            },
            i(t) {
                s || (vt(i.$$.fragment, t), (s = !0));
            },
            o(t) {
                yt(i.$$.fragment, t), (s = !1);
            },
            d(t) {
                t && S(e), Tt(i);
            }
        };
    }
    function gy(t) {
        let e, s, i, n;
        const a = [Lv, Nv],
            r = [];
        function o(t, e) {
            return t[0].item ? 0 : 1;
        }
        return (
            (s = o(t)),
            (i = r[s] = a[s](t)),
            {
                c() {
                    (e = E("div")),
                        i.c(),
                        U(e, "class", "container textsecondary svelte-14w0l4b");
                },
                m(t, i) {
                    $(t, e, i), r[s].m(e, null), (n = !0);
                },
                p(t, n) {
                    let l = s;
                    (s = o(t)) === l
                        ? r[s].p(t, n)
                        : (ft(),
                          yt(r[l], 1, 1, () => {
                              r[l] = null;
                          }),
                          gt(),
                          (i = r[s]) || (i = r[s] = a[s](t)).c(),
                          vt(i, 1),
                          i.m(e, null));
                },
                i(t) {
                    n || (vt(i), (n = !0));
                },
                o(t) {
                    yt(i), (n = !1);
                },
                d(t) {
                    t && S(e), r[s].d();
                }
            }
        );
    }
    let vy = 1,
        yy = 1;
    function by(t, e, s) {
        let i,
            { skill: n } = e,
            { level: a } = e,
            { asItemDescription: r = !1 } = e,
            o = oo.shift.store;
        h(t, o, t => s(10, (i = t)));
        let l,
            c = [],
            d = {};
        const u = t => {
                if (Wn)
                    return (
                        t.onCast && m("on cast", t.onCast, Wn.player, a),
                        t.onBlock && m("on block", t.onBlock, d, Wn.player),
                        t.onInterval &&
                            m(
                                `every ${t.intervalDuration.toFixed(1)}s`,
                                t.onInterval,
                                d,
                                Wn.player,
                                Wn.player
                            ),
                        t.onPermanent &&
                            m("permanently", t.onPermanent, Wn.player, a),
                        t
                    );
            },
            m = (t, e, i, a, r) => {
                const o = e(i, a, r);
                if (!o || !0 === o) return;
                const l = Object.assign({}, o);
                if (
                    ((l.actiontype = t),
                    l.parent || (l.parent = []),
                    l.parent.push(n),
                    4 == l.mode || 5 == l.mode)
                ) {
                    const t = Ym.get(l.id);
                    c.unshift(u({ ...l, ...t }));
                } else if (n.id === l.id)
                    n.parent || (l.parent = void 0), s(0, (n = { ...n, ...l }));
                else {
                    if (n.parent) {
                        const t = n.parent.find(t => t.id == l.id);
                        if (t)
                            return (
                                t.parent || (l.parent = void 0),
                                void Object.assign(t, l)
                            );
                    }
                    c.unshift(u(l));
                }
            };
        return (
            (t.$set = t => {
                "skill" in t && s(0, (n = t.skill)),
                    "level" in t && s(1, (a = t.level)),
                    "asItemDescription" in t && s(2, (r = t.asItemDescription));
            }),
            (t.$$.update = () => {
                1075 & t.$$.dirty[0] &&
                    (s(
                        5,
                        (d = {
                            stacks: 1,
                            level: a,
                            diminish: vy,
                            diminishFactor: yy
                        })
                    ),
                    s(
                        5,
                        (d.stacks = n.maxStacks ? (i ? 1 : n.maxStacks) : 1),
                        d
                    ),
                    s(0, (n.stacks = d.stacks), n),
                    s(3, (c = [])),
                    n.parent || u(n),
                    n.statsStatic &&
                        (s(4, (l = new yf())), n.statsStatic(d, l)));
            }),
            [
                n,
                a,
                r,
                c,
                l,
                d,
                o,
                {
                    1: "Requires no target",
                    16: "Self cast",
                    256: "on Allies",
                    4096: "on Enemy"
                },
                (t, e = Wn && Wn.player) => {
                    if (!e) return "?";
                    const s = op(t, e);
                    return s % 1 == 0 ? s : s.toFixed(1);
                },
                {
                    0: "Melee attack",
                    1: "Magic attack",
                    2: "Heal",
                    4: "Buff",
                    5: "Stackable buff",
                    6: "Ranged missile"
                }
            ]
        );
    }
    class wy extends Pt {
        constructor(t) {
            super(),
                _t(
                    this,
                    t,
                    by,
                    gy,
                    o,
                    { skill: 0, level: 1, asItemDescription: 2 },
                    [-1, -1]
                );
        }
    }
    function xy(e) {
        let s;
        return {
            c() {
                s = E("span");
            },
            m(t, i) {
                $(t, s, i), (s.innerHTML = e[0]);
            },
            p(t, [e]) {
                1 & e && (s.innerHTML = t[0]);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function ky(t, e, s) {
        let i;
        h(t, Jt, t => s(4, (i = t)));
        let n,
            a,
            { amount: r } = e,
            { isPrice: o = !1 } = e;
        return (
            (t.$set = t => {
                "amount" in t && s(1, (r = t.amount)),
                    "isPrice" in t && s(2, (o = t.isPrice));
            }),
            (t.$$.update = () => {
                22 & t.$$.dirty && s(3, (n = o && r > i)),
                    10 & t.$$.dirty && s(0, (a = lg(r, n)));
            }),
            [a, r, o]
        );
    }
    class $y extends Pt {
        constructor(t) {
            super(), _t(this, t, ky, xy, l, { amount: 1, isPrice: 2 });
        }
    }
    function Sy(e) {
        let s, i, n, a, r, o;
        return {
            c() {
                (s = E("span")),
                    (i = E("img")),
                    (a = E("span")),
                    (r = C(e[0])),
                    U(i, "class", "svgicon texticon"),
                    i.src !== (n = "/assets/ui/icons/gem.svg?v=35201089") &&
                        U(i, "src", "/assets/ui/icons/gem.svg?v=35201089"),
                    U(
                        a,
                        "class",
                        (o = !e[1] || e[0] < e[2] ? "textprimary" : "textred")
                    );
            },
            m(t, e) {
                $(t, s, e), k(s, i), k(s, a), k(a, r);
            },
            p(t, [e]) {
                1 & e && z(r, t[0]),
                    7 & e &&
                        o !==
                            (o =
                                !t[1] || t[0] < t[2]
                                    ? "textprimary"
                                    : "textred") &&
                        U(a, "class", o);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function My(t, e, s) {
        let i;
        h(t, Xt, t => s(2, (i = t)));
        let { amount: n } = e,
            { isPrice: a = !1 } = e;
        return (
            (t.$set = t => {
                "amount" in t && s(0, (n = t.amount)),
                    "isPrice" in t && s(1, (a = t.isPrice));
            }),
            [n, a, i]
        );
    }
    class Ey extends Pt {
        constructor(t) {
            super(), _t(this, t, My, Sy, l, { amount: 0, isPrice: 1 });
        }
    }
    function Cy(t, e, s) {
        const i = t.slice();
        return (i[10] = e[s]), i;
    }
    function Ty(t, e, s) {
        const i = t.slice();
        return (i[13] = e[s]), i;
    }
    function _y(t, e, s) {
        const i = t.slice();
        return (i[16] = e[s]), i;
    }
    function Py(t, e, s) {
        const i = t.slice();
        return (i[10] = e[s]), i;
    }
    function Uy(t) {
        let e,
            s,
            i,
            n = t[0].dbid + "";
        return {
            c() {
                (e = E("small")),
                    (s = C("ID: ")),
                    (i = C(n)),
                    U(e, "class", "textgrey");
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(t, e) {
                1 & e && n !== (n = t[0].dbid + "") && z(i, n);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Iy(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l = "bonus" == t[10][1].type ? "+ " : "",
            c = jg(t[10][0], t[10][1].value) + "",
            h = Wh.ui.stats.array[t[10][0]] + "",
            d = "bonus" == t[10][1].type && t[3] && Ay(t);
        return {
            c() {
                (e = E("div")),
                    (s = C(l)),
                    (i = C(c)),
                    (n = T()),
                    (a = C(h)),
                    (r = T()),
                    d && d.c(),
                    U(
                        e,
                        "class",
                        (o = "text" + Au(t[10][1].qual)[0] + " svelte-o1dug")
                    );
            },
            m(t, o) {
                $(t, e, o),
                    k(e, s),
                    k(e, i),
                    k(e, n),
                    k(e, a),
                    k(e, r),
                    d && d.m(e, null);
            },
            p(t, s) {
                "bonus" == t[10][1].type && t[3]
                    ? d
                        ? d.p(t, s)
                        : ((d = Ay(t)).c(), d.m(e, null))
                    : d && (d.d(1), (d = null));
            },
            d(t) {
                t && S(e), d && d.d();
            }
        };
    }
    function zy(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m = t[0].stats.get(10).value + "",
            p = t[0].stats.get(11).value + "",
            f = Wh.ui.stats.misc.damage + "";
        return {
            c() {
                (e = E("div")),
                    (s = E("span")),
                    (i = C(m)),
                    (a = C(" - ")),
                    (r = E("span")),
                    (o = C(p)),
                    (c = T()),
                    (h = E("span")),
                    (d = C(f)),
                    U(
                        s,
                        "class",
                        (n =
                            "text" +
                            Au(t[0].stats.get(10).qual)[0] +
                            " svelte-o1dug")
                    ),
                    U(
                        r,
                        "class",
                        (l =
                            "text" +
                            Au(t[0].stats.get(11).qual)[0] +
                            " svelte-o1dug")
                    ),
                    U(
                        h,
                        "class",
                        (u =
                            "text" +
                            Au(
                                Math.min(
                                    t[0].stats.get(10).qual,
                                    t[0].stats.get(11).qual
                                )
                            )[0] +
                            " svelte-o1dug")
                    );
            },
            m(t, n) {
                $(t, e, n),
                    k(e, s),
                    k(s, i),
                    k(e, a),
                    k(e, r),
                    k(r, o),
                    k(e, c),
                    k(e, h),
                    k(h, d);
            },
            p(t, e) {
                1 & e && m !== (m = t[0].stats.get(10).value + "") && z(i, m),
                    1 & e &&
                        n !==
                            (n =
                                "text" +
                                Au(t[0].stats.get(10).qual)[0] +
                                " svelte-o1dug") &&
                        U(s, "class", n),
                    1 & e &&
                        p !== (p = t[0].stats.get(11).value + "") &&
                        z(o, p),
                    1 & e &&
                        l !==
                            (l =
                                "text" +
                                Au(t[0].stats.get(11).qual)[0] +
                                " svelte-o1dug") &&
                        U(r, "class", l),
                    1 & e &&
                        u !==
                            (u =
                                "text" +
                                Au(
                                    Math.min(
                                        t[0].stats.get(10).qual,
                                        t[0].stats.get(11).qual
                                    )
                                )[0] +
                                " svelte-o1dug") &&
                        U(h, "class", u);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Ay(e) {
        let s,
            i,
            n,
            a = Math.round(e[10][1].qual) + "";
        return {
            c() {
                (s = E("span")), (i = C(a)), (n = C("%"));
            },
            m(t, e) {
                $(t, s, e), k(s, i), k(s, n);
            },
            p: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function Dy(t) {
        let e, s;
        function i(t, s) {
            return (
                (null == e || 1 & s) &&
                    (e = !(10 != t[10][0] || !t[0].stats.has(11))),
                e ? zy : Iy
            );
        }
        let n = i(t, -1),
            a = n(t);
        return {
            c() {
                a.c(), (s = _());
            },
            m(t, e) {
                a.m(t, e), $(t, s, e);
            },
            p(t, e) {
                n === (n = i(t, e)) && a
                    ? a.p(t, e)
                    : (a.d(1), (a = n(t)) && (a.c(), a.m(s.parentNode, s)));
            },
            d(t) {
                a.d(t), t && S(s);
            }
        };
    }
    function Ry(t) {
        let e,
            s = t[0].logic.custom,
            i = [];
        for (let e = 0; e < s.length; e += 1) i[e] = By(_y(t, s, e));
        return {
            c() {
                for (let t = 0; t < i.length; t += 1) i[t].c();
                e = _();
            },
            m(t, s) {
                for (let e = 0; e < i.length; e += 1) i[e].m(t, s);
                $(t, e, s);
            },
            p(t, n) {
                if (1 & n) {
                    let a;
                    for (s = t[0].logic.custom, a = 0; a < s.length; a += 1) {
                        const r = _y(t, s, a);
                        i[a]
                            ? i[a].p(r, n)
                            : ((i[a] = By(r)),
                              i[a].c(),
                              i[a].m(e.parentNode, e));
                    }
                    for (; a < i.length; a += 1) i[a].d(1);
                    i.length = s.length;
                }
            },
            d(t) {
                M(i, t), t && S(e);
            }
        };
    }
    function By(t) {
        let e,
            s,
            i = t[16] + "";
        return {
            c() {
                (e = E("span")), (s = C(i)), U(e, "class", "textgreen");
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, e) {
                1 & e && i !== (i = t[16] + "") && z(s, i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Fy(t) {
        let e,
            s,
            i,
            n = t[13][0] + "";
        return {
            c() {
                (e = E("div")),
                    (s = C(n)),
                    U(e, "class", (i = t[13][1] ? "textgreen" : "textred"));
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, a) {
                1 & a && n !== (n = t[13][0] + "") && z(s, n),
                    1 & a &&
                        i !== (i = t[13][1] ? "textgreen" : "textred") &&
                        U(e, "class", i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Ny(t) {
        let e;
        return {
            c() {
                ((e = E("div")).textContent = "Account bound"),
                    U(e, "class", "textgreen");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Ly(t) {
        let e;
        const s = new Ey({ props: { amount: t[0].storeValue(), isPrice: !0 } });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                1 & e && (i.amount = t[0].storeValue()), s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Oy(t) {
        let e;
        const s = new $y({
            props: { amount: t[0].goldValue(t[1]), isPrice: t[1] }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                3 & e && (i.amount = t[0].goldValue(t[1])),
                    2 & e && (i.isPrice = t[1]),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function qy(t) {
        let e, s, i, n, a;
        const r = [Zy, Wy],
            o = [];
        function l(t, e) {
            return "book" == t[0].type ? 0 : 1;
        }
        (e = l(t)), (s = o[e] = r[e](t));
        let c = t[5] && jy();
        return {
            c() {
                s.c(), (i = _()), c && c.c(), (n = _());
            },
            m(t, s) {
                o[e].m(t, s), $(t, i, s), c && c.m(t, s), $(t, n, s), (a = !0);
            },
            p(t, a) {
                let h = e;
                (e = l(t)) === h
                    ? o[e].p(t, a)
                    : (ft(),
                      yt(o[h], 1, 1, () => {
                          o[h] = null;
                      }),
                      gt(),
                      (s = o[e]) || (s = o[e] = r[e](t)).c(),
                      vt(s, 1),
                      s.m(i.parentNode, i)),
                    t[5]
                        ? c || ((c = jy()).c(), c.m(n.parentNode, n))
                        : c && (c.d(1), (c = null));
            },
            i(t) {
                a || (vt(s), (a = !0));
            },
            o(t) {
                yt(s), (a = !1);
            },
            d(t) {
                o[e].d(t), t && S(i), c && c.d(t), t && S(n);
            }
        };
    }
    function Hy(e) {
        let s,
            i,
            n = e[4],
            a = [];
        for (let t = 0; t < n.length; t += 1) a[t] = Gy(Cy(e, n, t));
        return {
            c() {
                (s = E("div")),
                    ((i = E("div")).textContent =
                        "Equipping this item will have these effects:");
                for (let t = 0; t < a.length; t += 1) a[t].c();
                U(i, "class", "textgrey"), U(s, "class", "pack svelte-o1dug");
            },
            m(t, e) {
                $(t, s, e), k(s, i);
                for (let t = 0; t < a.length; t += 1) a[t].m(s, null);
            },
            p(t, e) {
                if (16 & e) {
                    let i;
                    for (n = t[4], i = 0; i < n.length; i += 1) {
                        const r = Cy(t, n, i);
                        a[i]
                            ? a[i].p(r, e)
                            : ((a[i] = Gy(r)), a[i].c(), a[i].m(s, null));
                    }
                    for (; i < a.length; i += 1) a[i].d(1);
                    a.length = n.length;
                }
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), M(a, t);
            }
        };
    }
    function Wy(e) {
        let s,
            i,
            n = Gh(e[0].type, e[0].tier) + "";
        return {
            c() {
                (s = E("div")),
                    (i = C(n)),
                    U(s, "class", "pack description svelte-o1dug");
            },
            m(t, e) {
                $(t, s, e), k(s, i);
            },
            p(t, e) {
                1 & e && n !== (n = Gh(t[0].type, t[0].tier) + "") && z(i, n);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function Zy(t) {
        let e;
        const s = new wy({
            props: {
                level: t[0].logic.skilllevel + 1,
                skill: ff.get(t[0].logic.skillid),
                asItemDescription: !0
            }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                1 & e && (i.level = t[0].logic.skilllevel + 1),
                    1 & e && (i.skill = ff.get(t[0].logic.skillid)),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function jy(t) {
        let e;
        return {
            c() {
                ((e = E("div")).textContent = "Press Shift to compare item."),
                    U(e, "class", "pack svelte-o1dug");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Gy(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = t[10][1] > 0 ? "+" : "",
            l = jg(t[10][0], t[10][1]) + "",
            c = Wh.ui.stats.array[t[10][0]] + "";
        return {
            c() {
                (e = E("div")),
                    (s = C(o)),
                    (i = C(l)),
                    (n = T()),
                    (a = C(c)),
                    U(
                        e,
                        "class",
                        (r = "text" + (t[10][1] > 0 ? "green" : "red"))
                    );
            },
            m(t, r) {
                $(t, e, r), k(e, s), k(e, i), k(e, n), k(e, a);
            },
            p(t, n) {
                16 & n && o !== (o = t[10][1] > 0 ? "+" : "") && z(s, o),
                    16 & n &&
                        l !== (l = jg(t[10][0], t[10][1]) + "") &&
                        z(i, l),
                    16 & n &&
                        c !== (c = Wh.ui.stats.array[t[10][0]] + "") &&
                        z(a, c),
                    16 & n &&
                        r !== (r = "text" + (t[10][1] > 0 ? "green" : "red")) &&
                        U(e, "class", r);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Vy(t) {
        let e, s, i;
        const n = new Xy({ props: { item: t[2], comparison: !0 } });
        return {
            c() {
                (e = E("div")),
                    Et(n.$$.fragment),
                    U(
                        e,
                        "class",
                        (s =
                            "slotdescription border " +
                            Au(t[2].quality)[0] +
                            " comparecontainer svelte-o1dug")
                    );
            },
            m(t, s) {
                $(t, e, s), Ct(n, e, null), (i = !0);
            },
            p(t, a) {
                const r = {};
                4 & a && (r.item = t[2]),
                    n.$set(r),
                    (!i ||
                        (4 & a &&
                            s !==
                                (s =
                                    "slotdescription border " +
                                    Au(t[2].quality)[0] +
                                    " comparecontainer svelte-o1dug"))) &&
                        U(e, "class", s);
            },
            i(t) {
                i || (vt(n.$$.fragment, t), (i = !0));
            },
            o(t) {
                yt(n.$$.fragment, t), (i = !1);
            },
            d(t) {
                t && S(e), Tt(n);
            }
        };
    }
    function Yy(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            P,
            I,
            A,
            D,
            R = t[3] ? "T" + (t[0].tier + 1) + " " : "",
            B = jh(t[0].type, t[0].tier) + "",
            F = t[0].upgrade ? " +" + t[0].upgrade : "",
            N = (t[0].stacks ? "" : Au(t[0].quality)[1]) + "",
            L = t[0].type + "",
            O = t[0].quality && !t[0].stacks ? t[0].quality + "%" : "",
            q = t[0].storeValue() > 0 && t[1],
            H = t[0].canBeSold(),
            W = t[0].dbid && Uy(t),
            Z = t[7],
            j = [];
        for (let e = 0; e < Z.length; e += 1) j[e] = Dy(Py(t, Z, e));
        let G = void 0 !== t[0].logic.custom && Ry(t),
            V = t[0].equipReasons(Wn && Wn.player),
            Y = [];
        for (let e = 0; e < V.length; e += 1) Y[e] = Fy(Ty(t, V, e));
        let J = t[0].bound && Ny(),
            X = q && Ly(t),
            Q = H && Oy(t);
        const K = [Hy, qy],
            tt = [];
        function et(t, e) {
            return t[2] ? 0 : 1;
        }
        (P = et(t)), (I = tt[P] = K[P](t));
        let st = t[2] && Vy(t);
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    (i = E("div")),
                    (n = C(R)),
                    (a = C(B)),
                    (r = E("span")),
                    (o = C(F)),
                    (c = E("div")),
                    (h = C(N)),
                    (d = T()),
                    (u = C(L)),
                    (m = T()),
                    (p = E("span")),
                    (f = C(O)),
                    W && W.c(),
                    (g = E("div"));
                for (let t = 0; t < j.length; t += 1) j[t].c();
                (v = _()), G && G.c(), (y = E("div"));
                for (let t = 0; t < Y.length; t += 1) Y[t].c();
                (b = _()),
                    J && J.c(),
                    (w = E("div")),
                    X && X.c(),
                    (x = _()),
                    Q && Q.c(),
                    I.c(),
                    st && st.c(),
                    (A = _()),
                    U(r, "class", "textprimary"),
                    U(
                        i,
                        "class",
                        (l =
                            "slottitle text" +
                            Au(t[0].quality)[0] +
                            " svelte-o1dug")
                    ),
                    U(c, "class", "type textwhite svelte-o1dug"),
                    U(s, "class", "pack svelte-o1dug"),
                    U(g, "class", "pack svelte-o1dug"),
                    U(y, "class", "pack svelte-o1dug"),
                    U(w, "class", "pack svelte-o1dug"),
                    U(e, "class", "container svelte-o1dug");
            },
            m(t, l) {
                $(t, e, l),
                    k(e, s),
                    k(s, i),
                    k(i, n),
                    k(i, a),
                    k(i, r),
                    k(r, o),
                    k(s, c),
                    k(c, h),
                    k(c, d),
                    k(c, u),
                    k(c, m),
                    k(c, p),
                    k(p, f),
                    W && W.m(s, null),
                    k(e, g);
                for (let t = 0; t < j.length; t += 1) j[t].m(g, null);
                k(g, v), G && G.m(g, null), k(e, y);
                for (let t = 0; t < Y.length; t += 1) Y[t].m(y, null);
                k(y, b),
                    J && J.m(y, null),
                    k(e, w),
                    X && X.m(w, null),
                    k(w, x),
                    Q && Q.m(w, null),
                    tt[P].m(e, null),
                    st && st.m(t, l),
                    $(t, A, l),
                    (D = !0);
            },
            p(t, [r]) {
                if (
                    ((!D || 9 & r) &&
                        R !== (R = t[3] ? "T" + (t[0].tier + 1) + " " : "") &&
                        z(n, R),
                    (!D || 1 & r) &&
                        B !== (B = jh(t[0].type, t[0].tier) + "") &&
                        z(a, B),
                    (!D || 1 & r) &&
                        F !== (F = t[0].upgrade ? " +" + t[0].upgrade : "") &&
                        z(o, F),
                    (!D ||
                        (1 & r &&
                            l !==
                                (l =
                                    "slottitle text" +
                                    Au(t[0].quality)[0] +
                                    " svelte-o1dug"))) &&
                        U(i, "class", l),
                    (!D || 1 & r) &&
                        N !==
                            (N =
                                (t[0].stacks ? "" : Au(t[0].quality)[1]) +
                                "") &&
                        z(h, N),
                    (!D || 1 & r) && L !== (L = t[0].type + "") && z(u, L),
                    (!D || 1 & r) &&
                        O !==
                            (O =
                                t[0].quality && !t[0].stacks
                                    ? t[0].quality + "%"
                                    : "") &&
                        z(f, O),
                    t[0].dbid
                        ? W
                            ? W.p(t, r)
                            : ((W = Uy(t)).c(), W.m(s, null))
                        : W && (W.d(1), (W = null)),
                    137 & r)
                ) {
                    let e;
                    for (Z = t[7], e = 0; e < Z.length; e += 1) {
                        const s = Py(t, Z, e);
                        j[e]
                            ? j[e].p(s, r)
                            : ((j[e] = Dy(s)), j[e].c(), j[e].m(g, v));
                    }
                    for (; e < j.length; e += 1) j[e].d(1);
                    j.length = Z.length;
                }
                if (
                    (void 0 !== t[0].logic.custom
                        ? G
                            ? G.p(t, r)
                            : ((G = Ry(t)).c(), G.m(g, null))
                        : G && (G.d(1), (G = null)),
                    1 & r)
                ) {
                    let e;
                    for (
                        V = t[0].equipReasons(Wn && Wn.player), e = 0;
                        e < V.length;
                        e += 1
                    ) {
                        const s = Ty(t, V, e);
                        Y[e]
                            ? Y[e].p(s, r)
                            : ((Y[e] = Fy(s)), Y[e].c(), Y[e].m(y, b));
                    }
                    for (; e < Y.length; e += 1) Y[e].d(1);
                    Y.length = V.length;
                }
                t[0].bound
                    ? J || ((J = Ny()).c(), J.m(y, null))
                    : J && (J.d(1), (J = null)),
                    3 & r && (q = t[0].storeValue() > 0 && t[1]),
                    q
                        ? X
                            ? (X.p(t, r), vt(X, 1))
                            : ((X = Ly(t)).c(), vt(X, 1), X.m(w, x))
                        : X &&
                          (ft(),
                          yt(X, 1, 1, () => {
                              X = null;
                          }),
                          gt()),
                    1 & r && (H = t[0].canBeSold()),
                    H
                        ? Q
                            ? (Q.p(t, r), vt(Q, 1))
                            : ((Q = Oy(t)).c(), vt(Q, 1), Q.m(w, null))
                        : Q &&
                          (ft(),
                          yt(Q, 1, 1, () => {
                              Q = null;
                          }),
                          gt());
                let c = P;
                (P = et(t)) === c
                    ? tt[P].p(t, r)
                    : (ft(),
                      yt(tt[c], 1, 1, () => {
                          tt[c] = null;
                      }),
                      gt(),
                      (I = tt[P]) || (I = tt[P] = K[P](t)).c(),
                      vt(I, 1),
                      I.m(e, null)),
                    t[2]
                        ? st
                            ? (st.p(t, r), vt(st, 1))
                            : ((st = Vy(t)).c(),
                              vt(st, 1),
                              st.m(A.parentNode, A))
                        : st &&
                          (ft(),
                          yt(st, 1, 1, () => {
                              st = null;
                          }),
                          gt());
            },
            i(t) {
                D || (vt(X), vt(Q), vt(I), vt(st), (D = !0));
            },
            o(t) {
                yt(X), yt(Q), yt(I), yt(st), (D = !1);
            },
            d(t) {
                t && S(e),
                    W && W.d(),
                    M(j, t),
                    G && G.d(),
                    M(Y, t),
                    J && J.d(),
                    X && X.d(),
                    Q && Q.d(),
                    tt[P].d(),
                    st && st.d(t),
                    t && S(A);
            }
        };
    }
    function Jy(t, e, s) {
        let i,
            { item: n } = e,
            { comparison: a = !1 } = e,
            { isTrader: r = !1 } = e,
            o = oo.shift.store;
        h(t, o, t => s(3, (i = t)));
        let l = n.stats.has(10)
            ? Array.from(n.stats).filter(t => 11 !== t[0])
            : Array.from(n.stats);
        let c, d, u;
        return (
            (t.$set = t => {
                "item" in t && s(0, (n = t.item)),
                    "comparison" in t && s(8, (a = t.comparison)),
                    "isTrader" in t && s(1, (r = t.isTrader));
            }),
            (t.$$.update = () => {
                265 & t.$$.dirty &&
                    s(
                        2,
                        (c =
                            i && !a
                                ? Wn &&
                                  Wn.player.inventory.slots.get(
                                      Lr[n.type].slot
                                  ) &&
                                  void 0 !==
                                      Wn.player.inventory.slots.get(
                                          Lr[n.type].slot
                                      ).type &&
                                  Wn.player.inventory.slots.get(Lr[n.type].slot)
                                : void 0)
                    ),
                    4 & t.$$.dirty &&
                        s(
                            4,
                            (d = c
                                ? (() => {
                                      const t = new Map();
                                      return (
                                          n.stats.forEach((e, s) => {
                                              t.set(s, e.value);
                                          }),
                                          c.stats.forEach((e, s) => {
                                              const i =
                                                  (t.get(s) || 0) - e.value;
                                              0 !== i
                                                  ? t.set(s, i)
                                                  : t.delete(s);
                                          }),
                                          Array.from(t)
                                      );
                                  })()
                                : void 0)
                        ),
                    257 & t.$$.dirty &&
                        s(5, (u = !a && void 0 !== Lr[n.type].slot));
            }),
            [n, r, c, i, d, u, o, l, a]
        );
    }
    class Xy extends Pt {
        constructor(t) {
            super(),
                _t(this, t, Jy, Yy, o, { item: 0, comparison: 8, isTrader: 1 });
        }
    }
    function Qy(t) {
        let e;
        const s = new wy({
            props: { level: t[9] || 1, skill: { ...ff.get(t[2].id) } }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                512 & e && (i.level = t[9] || 1),
                    4 & e && (i.skill = { ...ff.get(t[2].id) }),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Ky(t) {
        let e;
        const s = new Xy({ props: { item: t[10] } });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                1024 & e && (i.item = t[10]), s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function tb(t) {
        let e, s, i, n;
        const a = [Ky, Qy],
            r = [];
        function o(t, e) {
            return t[2].item && t[10] ? 0 : t[2].item ? -1 : 1;
        }
        return (
            ~(e = o(t)) && (s = r[e] = a[e](t)),
            {
                c() {
                    s && s.c(), (i = _());
                },
                m(t, s) {
                    ~e && r[e].m(t, s), $(t, i, s), (n = !0);
                },
                p(t, n) {
                    let l = e;
                    (e = o(t)) === l
                        ? ~e && r[e].p(t, n)
                        : (s &&
                              (ft(),
                              yt(r[l], 1, 1, () => {
                                  r[l] = null;
                              }),
                              gt()),
                          ~e
                              ? ((s = r[e]) || (s = r[e] = a[e](t)).c(),
                                vt(s, 1),
                                s.m(i.parentNode, i))
                              : (s = null));
                },
                i(t) {
                    n || (vt(s), (n = !0));
                },
                o(t) {
                    yt(s), (n = !1);
                },
                d(t) {
                    ~e && r[e].d(t), t && S(i);
                }
            }
        );
    }
    function eb(t) {
        let e;
        const s = new Cv({
            props: {
                describe: t[2].id >= 0 && (!t[2].item || t[7] > 0),
                descPos: "bottom:100%;left:50%;transform:translateX(-50%);",
                ",": !0,
                status: t[12] ? -1 : void 0 !== t[4] ? t[4].status : 0,
                id: "sk" + t[2].hotkey,
                data: t[2].id >= 0 ? t[2] : void 0,
                auto: t[13] === t[2].id,
                queued: t[14] === t[2].id,
                meta: t[1],
                css: t[6],
                stacks: t[7],
                cd: t[11],
                img: t[5],
                key: t[2].hotkey,
                border:
                    t[14] === t[2].id || t[8]
                        ? "auto"
                        : t[12] || t[13] === t[2].id || t[3] || t[11]
                        ? "grey"
                        : "white",
                $$slots: { default: [tb] },
                $$scope: { ctx: t }
            }
        });
        return (
            s.$on("discard", t[28]),
            s.$on("move", t[29]),
            {
                c() {
                    Et(s.$$.fragment);
                },
                m(t, i) {
                    Ct(s, t, i), (e = !0);
                },
                p(t, [e]) {
                    const i = {};
                    132 & e &&
                        (i.describe = t[2].id >= 0 && (!t[2].item || t[7] > 0)),
                        4112 & e &&
                            (i.status = t[12]
                                ? -1
                                : void 0 !== t[4]
                                ? t[4].status
                                : 0),
                        4 & e && (i.id = "sk" + t[2].hotkey),
                        4 & e && (i.data = t[2].id >= 0 ? t[2] : void 0),
                        8196 & e && (i.auto = t[13] === t[2].id),
                        16388 & e && (i.queued = t[14] === t[2].id),
                        2 & e && (i.meta = t[1]),
                        64 & e && (i.css = t[6]),
                        128 & e && (i.stacks = t[7]),
                        2048 & e && (i.cd = t[11]),
                        32 & e && (i.img = t[5]),
                        4 & e && (i.key = t[2].hotkey),
                        30988 & e &&
                            (i.border =
                                t[14] === t[2].id || t[8]
                                    ? "auto"
                                    : t[12] ||
                                      t[13] === t[2].id ||
                                      t[3] ||
                                      t[11]
                                    ? "grey"
                                    : "white"),
                        1073743364 & e && (i.$$scope = { dirty: e, ctx: t }),
                        s.$set(i);
                },
                i(t) {
                    e || (vt(s.$$.fragment, t), (e = !0));
                },
                o(t) {
                    yt(s.$$.fragment, t), (e = !1);
                },
                d(t) {
                    Tt(s, t);
                }
            }
        );
    }
    function sb(e, s, i) {
        let n,
            a,
            r,
            o,
            l,
            d,
            u = t,
            m = () => (u(), (u = c(p, t => i(2, (n = t)))), p);
        h(e, te, t => i(21, (a = t))),
            h(e, Kt, t => i(23, (r = t))),
            h(e, ee, t => i(24, (o = t))),
            h(e, ne, t => i(13, (l = t))),
            h(e, ie, t => i(14, (d = t))),
            e.$$.on_destroy.push(() => u());
        let { skill: p } = s;
        m();
        let { skillslot: g } = s,
            v = void 0,
            y = void 0,
            b = void 0,
            w = void 0;
        Y(() => {
            if (
                n.hotkey !== v &&
                (void 0 !== y && $(), void 0 !== (v = n.hotkey))
            ) {
                null == (w = oo[v]) && (w = oo[v] = {});
                const t = uo(v, w);
                (y = t.onPress(x)), (b = t.onRelease(k));
            }
        });
        const x = () => {
                if (Wn.player && n.id >= 0) {
                    if (n.item) {
                        const t = Wn.player.inventory.findFirstSlotOfType(
                            n.item.type,
                            n.item.tier
                        );
                        if (void 0 === t) return;
                        f(p, (n.info[0] = t), n);
                    }
                    gd(
                        tr.clientPlayerSkill.packData({
                            id: n.id,
                            info: n.info
                        })
                    ),
                        i(8, (I = !0)),
                        Jr({ id: "ui/pressbtn" });
                }
            },
            k = () => {
                i(8, (I = !1));
            },
            $ = () => {
                w &&
                    w.mappings &&
                    (w.mappings = w.mappings.filter(t => t != v)),
                    w && w.press && (w.press = w.press.filter(t => t != y)),
                    w &&
                        w.release &&
                        (w.release = w.release.filter(t => t != b)),
                    (v = void 0),
                    (y = void 0),
                    (b = void 0);
            };
        let S, M, E, C, T, _, P, U, I, z, A, D, R;
        return (
            J($),
            (e.$set = t => {
                "skill" in t && m(i(0, (p = t.skill))),
                    "skillslot" in t && i(15, (g = t.skillslot));
            }),
            (e.$$.update = () => {
                32772 & e.$$.dirty &&
                    i(1, (S = { type: "skill", slot: g, skill: n })),
                    4 & e.$$.dirty && i(3, (M = n.id < 0)),
                    4 & e.$$.dirty && i(20, (E = n.item)),
                    2097164 & e.$$.dirty && i(4, (C = M ? void 0 : a[n.id])),
                    1048588 & e.$$.dirty &&
                        i(
                            5,
                            (T = M
                                ? void 0
                                : E
                                ? Zd(
                                      E.type,
                                      E.tier,
                                      E.logic ? E.logic.class : 0,
                                      0
                                  )
                                : jd(n.id))
                        ),
                    16 & e.$$.dirty && (_ = C ? C.status : 0),
                    1048576 & e.$$.dirty &&
                        i(6, (P = E ? "slotitem" : "slotskill")),
                    9437184 & e.$$.dirty &&
                        i(7, (U = E ? r[E.type + E.tier] || 0 : void 0)),
                    17825804 & e.$$.dirty &&
                        i(
                            9,
                            (z =
                                E || M
                                    ? 0
                                    : o.reduce(
                                          (t, e) =>
                                              t +
                                              (e.logic.id === n.id && e.level),
                                          0
                                      ))
                        ),
                    132 & e.$$.dirty &&
                        i(
                            10,
                            (A =
                                U && n.item
                                    ? Wn.player.inventory.findFirstItemOfType(
                                          n.item.type,
                                          n.item.tier
                                      )
                                    : void 0)
                        ),
                    16 & e.$$.dirty && i(11, (D = C ? C.cd : void 0)),
                    644 & e.$$.dirty &&
                        i(12, (R = (n.item && !U) || (!n.item && 0 === z)));
            }),
            i(8, (I = !1)),
            [
                p,
                S,
                n,
                M,
                C,
                T,
                P,
                U,
                I,
                z,
                A,
                D,
                R,
                l,
                d,
                g,
                v,
                y,
                b,
                w,
                E,
                a,
                _,
                r,
                o,
                x,
                k,
                $,
                function (t) {
                    Q(e, t);
                },
                function (t) {
                    Q(e, t);
                }
            ]
        );
    }
    class ib extends Pt {
        constructor(t) {
            super(), _t(this, t, sb, eb, o, { skill: 0, skillslot: 15 });
        }
    }
    function nb(t, e, s) {
        const i = t.slice();
        return (i[8] = e[s]), (i[10] = s), i;
    }
    function ab(e) {
        let s;
        const i = new ib({ props: { skill: e[8], skillslot: e[10] } });
        return (
            i.$on("discard", e[1]),
            i.$on("move", e[0]),
            {
                c() {
                    Et(i.$$.fragment);
                },
                m(t, e) {
                    Ct(i, t, e), (s = !0);
                },
                p: t,
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    Tt(i, t);
                }
            }
        );
    }
    function rb(t) {
        let e,
            s,
            i = Me,
            n = [];
        for (let e = 0; e < i.length; e += 1) n[e] = ab(nb(t, i, e));
        const a = t =>
            yt(n[t], 1, 1, () => {
                n[t] = null;
            });
        return {
            c() {
                e = E("div");
                for (let t = 0; t < n.length; t += 1) n[t].c();
                U(e, "id", "skillbar"),
                    U(e, "class", "panel-black bar svelte-1v6qmvo");
            },
            m(t, i) {
                $(t, e, i);
                for (let t = 0; t < n.length; t += 1) n[t].m(e, null);
                s = !0;
            },
            p(t, [s]) {
                if (3 & s) {
                    let r;
                    for (i = Me, r = 0; r < i.length; r += 1) {
                        const a = nb(t, i, r);
                        n[r]
                            ? (n[r].p(a, s), vt(n[r], 1))
                            : ((n[r] = ab(a)),
                              n[r].c(),
                              vt(n[r], 1),
                              n[r].m(e, null));
                    }
                    for (ft(), r = i.length; r < n.length; r += 1) a(r);
                    gt();
                }
            },
            i(t) {
                if (!s) {
                    for (let t = 0; t < i.length; t += 1) vt(n[t]);
                    s = !0;
                }
            },
            o(t) {
                n = n.filter(Boolean);
                for (let t = 0; t < n.length; t += 1) yt(n[t]);
                s = !1;
            },
            d(t) {
                t && S(e), M(n, t);
            }
        };
    }
    function ob(t, e, s) {
        let i, n, a;
        h(t, ts, t => s(3, (i = t))),
            h(t, Ws, t => s(4, (n = t))),
            h(t, Vt, t => s(5, (a = t)));
        const r = Wn.player.name;
        let o = i[r];
        o || (o = f(ts, (i[r] = []), i));
        for (let t = 0; t < n; ++t)
            if (void 0 === i[r][t]) {
                const e = $u[Wn.player.class].startSkills[t];
                i[r].push({
                    id: void 0 !== e && ff.get(e).autoSkillbar ? e : -1,
                    type: 0,
                    info: []
                }),
                    4 === t || 5 === t
                        ? (f(ts, (i[r][t].id = 100), i),
                          f(
                              ts,
                              (i[r][t].item = { type: "misc", tier: t - 4 }),
                              i
                          ))
                        : 11 === t && f(ts, (i[r][11].id = 40), i);
            }
        for (let t = 0; t < n; ++t)
            void 0 === Me[t] && Me.push(It({ id: -1, type: 0, info: [] }));
        i[r].forEach((t, e) => {
            Me[e] && ((t.hotkey = vi["kbSkillbar" + (e + 1)]), Me[e].set(t));
        }),
            Me.forEach((t, e) => {
                t.subscribe(t => {
                    ts.update(s => ((s[r][e] = t), s));
                });
            });
        const l = t => ((t.id = -1), (t.item = void 0), t);
        return [
            t => {
                const { from: e, to: s } = t.detail;
                e !== s &&
                    ("item" == e.type
                        ? Me[s.slot].update(
                              t => (
                                  (t.id = e.item.logic.useSkill),
                                  (t.item = {
                                      type: e.item.type,
                                      tier: e.item.tier
                                  }),
                                  t
                              )
                          )
                        : "skill" == e.type &&
                          (Me[s.slot].update(
                              t => (
                                  (t.id = e.skill.id),
                                  (t.item = e.skill.item),
                                  t
                              )
                          ),
                          void 0 !== e.slot && Me[e.slot].update(l)));
            },
            t => {
                Me[a.meta.slot].update(l);
            }
        ];
    }
    class lb extends Pt {
        constructor(t) {
            super(), _t(this, t, ob, rb, l, {});
        }
    }
    function cb(t) {
        let e;
        const s = new Xy({ props: { isTrader: t[6], item: t[9] } });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                64 & e && (i.isTrader = t[6]),
                    512 & e && (i.item = t[9]),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function hb(t) {
        let e,
            s,
            i = t[9] && cb(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, s) {
                t[9]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = cb(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function db(t) {
        let e;
        const s = new Cv({
            props: {
                cd: t[14],
                id: t[7],
                hover: t[5],
                descPos: t[4],
                descRoot: t[3],
                pickable: t[1],
                status: t[11] ? -1 : 0,
                meta: t[10],
                img: t[8],
                border: t[12],
                stacks: t[13],
                data: t[9],
                key: t[2],
                $$slots: { default: [hb] },
                $$scope: { ctx: t }
            }
        });
        return (
            s.$on("discard", t[21]),
            s.$on("use", t[22]),
            s.$on("click", t[23]),
            s.$on("context", t[24]),
            s.$on("move", t[25]),
            {
                c() {
                    Et(s.$$.fragment);
                },
                m(t, i) {
                    Ct(s, t, i), (e = !0);
                },
                p(t, [e]) {
                    const i = {};
                    16384 & e && (i.cd = t[14]),
                        128 & e && (i.id = t[7]),
                        32 & e && (i.hover = t[5]),
                        16 & e && (i.descPos = t[4]),
                        8 & e && (i.descRoot = t[3]),
                        2 & e && (i.pickable = t[1]),
                        2048 & e && (i.status = t[11] ? -1 : 0),
                        1024 & e && (i.meta = t[10]),
                        256 & e && (i.img = t[8]),
                        4096 & e && (i.border = t[12]),
                        8192 & e && (i.stacks = t[13]),
                        512 & e && (i.data = t[9]),
                        4 & e && (i.key = t[2]),
                        67109440 & e && (i.$$scope = { dirty: e, ctx: t }),
                        s.$set(i);
                },
                i(t) {
                    e || (vt(s.$$.fragment, t), (e = !0));
                },
                o(t) {
                    yt(s.$$.fragment, t), (e = !1);
                },
                d(t) {
                    Tt(s, t);
                }
            }
        );
    }
    function ub(e, s, i) {
        let n,
            a,
            r = t,
            o = () => (r(), (r = c(l, t => i(9, (n = t)))), l);
        h(e, te, t => i(19, (a = t))), e.$$.on_destroy.push(() => r());
        let { item: l } = s;
        o();
        let { filter: d = "" } = s,
            { invslot: u } = s,
            { pickable: m = !0 } = s,
            { text: p } = s,
            { descRoot: f } = s,
            { descPos: g } = s,
            { hover: v } = s,
            { isTrader: y = !1 } = s,
            { clearOnMove: b = !1 } = s,
            { id: w = "" } = s;
        const x = t =>
            !(!0 !== t && !n.moving) ||
            (!!t &&
                !(
                    n.type.includes(t) ||
                    n.logic.level > t ||
                    Wh.items[n.type][
                        "book" === n.type ? n.logic.skillid : n.tier
                    ].name
                        .toLowerCase()
                        .includes(t)
                ));
        let k, $, S, M, E, C, T;
        return (
            (e.$set = t => {
                "item" in t && o(i(0, (l = t.item))),
                    "filter" in t && i(15, (d = t.filter)),
                    "invslot" in t && i(16, (u = t.invslot)),
                    "pickable" in t && i(1, (m = t.pickable)),
                    "text" in t && i(2, (p = t.text)),
                    "descRoot" in t && i(3, (f = t.descRoot)),
                    "descPos" in t && i(4, (g = t.descPos)),
                    "hover" in t && i(5, (v = t.hover)),
                    "isTrader" in t && i(6, (y = t.isTrader)),
                    "clearOnMove" in t && i(17, (b = t.clearOnMove)),
                    "id" in t && i(7, (w = t.id));
            }),
            (e.$$.update = () => {
                66048 & e.$$.dirty &&
                    i(
                        8,
                        (k = n
                            ? Zd(
                                  n.type,
                                  n.tier,
                                  n.logic ? n.logic.class : 0,
                                  zu(n.quality)
                              )
                            : u > 100
                            ? Gd(u)
                            : void 0)
                    ),
                    197121 & e.$$.dirty &&
                        i(
                            10,
                            ($ = {
                                type: "item",
                                slot: u,
                                item: n,
                                store: b ? l : void 0
                            })
                        ),
                    33344 & e.$$.dirty &&
                        i(
                            11,
                            (S = n && (y ? !n.canEquipClass(Wn.player) : x(d)))
                        ),
                    2624 & e.$$.dirty &&
                        i(
                            12,
                            (M = n
                                ? Au(n.quality)[0] +
                                  (S
                                      ? " grey"
                                      : y
                                      ? n.canEquip(Wn.player)
                                          ? ""
                                          : " red"
                                      : "")
                                : "grey")
                        ),
                    512 & e.$$.dirty &&
                        i(
                            13,
                            (E = n && (n.upgrade ? "+" + n.upgrade : n.stacks))
                        ),
                    524800 & e.$$.dirty &&
                        i(
                            18,
                            (C =
                                n && n.logic.use
                                    ? n.logic.useSkill && a[n.logic.useSkill]
                                    : void 0)
                        ),
                    262144 & e.$$.dirty && i(14, (T = C ? C.cd : void 0));
            }),
            [
                l,
                m,
                p,
                f,
                g,
                v,
                y,
                w,
                k,
                n,
                $,
                S,
                M,
                E,
                T,
                d,
                u,
                b,
                C,
                a,
                x,
                function (t) {
                    Q(e, t);
                },
                function (t) {
                    Q(e, t);
                },
                function (t) {
                    Q(e, t);
                },
                function (t) {
                    Q(e, t);
                },
                function (t) {
                    Q(e, t);
                }
            ]
        );
    }
    class mb extends Pt {
        constructor(t) {
            super(),
                _t(this, t, ub, db, o, {
                    item: 0,
                    filter: 15,
                    invslot: 16,
                    pickable: 1,
                    text: 2,
                    descRoot: 3,
                    descPos: 4,
                    hover: 5,
                    isTrader: 6,
                    clearOnMove: 17,
                    id: 7
                });
        }
    }
    function pb(t, e, s) {
        const i = t.slice();
        return (i[15] = e[s]), (i[17] = s), i;
    }
    function fb(t) {
        let e;
        const s = new mb({
            props: {
                id: "bag" + t[17],
                item: t[15],
                invslot: t[17],
                filter: t[0].toLowerCase()
            }
        });
        return (
            s.$on("use", t[8]),
            s.$on("context", t[7]),
            s.$on("move", t[6]),
            {
                c() {
                    Et(s.$$.fragment);
                },
                m(t, i) {
                    Ct(s, t, i), (e = !0);
                },
                p(t, e) {
                    const i = {};
                    2 & e && (i.item = t[15]),
                        1 & e && (i.filter = t[0].toLowerCase()),
                        s.$set(i);
                },
                i(t) {
                    e || (vt(s.$$.fragment, t), (e = !0));
                },
                o(t) {
                    yt(s.$$.fragment, t), (e = !1);
                },
                d(t) {
                    Tt(s, t);
                }
            }
        );
    }
    function gb(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = t[1].filter(yb),
            l = [];
        for (let e = 0; e < o.length; e += 1) l[e] = fb(pb(t, o, e));
        const c = t =>
                yt(l[t], 1, 1, () => {
                    l[t] = null;
                }),
            h = new $y({ props: { amount: t[4] } }),
            d = new Ey({ props: { amount: t[5] } });
        return {
            c() {
                (e = E("input")), (s = E("div"));
                for (let t = 0; t < l.length; t += 1) l[t].c();
                (i = E("div")),
                    Et(h.$$.fragment),
                    (n = E("div")),
                    Et(d.$$.fragment),
                    U(e, "class", "filter svelte-1lsjq6i"),
                    U(e, "type", "text"),
                    U(e, "placeholder", "Filter"),
                    U(s, "class", "slotcontainer svelte-1lsjq6i"),
                    D(s, "grid-auto-rows", "46px"),
                    D(s, "grid-template-columns", "repeat(" + t[3] + ", 46px)"),
                    U(i, "class", "panel-black gold svelte-1lsjq6i"),
                    U(n, "class", "panel-black gold svelte-1lsjq6i"),
                    D(n, "margin-right", "3px"),
                    (r = P(e, "input", t[13]));
            },
            m(r, o) {
                $(r, e, o), A(e, t[0]), $(r, s, o);
                for (let t = 0; t < l.length; t += 1) l[t].m(s, null);
                $(r, i, o),
                    Ct(h, i, null),
                    $(r, n, o),
                    Ct(d, n, null),
                    (a = !0);
            },
            p(t, i) {
                if ((1 & i && e.value !== t[0] && A(e, t[0]), 451 & i)) {
                    let e;
                    for (o = t[1].filter(yb), e = 0; e < o.length; e += 1) {
                        const n = pb(t, o, e);
                        l[e]
                            ? (l[e].p(n, i), vt(l[e], 1))
                            : ((l[e] = fb(n)),
                              l[e].c(),
                              vt(l[e], 1),
                              l[e].m(s, null));
                    }
                    for (ft(), e = o.length; e < l.length; e += 1) c(e);
                    gt();
                }
                (!a || 8 & i) &&
                    D(s, "grid-template-columns", "repeat(" + t[3] + ", 46px)");
                const n = {};
                16 & i && (n.amount = t[4]), h.$set(n);
                const r = {};
                32 & i && (r.amount = t[5]), d.$set(r);
            },
            i(t) {
                if (!a) {
                    for (let t = 0; t < o.length; t += 1) vt(l[t]);
                    vt(h.$$.fragment, t), vt(d.$$.fragment, t), (a = !0);
                }
            },
            o(t) {
                l = l.filter(Boolean);
                for (let t = 0; t < l.length; t += 1) yt(l[t]);
                yt(h.$$.fragment, t), yt(d.$$.fragment, t), (a = !1);
            },
            d(t) {
                t && S(e),
                    t && S(s),
                    M(l, t),
                    t && S(i),
                    Tt(h),
                    t && S(n),
                    Tt(d),
                    r();
            }
        };
    }
    function vb(t) {
        let e, s;
        const i = new og({
            props: {
                title: "Inventory",
                pad: "5",
                icon: "bag",
                $$slots: { default: [gb] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", function () {
                t[14].apply(this, arguments);
            }),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        D(e, "display", t[2] ? "block" : "none"),
                        U(e, "class", "l-corner-lr container svelte-1lsjq6i");
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(n, [a]) {
                    t = n;
                    const r = {};
                    262203 & a && (r.$$scope = { dirty: a, ctx: t }),
                        i.$set(r),
                        (!s || 4 & a) &&
                            D(e, "display", t[2] ? "block" : "none");
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    const yb = (t, e) => e < 101;
    function bb(t, e, s) {
        let i, n, a, r, o, l, c, d, u;
        h(t, Qt, t => s(1, (i = t))),
            h(t, Vt, t => s(9, (n = t))),
            h(t, pe, t => s(10, (a = t))),
            h(t, ce, t => s(11, (r = t))),
            h(t, ge, t => s(12, (o = t))),
            h(t, We, t => s(2, (l = t))),
            h(t, He, t => s(3, (c = t))),
            h(t, Jt, t => s(4, (d = t))),
            h(t, Xt, t => s(5, (u = t)));
        let m = "";
        return [
            m,
            i,
            l,
            c,
            d,
            u,
            t => {
                const { from: e, to: s } = t.detail;
                if (e !== s && "item" == e.type) {
                    if ((Ld("itemmove", `${e.slot} ${s.slot}`), e.slot >= 101))
                        return;
                    e.item.stacks && (e.item.stacks = ""),
                        (e.item.moving = !0),
                        s.item
                            ? (s.item.stacks && (s.item.stacks = ""),
                              i[e.slot].set(s.item),
                              (s.item.moving = !0))
                            : i[e.slot] && i[e.slot].set(void 0),
                        i[s.slot].set(e.item);
                }
            },
            t => {
                if (!t.detail.item || n) return;
                const e = [];
                a
                    ? e.push(Fg.itemstash(t.detail.slot))
                    : (t.detail.item.canEquip(Wn.player) &&
                          (Lr[t.detail.item.type].slot &&
                              e.push(
                                  Fg.itemmove(
                                      t.detail.slot,
                                      Lr[t.detail.item.type].slot
                                  )
                              ),
                          t.detail.item.logic.use &&
                              e.push(
                                  Fg.itemuse(
                                      t.detail.slot,
                                      t.detail.item.logic.useSkill
                                  )
                              )),
                      t.detail.item.canBeDropped() &&
                          e.push(Fg.itemdrop(t.detail.slot)),
                      t.detail.item.stacks > 1 &&
                          (e.push(Fg.itemsplithalf(t.detail.slot)),
                          e.push(Fg.itemsplitone(t.detail.slot)))),
                    Rt.set({
                        x: t.detail.e.pageX - t.detail.e.layerX,
                        y: t.detail.e.pageY + (46 - t.detail.e.layerY),
                        opts: e
                    });
            },
            t => {
                t.detail.item &&
                    (a
                        ? Ld("itemstash", `${t.detail.slot}`)
                        : r
                        ? de.set(t.detail.item)
                        : o
                        ? Ld("itemtradersell", `${t.detail.slot}`)
                        : t.detail.item.canBeDropped() &&
                          Ld("itemdrop", `${t.detail.slot}`));
            },
            n,
            a,
            r,
            o,
            function () {
                (m = this.value), s(0, m);
            },
            t => f(We, (l = !1))
        ];
    }
    class wb extends Pt {
        constructor(t) {
            super(), _t(this, t, bb, vb, o, {});
        }
    }
    const xb = new Map(),
        kb = new Al(0, 0.5),
        $b = () => {
            xb.clear(), kb.reset(0);
        },
        Sb = $b,
        Mb = (t, e) => {
            if (
                void 0 === t.name ||
                !vi.dpsmeterOpen ||
                0 !== t.constructor.type
            )
                return;
            if (
                vi.dpsmeterParty &&
                ((0 === Wn.player.party && t !== Wn.player) ||
                    t.party !== Wn.player.party)
            )
                return;
            let s = void 0;
            xb.has(t.name)
                ? (s = xb.get(t.name))
                : (xb.set(t.name, (s = {})),
                  (s.amount = 0),
                  (s.start = 0),
                  (s.class = t.class),
                  (s.dps = 0),
                  (s.id = t.id),
                  (s.ooc = !0)),
                s.ooc
                    ? ((s.start = Wn.time), (s.ooc = !1), (s.amount = e))
                    : (s.amount += e),
                (s.last = Wn.time);
        };
    var Eb = Object.freeze({
        __proto__: null,
        values: xb,
        init: $b,
        onWorldEnter: Sb,
        tick: t => {
            vi.dpsmeterOpen &&
                kb.done(Wn.time) &&
                (kb.reset(Wn.time),
                xb.forEach((t, e) => {
                    if (t.ooc)
                        return void (Wn.time - t.start > 5 && xb.delete(e));
                    !Wn.entity(t.id) || Wn.time - t.last > 5
                        ? ((t.ooc = !0), (t.start = Wn.time))
                        : (t.dps = Math.ceil(
                              t.amount / Math.max(5, Wn.time - t.start)
                          ));
                }),
                xe.set(
                    Array.from(xb)
                        .sort((t, e) => e[1].dps - t[1].dps)
                        .slice(0, 10)
                ));
        },
        add: Mb
    });
    function Cb(t, e, s) {
        const i = t.slice();
        return (i[8] = e[s]), (i[10] = s), i;
    }
    function Tb(t) {
        let e, s;
        const i = new og({
            props: {
                title: t[1],
                pad: "5",
                icon: "trophy",
                $$slots: { default: [Pb] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", function () {
                t[7].apply(this, arguments);
            }),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(e, "class", "l-corner-lr container svelte-wamtsw");
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(e, s) {
                    t = e;
                    const n = {};
                    2 & s && (n.title = t[1]),
                        2062 & s && (n.$$scope = { dirty: s, ctx: t }),
                        i.$set(n);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    function _b(t, e) {
        let s, i;
        const n = new wg({
            props: {
                size: "0.9em",
                fract: Math.round((100 * e[8][1].dps) / e[2][0][1].dps),
                barcol: "bgc" + e[8][1].class,
                left: `${e[10] + 1}. ${e[8][0]}`,
                right: `${Og(e[8][1].amount)} (${qg(e[8][1].dps)})`
            }
        });
        return {
            key: t,
            first: null,
            c() {
                (s = _()), Et(n.$$.fragment), (this.first = s);
            },
            m(t, e) {
                $(t, s, e), Ct(n, t, e), (i = !0);
            },
            p(t, e) {
                const s = {};
                4 & e &&
                    (s.fract = Math.round(
                        (100 * t[8][1].dps) / t[2][0][1].dps
                    )),
                    4 & e && (s.barcol = "bgc" + t[8][1].class),
                    4 & e && (s.left = `${t[10] + 1}. ${t[8][0]}`),
                    4 & e &&
                        (s.right = `${Og(t[8][1].amount)} (${qg(
                            t[8][1].dps
                        )})`),
                    n.$set(s);
            },
            i(t) {
                i || (vt(n.$$.fragment, t), (i = !0));
            },
            o(t) {
                yt(n.$$.fragment, t), (i = !1);
            },
            d(t) {
                t && S(s), Tt(n, t);
            }
        };
    }
    function Pb(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u = [],
            m = new Map(),
            p = t[2];
        const f = t => t[8][1].id;
        for (let e = 0; e < p.length; e += 1) {
            let s = Cb(t, p, e),
                i = f(s);
            m.set(i, (u[e] = _b(i, s)));
        }
        return {
            c() {
                e = E("div");
                for (let t = 0; t < u.length; t += 1) u[t].c();
                (s = E("div")),
                    (i = E("div")),
                    (n = C(t[1])),
                    (r = E("div")),
                    (o = C("Party")),
                    ((c = E("div")).textContent = "Reset"),
                    U(e, "class", "wrapper svelte-wamtsw"),
                    U(i, "class", "btn grey"),
                    U(
                        r,
                        "class",
                        (l = "btn " + (t[3] ? "grey active" : "black"))
                    ),
                    U(c, "class", "btn grey"),
                    U(s, "class", "grid buttons marg-top svelte-wamtsw"),
                    D(s, "grid-template-columns", "2fr 1fr 1fr"),
                    (d = [
                        P(i, "click", t[4]),
                        P(r, "click", function () {
                            t[5].apply(this, arguments);
                        }),
                        P(c, "click", t[6])
                    ]);
            },
            m(t, a) {
                $(t, e, a);
                for (let t = 0; t < u.length; t += 1) u[t].m(e, null);
                $(t, s, a),
                    k(s, i),
                    k(i, n),
                    k(s, r),
                    k(r, o),
                    k(s, c),
                    (h = !0);
            },
            p(s, i) {
                const a = (t = s)[2];
                ft(),
                    (u = St(u, i, f, 1, t, a, m, e, $t, _b, null, Cb)),
                    gt(),
                    (!h || 2 & i) && z(n, t[1]),
                    (!h ||
                        (8 & i &&
                            l !==
                                (l =
                                    "btn " +
                                    (t[3] ? "grey active" : "black")))) &&
                        U(r, "class", l);
            },
            i(t) {
                if (!h) {
                    for (let t = 0; t < p.length; t += 1) vt(u[t]);
                    h = !0;
                }
            },
            o(t) {
                for (let t = 0; t < u.length; t += 1) yt(u[t]);
                h = !1;
            },
            d(t) {
                t && S(e);
                for (let t = 0; t < u.length; t += 1) u[t].d();
                t && S(s), a(d);
            }
        };
    }
    function Ub(t) {
        let e,
            s,
            i = t[0] && Tb(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[0]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = Tb(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function Ib(t, e, s) {
        let i, n, a, r;
        h(t, Ge, t => s(0, (i = t))),
            h(t, Qe, t => s(1, (n = t))),
            h(t, xe, t => s(2, (a = t))),
            h(t, Xe, t => s(3, (r = t)));
        return [
            i,
            n,
            a,
            r,
            t => {
                Rt.set({
                    x: t.pageX,
                    y: t.pageY - 50,
                    opts: ["Damage", "Healing"].map(t => ({
                        name: t,
                        fun: () => {
                            Qe.set(t), xb.clear();
                        }
                    }))
                });
            },
            t => f(Xe, (r = !r)),
            t => xb.clear(),
            t => f(Ge, (i = !1))
        ];
    }
    class zb extends Pt {
        constructor(t) {
            super(), _t(this, t, Ib, Ub, o, {});
        }
    }
    function Ab(t) {
        let e,
            s,
            i,
            n,
            a,
            r = t[0].Yu + "";
        return {
            c() {
                (e = E("p")),
                    (s = C(r)),
                    (n = T()),
                    U(e, "class", "text location textgreen svelte-hrt4ky");
            },
            m(t, i) {
                $(t, e, i), k(e, s), $(t, n, i), (a = !0);
            },
            p(t, e) {
                (!a || 1 & e) && r !== (r = t[0].Yu + "") && z(s, r);
            },
            i(t) {
                a ||
                    (ot(() => {
                        i || (i = wt(e, Jh, {}, !0)), i.run(1);
                    }),
                    (a = !0));
            },
            o(t) {
                i || (i = wt(e, Jh, {}, !1)), i.run(0), (a = !1);
            },
            d(t) {
                t && S(e), t && i && i.end(), t && S(n);
            }
        };
    }
    function Db(s) {
        let i,
            n,
            o,
            l,
            c = s[0].error + "";
        return {
            c() {
                (i = E("p")),
                    (n = C(c)),
                    U(i, "class", "text error textred svelte-hrt4ky");
            },
            m(t, e) {
                $(t, i, e), k(i, n), (l = !0);
            },
            p(t, e) {
                (!l || 1 & e) && c !== (c = t[0].error + "") && z(n, c);
            },
            i(t) {
                l || (o && o.end(1), (l = !0));
            },
            o(s) {
                (o = (function (s, i, n) {
                    let o,
                        l = i(s, n),
                        c = !0;
                    const h = pt;
                    function d() {
                        const {
                            delay: i = 0,
                            duration: n = 300,
                            easing: r = e,
                            tick: d = t,
                            css: u
                        } = l || bt;
                        u && (o = H(s, 1, 0, n, i, r, u));
                        const m = v() + i,
                            p = m + n;
                        ot(() => ut(s, !1, "start")),
                            x(t => {
                                if (c) {
                                    if (t >= p)
                                        return (
                                            d(0, 1),
                                            ut(s, !1, "end"),
                                            --h.r || a(h.c),
                                            !1
                                        );
                                    if (t >= m) {
                                        const e = r((t - m) / n);
                                        d(1 - e, e);
                                    }
                                }
                                return c;
                            });
                    }
                    return (
                        (h.r += 1),
                        r(l)
                            ? dt().then(() => {
                                  (l = l()), d();
                              })
                            : d(),
                        {
                            end(t) {
                                t && l.tick && l.tick(1, 0),
                                    c && (o && W(s, o), (c = !1));
                            }
                        }
                    );
                })(i, Jh, {})),
                    (l = !1);
            },
            d(t) {
                t && S(i), t && o && o.end();
            }
        };
    }
    function Rb(t) {
        let e,
            s,
            i,
            n = t[0].Yu && Ab(t),
            a = t[0].error && Db(t);
        return {
            c() {
                (e = E("div")),
                    n && n.c(),
                    (s = _()),
                    a && a.c(),
                    U(e, "class", "l-ui");
            },
            m(t, r) {
                $(t, e, r),
                    n && n.m(e, null),
                    k(e, s),
                    a && a.m(e, null),
                    (i = !0);
            },
            p(t, [i]) {
                t[0].Yu
                    ? n
                        ? (n.p(t, i), vt(n, 1))
                        : ((n = Ab(t)).c(), vt(n, 1), n.m(e, s))
                    : n &&
                      (ft(),
                      yt(n, 1, 1, () => {
                          n = null;
                      }),
                      gt()),
                    t[0].error
                        ? a
                            ? (a.p(t, i), vt(a, 1))
                            : ((a = Db(t)).c(), vt(a, 1), a.m(e, null))
                        : a &&
                          (ft(),
                          yt(a, 1, 1, () => {
                              a = null;
                          }),
                          gt());
            },
            i(t) {
                i || (vt(n), vt(a), (i = !0));
            },
            o(t) {
                yt(n), yt(a), (i = !1);
            },
            d(t) {
                t && S(e), n && n.d(), a && a.d();
            }
        };
    }
    function Bb(t, e, s) {
        let i = {},
            n = {};
        return (
            Ft.subscribe(t => {
                s(0, (i[t.type] = t.text), i),
                    n[t.type] && clearTimeout(n[t.type]),
                    (n[t.type] = setTimeout(() => {
                        s(0, (i[t.type] = void 0), i);
                    }, t.time || 1e3));
            }),
            [i]
        );
    }
    class Fb extends Pt {
        constructor(t) {
            super(), _t(this, t, Bb, Rb, o, {});
        }
    }
    function Nb(t, e, s) {
        const i = t.slice();
        return (i[6] = e[s]), i;
    }
    function Lb(t) {
        let e, s, i, n;
        const a = new og({
            props: {
                title: "Request",
                close: !1,
                $$slots: { default: [qb] },
                $$scope: { ctx: t }
            }
        });
        return {
            c() {
                (e = E("div")),
                    Et(a.$$.fragment),
                    U(e, "class", "absCentered container svelte-cy0tay"),
                    (n = P(e, "outroend", t[5]));
            },
            m(t, s) {
                $(t, e, s), Ct(a, e, null), (i = !0);
            },
            p(t, e) {
                const s = {};
                518 & e && (s.$$scope = { dirty: e, ctx: t }), a.$set(s);
            },
            i(t) {
                i ||
                    (vt(a.$$.fragment, t),
                    ot(() => {
                        s || (s = wt(e, Jh, { duration: 100 }, !0)), s.run(1);
                    }),
                    (i = !0));
            },
            o(t) {
                yt(a.$$.fragment, t),
                    s || (s = wt(e, Jh, { duration: 100 }, !1)),
                    s.run(0),
                    (i = !1);
            },
            d(t) {
                t && S(e), Tt(a), t && s && s.end(), n();
            }
        };
    }
    function Ob(t) {
        let e,
            s,
            i,
            n,
            a,
            r = t[6].text + "",
            o = t[6].nocombat && t[2].combat ? " (Must leave combat)" : "";
        function l(...e) {
            return t[4](t[6], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    (s = C(r)),
                    (i = C(o)),
                    U(
                        e,
                        "class",
                        (n =
                            "choice " +
                            (t[6].nocombat && t[2].combat
                                ? "nocombat textgrey"
                                : "") +
                            " svelte-cy0tay")
                    ),
                    (a = P(e, "click", l));
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i);
            },
            p(a, l) {
                (t = a),
                    2 & l && r !== (r = t[6].text + "") && z(s, r),
                    6 & l &&
                        o !==
                            (o =
                                t[6].nocombat && t[2].combat
                                    ? " (Must leave combat)"
                                    : "") &&
                        z(i, o),
                    6 & l &&
                        n !==
                            (n =
                                "choice " +
                                (t[6].nocombat && t[2].combat
                                    ? "nocombat textgrey"
                                    : "") +
                                " svelte-cy0tay") &&
                        U(e, "class", n);
            },
            d(t) {
                t && S(e), a();
            }
        };
    }
    function qb(t) {
        let e,
            s,
            i,
            n,
            a = t[1][0].title + "",
            r = t[1][0].text + "",
            o = t[1][0].choices,
            l = [];
        for (let e = 0; e < o.length; e += 1) l[e] = Ob(Nb(t, o, e));
        return {
            c() {
                (e = E("div")), (s = E("h3")), (i = C(a)), (n = E("p"));
                for (let t = 0; t < l.length; t += 1) l[t].c();
                U(s, "class", "textprimary"),
                    U(e, "class", "container svelte-cy0tay");
            },
            m(t, a) {
                $(t, e, a), k(e, s), k(s, i), k(e, n), (n.innerHTML = r);
                for (let t = 0; t < l.length; t += 1) l[t].m(e, null);
            },
            p(t, s) {
                if (
                    (2 & s && a !== (a = t[1][0].title + "") && z(i, a),
                    2 & s && r !== (r = t[1][0].text + "") && (n.innerHTML = r),
                    14 & s)
                ) {
                    let i;
                    for (o = t[1][0].choices, i = 0; i < o.length; i += 1) {
                        const n = Nb(t, o, i);
                        l[i]
                            ? l[i].p(n, s)
                            : ((l[i] = Ob(n)), l[i].c(), l[i].m(e, null));
                    }
                    for (; i < l.length; i += 1) l[i].d(1);
                    l.length = o.length;
                }
            },
            d(t) {
                t && S(e), M(l, t);
            }
        };
    }
    function Hb(t) {
        let e,
            s,
            i = t[1].length && !t[0] && Lb(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[1].length && !t[0]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = Lb(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function Wb(t, e, s) {
        let i, n;
        h(t, Bt, t => s(1, (i = t))), h(t, jt, t => s(2, (n = t)));
        let a = !1;
        const r = async t => {
            t && (await t()), Bt.update(t => (t.shift(), t)), s(0, (a = !0));
        };
        return [
            a,
            i,
            n,
            r,
            t => {
                r(t.fun);
            },
            () => {
                s(0, (a = !1));
            }
        ];
    }
    class Zb extends Pt {
        constructor(t) {
            super(), _t(this, t, Wb, Hb, o, {});
        }
    }
    function jb(t) {
        let e,
            s,
            i,
            n = t[0][0].text + "",
            a = t[0][0].icon && Gb(t);
        return {
            c() {
                (e = E("div")),
                    a && a.c(),
                    (s = E("div")),
                    U(
                        e,
                        "class",
                        "notification panel-black border grey svelte-9nlpzp"
                    ),
                    (i = P(e, "click", t[2]));
            },
            m(t, i) {
                $(t, e, i), a && a.m(e, null), k(e, s), (s.innerHTML = n);
            },
            p(t, i) {
                t[0][0].icon
                    ? a
                        ? a.p(t, i)
                        : ((a = Gb(t)).c(), a.m(e, s))
                    : a && (a.d(1), (a = null)),
                    1 & i && n !== (n = t[0][0].text + "") && (s.innerHTML = n);
            },
            d(t) {
                t && S(e), a && a.d(), i();
            }
        };
    }
    function Gb(t) {
        let e, s, i;
        return {
            c() {
                U(
                    (e = E("img")),
                    "class",
                    (s = "icon " + t[0][0].css + " svelte-9nlpzp")
                ),
                    e.src !== (i = "/assets/ui/" + t[0][0].icon) &&
                        U(e, "src", i);
            },
            m(t, s) {
                $(t, e, s);
            },
            p(t, n) {
                1 & n &&
                    s !== (s = "icon " + t[0][0].css + " svelte-9nlpzp") &&
                    U(e, "class", s),
                    1 & n &&
                        e.src !== (i = "/assets/ui/" + t[0][0].icon) &&
                        U(e, "src", i);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Vb(e) {
        let s,
            i = e[0].length && !e[1] && jb(e);
        return {
            c() {
                i && i.c(), (s = _());
            },
            m(t, e) {
                i && i.m(t, e), $(t, s, e);
            },
            p(t, [e]) {
                t[0].length && !t[1]
                    ? i
                        ? i.p(t, e)
                        : ((i = jb(t)).c(), i.m(s.parentNode, s))
                    : i && (i.d(1), (i = null));
            },
            i: t,
            o: t,
            d(t) {
                i && i.d(t), t && S(s);
            }
        };
    }
    function Yb(t, e, s) {
        let i, n;
        h(t, zt, t => s(0, (i = t))), h(t, Ht, t => s(1, (n = t)));
        return [
            i,
            n,
            () => {
                zt.update(t => (t.shift(), t));
            }
        ];
    }
    class Jb extends Pt {
        constructor(t) {
            super(), _t(this, t, Yb, Vb, o, {});
        }
    }
    function Xb(t, e, s) {
        const i = t.slice();
        return (i[5] = e[s]), i;
    }
    function Qb(t) {
        let e, s;
        return {
            c() {
                (e = E("div")), (s = C(t[0])), U(e, "class", "btn border grey");
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, e) {
                1 & e && z(s, t[0]);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Kb(t) {
        let e, s, i, n, r;
        function o(...e) {
            return t[2](t[5], ...e);
        }
        function l(...e) {
            return t[4](t[5], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    U((s = E("img")), "class", "svgicon"),
                    s.src !==
                        (i =
                            "/assets/ui/icons/" +
                            t[5].img +
                            ".svg?v=35201089") && U(s, "src", i),
                    U(e, "id", (n = "sys" + t[5].img)),
                    U(e, "class", "btn border black"),
                    (r = [
                        P(e, "mouseenter", function () {
                            o.apply(this, arguments);
                        }),
                        P(e, "mouseleave", function () {
                            t[3].apply(this, arguments);
                        }),
                        P(e, "click", l)
                    ]);
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(e, s) {
                t = e;
            },
            d(t) {
                t && S(e), a(r);
            }
        };
    }
    function tw(e) {
        let s,
            i,
            n = "" !== e[0] && Qb(e),
            a = e[1],
            r = [];
        for (let t = 0; t < a.length; t += 1) r[t] = Kb(Xb(e, a, t));
        return {
            c() {
                (s = E("div")), n && n.c(), (i = _());
                for (let t = 0; t < r.length; t += 1) r[t].c();
                U(s, "class", "btnbar svelte-133q4bd");
            },
            m(t, e) {
                $(t, s, e), n && n.m(s, null), k(s, i);
                for (let t = 0; t < r.length; t += 1) r[t].m(s, null);
            },
            p(t, [e]) {
                if (
                    ("" !== t[0]
                        ? n
                            ? n.p(t, e)
                            : ((n = Qb(t)).c(), n.m(s, i))
                        : n && (n.d(1), (n = null)),
                    3 & e)
                ) {
                    let i;
                    for (a = t[1], i = 0; i < a.length; i += 1) {
                        const n = Xb(t, a, i);
                        r[i]
                            ? r[i].p(n, e)
                            : ((r[i] = Kb(n)), r[i].c(), r[i].m(s, null));
                    }
                    for (; i < r.length; i += 1) r[i].d(1);
                    r.length = a.length;
                }
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), n && n.d(), M(r, t);
            }
        };
    }
    function ew(t, e, s) {
        let i = "";
        return [
            i,
            [
                { img: "gem", store: Ye, desc: "Elixir" },
                { img: "char", store: Ke, desc: "Character" },
                { img: "book", store: je, desc: "Skills" },
                { img: "bag", store: We, desc: "Inventory" },
                { img: "clan", store: Je, desc: "Clan" },
                { img: "trophy", store: Ge, desc: "DPS Meter" },
                { img: "cog", store: Ze, desc: "Settings" },
                {
                    img: "fullscreen",
                    fun: () => {
                        document.fullscreenElement
                            ? document.exitFullscreen()
                            : document.documentElement.requestFullscreen();
                    },
                    desc: "Fullscreen"
                },
                {
                    img: "back",
                    fun: () => {
                        document.location.href = "/";
                    },
                    desc: "Back to Menu"
                }
            ],
            (t, e) => s(0, (i = t.desc)),
            t => s(0, (i = "")),
            (t, e) => {
                t.fun ? t.fun() : t.store.update(t => !t);
            }
        ];
    }
    class sw extends Pt {
        constructor(t) {
            super(), _t(this, t, ew, tw, o, {});
        }
    }
    function iw(e) {
        let s, i, n, a, r, o, l;
        return {
            c() {
                (s = E("div")),
                    ((i = E("a")).innerHTML =
                        '<img class="svgicon" src="/assets/ui/icons/instagram.svg?v=35201089">'),
                    ((n = E("a")).innerHTML =
                        '<img class="svgicon" src="/assets/ui/icons/reddit.svg?v=35201089">'),
                    ((a = E("a")).innerHTML =
                        '<img class="svgicon" src="/assets/ui/icons/discord.svg?v=35201089">'),
                    ((r = E("a")).innerHTML =
                        '<img class="svgicon" src="/assets/ui/icons/twitter.svg?v=35201089">'),
                    ((o = E("div")).innerHTML =
                        '<img class="svgicon" src="/assets/ui/icons/twitch.svg?v=35201089">'),
                    U(i, "class", "btn border black"),
                    U(i, "target", "_blank"),
                    U(i, "rel", "noopener noreferrer"),
                    U(i, "href", "https://www.instagram.com/hordesio.official"),
                    U(n, "class", "btn border black"),
                    U(n, "target", "_blank"),
                    U(n, "rel", "noopener noreferrer"),
                    U(n, "href", "https://www.reddit.com/r/Hordesio"),
                    U(a, "class", "btn border black"),
                    U(a, "target", "_blank"),
                    U(a, "rel", "noopener noreferrer"),
                    U(a, "href", "https://discord.gg/hordes"),
                    U(r, "class", "btn border black"),
                    U(r, "target", "_blank"),
                    U(r, "rel", "noopener noreferrer"),
                    U(r, "href", "https://twitter.com/hordesio"),
                    U(o, "class", "btn border black"),
                    U(s, "class", "btnbar svelte-1wol45y"),
                    (l = P(o, "click", function () {
                        e[1].apply(this, arguments);
                    }));
            },
            m(t, e) {
                $(t, s, e), k(s, i), k(s, n), k(s, a), k(s, r), k(s, o);
            },
            p(t, [s]) {
                e = t;
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), l();
            }
        };
    }
    function nw(t, e, s) {
        let i;
        h(t, Ve, t => s(0, (i = t)));
        return [i, t => f(Ve, (i = !i))];
    }
    class aw extends Pt {
        constructor(t) {
            super(), _t(this, t, nw, iw, o, {});
        }
    }
    function rw(e) {
        let s, i, n;
        return {
            c() {
                U(
                    (s = E("div")),
                    "class",
                    (i = "btn checkbox " + (e[2] ? "active" : ""))
                ),
                    (n = P(s, "click", function () {
                        e[3].apply(this, arguments);
                    }));
            },
            m(t, e) {
                $(t, s, e);
            },
            p(t, [n]) {
                (e = t),
                    4 & n &&
                        i !== (i = "btn checkbox " + (e[2] ? "active" : "")) &&
                        U(s, "class", i);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), n();
            }
        };
    }
    function ow(e, s, i) {
        let n,
            a = t,
            r = () => (a(), (a = c(o, t => i(2, (n = t)))), o);
        e.$$.on_destroy.push(() => a());
        let { store: o } = s;
        r();
        let { cb: l } = s;
        return (
            (e.$set = t => {
                "store" in t && r(i(0, (o = t.store))),
                    "cb" in t && i(1, (l = t.cb));
            }),
            [
                o,
                l,
                n,
                t => {
                    f(o, (n = !n)), l && l(n);
                }
            ]
        );
    }
    class lw extends Pt {
        constructor(t) {
            super(), _t(this, t, ow, rw, o, { store: 0, cb: 1 });
        }
    }
    function cw(t, e, s) {
        const i = t.slice();
        return (i[52] = e[s]), (i[54] = s), i;
    }
    function hw(t, e, s) {
        const i = t.slice();
        return (i[49] = e[s]), i;
    }
    function dw(t, e, s) {
        const i = t.slice();
        return (i[46] = e[s]), i;
    }
    function uw(t, e, s) {
        const i = t.slice();
        return (i[55] = e[s]), i;
    }
    function mw(t) {
        let e, s;
        const i = new og({
            props: {
                title: Wh.ui.settings.name,
                icon: "cog",
                $$slots: { default: [$w] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", t[45]),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(e, "class", "container svelte-1xknmu9");
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(t, e) {
                    const s = {};
                    (524281 & e[0]) | (134217728 & e[1]) &&
                        (s.$$scope = { dirty: e, ctx: t }),
                        i.$set(s);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    function pw(t) {
        let e,
            s,
            i,
            n,
            a = t[55].name + "";
        function r(...e) {
            return t[23](t[55], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    (s = C(a)),
                    U(
                        e,
                        "class",
                        (i = "choice " + (t[55] == t[0] ? "active" : ""))
                    ),
                    (n = P(e, "click", function () {
                        r.apply(this, arguments);
                    }));
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(s, n) {
                (t = s),
                    1 & n[0] &&
                        i !==
                            (i = "choice " + (t[55] == t[0] ? "active" : "")) &&
                        U(e, "class", i);
            },
            d(t) {
                t && S(e), n();
            }
        };
    }
    function fw(t) {
        let e, s, i, n, a;
        const r = new lw({ props: { store: hs } });
        let o = Wh.ui.chat.types,
            l = [];
        for (let e = 0; e < o.length; e += 1) l[e] = ww(cw(t, o, e));
        return {
            c() {
                ((e = E("div")).textContent = `${Wh.ui.settings.chatbubbles}`),
                    Et(r.$$.fragment),
                    ((s = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.combatlog}`),
                    (i = E("div"));
                for (let t = 0; t < l.length; t += 1) l[t].c();
                (n = _()), U(s, "class", "textprimary");
            },
            m(t, o) {
                $(t, e, o), Ct(r, t, o), $(t, s, o), $(t, i, o);
                for (let e = 0; e < l.length; e += 1) l[e].m(t, o);
                $(t, n, o), (a = !0);
            },
            p(t, e) {
                if (262144 & e[0]) {
                    let s;
                    for (o = Wh.ui.chat.types, s = 0; s < o.length; s += 1) {
                        const i = cw(t, o, s);
                        l[s]
                            ? l[s].p(i, e)
                            : ((l[s] = ww(i)),
                              l[s].c(),
                              l[s].m(n.parentNode, n));
                    }
                    for (; s < l.length; s += 1) l[s].d(1);
                    l.length = o.length;
                }
            },
            i(t) {
                a || (vt(r.$$.fragment, t), (a = !0));
            },
            o(t) {
                yt(r.$$.fragment, t), (a = !1);
            },
            d(t) {
                t && S(e), Tt(r, t), t && S(s), t && S(i), M(l, t), t && S(n);
            }
        };
    }
    function gw(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            _,
            I,
            D,
            B,
            F,
            N,
            L,
            O,
            q,
            H,
            W,
            Z,
            j,
            G,
            V,
            Y,
            J,
            X,
            Q,
            K,
            tt,
            et,
            st,
            it,
            nt,
            at,
            rt,
            lt,
            ct,
            ht,
            dt,
            ut,
            mt,
            pt,
            ft,
            gt,
            bt,
            wt,
            xt,
            kt,
            $t,
            St,
            Mt,
            _t,
            Pt,
            Ut,
            It,
            zt,
            At,
            Dt,
            Rt,
            Bt,
            Ft,
            Nt,
            Lt,
            Ot,
            qt,
            Ht = Wh.ui.settings.language + "",
            Wt = !1,
            Zt = !1,
            jt = Wh.ui.settings.invwidth + "",
            Gt = Wh.ui.settings.stashwidth + "",
            Vt = Wh.ui.settings.stashheight + "",
            Yt = t[20],
            Jt = [];
        for (let e = 0; e < Yt.length; e += 1) Jt[e] = xw(hw(t, Yt, e));
        const Xt = new lw({ props: { store: vs } }),
            Qt = new lw({ props: { store: as } }),
            Kt = new lw({ props: { store: rs } }),
            te = new lw({ props: { store: gs } }),
            ee = new lw({ props: { store: us } }),
            se = new lw({ props: { store: ds } }),
            ie = new lw({ props: { store: ms } }),
            ne = new lw({ props: { store: bs } }),
            ae = new lw({ props: { store: ws } }),
            re = new lw({ props: { store: $s } });
        function oe() {
            (Wt = !0), t[39].call(rt);
        }
        function le() {
            (Zt = !0), t[40].call(ct);
        }
        const ce = new lw({ props: { store: os } }),
            he = new lw({ props: { store: ls } });
        return {
            c() {
                (e = E("div")),
                    (s = C(Ht)),
                    (i = T()),
                    (n = E("br")),
                    ((r = E("small")).textContent = "Requires reload"),
                    (o = E("select"));
                for (let t = 0; t < Jt.length; t += 1) Jt[t].c();
                ((l = E("div")).textContent = `${Wh.ui.settings.tutorial}`),
                    (c = E("div")),
                    ((h = E("div")).textContent = "Restart"),
                    ((d = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.resettutorial}`),
                    ((u = E("div")).textContent = "Disable"),
                    ((m = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.disabletutorial}`),
                    ((p = E("div")).textContent = "FPS / Ping"),
                    (f = E("div")),
                    ((g = E("div")).textContent = "Show FPS / Ping"),
                    Et(Xt.$$.fragment),
                    ((v = E("div")).textContent = "Nameplates"),
                    (y = E("div")),
                    ((b = E("div")).textContent = "Draw range"),
                    (w = E("input")),
                    ((x = E("div")).textContent = "Show Monsters"),
                    Et(Qt.$$.fragment),
                    ((_ = E("div")).textContent = "Transparency"),
                    Et(Kt.$$.fragment),
                    ((I = E("div")).textContent = "Drops"),
                    (D = E("div")),
                    ((B = E("div")).textContent = "Show Drop Quality %"),
                    Et(te.$$.fragment),
                    (F = E("div")),
                    (N = C("Drop Quality Minimum")),
                    (L = E("br")),
                    (O = E("small")),
                    (q = C(t[11])),
                    (H = C("%")),
                    (W = E("input")),
                    ((Z = E("div")).textContent = "Damage / Healing"),
                    (j = E("div")),
                    ((G = E("div")).textContent = "Incoming damage"),
                    Et(ee.$$.fragment),
                    ((V = E("div")).textContent = "Incoming healing"),
                    Et(se.$$.fragment),
                    ((Y = E("div")).textContent = "Incoming mana"),
                    Et(ie.$$.fragment),
                    ((J = E("div")).textContent = "Unitframes"),
                    (X = E("div")),
                    ((Q = E("div")).textContent = "Show self in party"),
                    Et(ne.$$.fragment),
                    ((K = E("div")).textContent = "Party mana"),
                    Et(ae.$$.fragment),
                    ((tt = E("div")).textContent = "Party frame width"),
                    (et = E("input")),
                    ((st = E("div")).textContent = "Buffs"),
                    (it = E("div")),
                    ((nt = E("div")).textContent = "Hide foreign buffs"),
                    Et(re.$$.fragment),
                    ((at = E("div")).textContent = "Buff maximum"),
                    (rt = E("input")),
                    ((lt = E("div")).textContent = "Buff maximum (party)"),
                    (ct = E("input")),
                    ((ht = E("div")).textContent = "Map"),
                    (dt = E("div")),
                    ((ut = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.mapshowmonsters}`),
                    Et(ce.$$.fragment),
                    ((mt = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.maplowqual}`),
                    Et(he.$$.fragment),
                    ((pt = E("div")).textContent = `${Wh.ui.inventory.name}`),
                    (ft = E("div")),
                    (gt = E("div")),
                    (bt = C(jt)),
                    (wt = E("br")),
                    (xt = E("small")),
                    (kt = C(t[15])),
                    ($t = E("input")),
                    ((St = E("div")).textContent = "Stash"),
                    (Mt = E("div")),
                    (_t = E("div")),
                    (Pt = C(Gt)),
                    (Ut = E("br")),
                    (It = E("small")),
                    (zt = C(t[16])),
                    (At = E("input")),
                    (Dt = E("div")),
                    (Rt = C(Vt)),
                    (Bt = E("br")),
                    (Ft = E("small")),
                    (Nt = C(t[17])),
                    (Lt = E("input")),
                    U(r, "class", "textgrey"),
                    void 0 === t[9] && ot(() => t[33].call(o)),
                    U(l, "class", "textprimary"),
                    U(d, "class", "btn blue"),
                    U(m, "class", "btn orange"),
                    U(p, "class", "textprimary"),
                    U(v, "class", "textprimary"),
                    U(w, "type", "range"),
                    U(I, "class", "textprimary"),
                    U(O, "class", "textgrey"),
                    U(W, "type", "range"),
                    U(W, "min", "0"),
                    U(W, "max", "100"),
                    U(Z, "class", "textprimary"),
                    U(J, "class", "textprimary"),
                    U(et, "type", "range"),
                    U(et, "min", "50"),
                    U(et, "max", "400"),
                    U(st, "class", "textprimary"),
                    U(rt, "placeholder", "14"),
                    U(rt, "type", "number"),
                    U(rt, "min", "0"),
                    U(ct, "placeholder", "8"),
                    U(ct, "type", "number"),
                    U(ct, "min", "0"),
                    U(ht, "class", "textprimary"),
                    U(pt, "class", "textprimary"),
                    U(xt, "class", "textgrey"),
                    U($t, "type", "range"),
                    U($t, "min", "4"),
                    U($t, "max", "10"),
                    U(St, "class", "textprimary"),
                    U(It, "class", "textgrey"),
                    U(At, "type", "range"),
                    U(At, "min", "6"),
                    U(At, "max", "20"),
                    U(Ft, "class", "textgrey"),
                    U(Lt, "type", "range"),
                    U(Lt, "min", "50"),
                    U(Lt, "max", "500"),
                    (qt = [
                        P(o, "change", t[33]),
                        P(o, "change", t[21]),
                        P(d, "click", t[34]),
                        P(m, "click", t[35]),
                        P(w, "change", t[36]),
                        P(w, "input", t[36]),
                        P(W, "change", t[37]),
                        P(W, "input", t[37]),
                        P(et, "change", t[38]),
                        P(et, "input", t[38]),
                        P(rt, "input", oe),
                        P(ct, "input", le),
                        P($t, "change", t[41]),
                        P($t, "input", t[41]),
                        P(At, "change", t[42]),
                        P(At, "input", t[42]),
                        P(Lt, "change", t[43]),
                        P(Lt, "input", t[43])
                    ]);
            },
            m(a, S) {
                $(a, e, S), k(e, s), k(e, i), k(e, n), k(e, r), $(a, o, S);
                for (let t = 0; t < Jt.length; t += 1) Jt[t].m(o, null);
                R(o, t[9]),
                    $(a, l, S),
                    $(a, c, S),
                    $(a, h, S),
                    $(a, d, S),
                    $(a, u, S),
                    $(a, m, S),
                    $(a, p, S),
                    $(a, f, S),
                    $(a, g, S),
                    Ct(Xt, a, S),
                    $(a, v, S),
                    $(a, y, S),
                    $(a, b, S),
                    $(a, w, S),
                    A(w, t[10]),
                    $(a, x, S),
                    Ct(Qt, a, S),
                    $(a, _, S),
                    Ct(Kt, a, S),
                    $(a, I, S),
                    $(a, D, S),
                    $(a, B, S),
                    Ct(te, a, S),
                    $(a, F, S),
                    k(F, N),
                    k(F, L),
                    k(F, O),
                    k(O, q),
                    k(O, H),
                    $(a, W, S),
                    A(W, t[11]),
                    $(a, Z, S),
                    $(a, j, S),
                    $(a, G, S),
                    Ct(ee, a, S),
                    $(a, V, S),
                    Ct(se, a, S),
                    $(a, Y, S),
                    Ct(ie, a, S),
                    $(a, J, S),
                    $(a, X, S),
                    $(a, Q, S),
                    Ct(ne, a, S),
                    $(a, K, S),
                    Ct(ae, a, S),
                    $(a, tt, S),
                    $(a, et, S),
                    A(et, t[12]),
                    $(a, st, S),
                    $(a, it, S),
                    $(a, nt, S),
                    Ct(re, a, S),
                    $(a, at, S),
                    $(a, rt, S),
                    A(rt, t[13]),
                    $(a, lt, S),
                    $(a, ct, S),
                    A(ct, t[14]),
                    $(a, ht, S),
                    $(a, dt, S),
                    $(a, ut, S),
                    Ct(ce, a, S),
                    $(a, mt, S),
                    Ct(he, a, S),
                    $(a, pt, S),
                    $(a, ft, S),
                    $(a, gt, S),
                    k(gt, bt),
                    k(gt, wt),
                    k(gt, xt),
                    k(xt, kt),
                    $(a, $t, S),
                    A($t, t[15]),
                    $(a, St, S),
                    $(a, Mt, S),
                    $(a, _t, S),
                    k(_t, Pt),
                    k(_t, Ut),
                    k(_t, It),
                    k(It, zt),
                    $(a, At, S),
                    A(At, t[16]),
                    $(a, Dt, S),
                    k(Dt, Rt),
                    k(Dt, Bt),
                    k(Dt, Ft),
                    k(Ft, Nt),
                    $(a, Lt, S),
                    A(Lt, t[17]),
                    (Ot = !0);
            },
            p(t, e) {
                if (1048576 & e[0]) {
                    let s;
                    for (Yt = t[20], s = 0; s < Yt.length; s += 1) {
                        const i = hw(t, Yt, s);
                        Jt[s]
                            ? Jt[s].p(i, e)
                            : ((Jt[s] = xw(i)), Jt[s].c(), Jt[s].m(o, null));
                    }
                    for (; s < Jt.length; s += 1) Jt[s].d(1);
                    Jt.length = Yt.length;
                }
                512 & e[0] && R(o, t[9]),
                    1024 & e[0] && A(w, t[10]),
                    (!Ot || 2048 & e[0]) && z(q, t[11]),
                    2048 & e[0] && A(W, t[11]),
                    4096 & e[0] && A(et, t[12]),
                    !Wt && 8192 & e[0] && A(rt, t[13]),
                    (Wt = !1),
                    !Zt && 16384 & e[0] && A(ct, t[14]),
                    (Zt = !1),
                    (!Ot || 32768 & e[0]) && z(kt, t[15]),
                    32768 & e[0] && A($t, t[15]),
                    (!Ot || 65536 & e[0]) && z(zt, t[16]),
                    65536 & e[0] && A(At, t[16]),
                    (!Ot || 131072 & e[0]) && z(Nt, t[17]),
                    131072 & e[0] && A(Lt, t[17]);
            },
            i(t) {
                Ot ||
                    (vt(Xt.$$.fragment, t),
                    vt(Qt.$$.fragment, t),
                    vt(Kt.$$.fragment, t),
                    vt(te.$$.fragment, t),
                    vt(ee.$$.fragment, t),
                    vt(se.$$.fragment, t),
                    vt(ie.$$.fragment, t),
                    vt(ne.$$.fragment, t),
                    vt(ae.$$.fragment, t),
                    vt(re.$$.fragment, t),
                    vt(ce.$$.fragment, t),
                    vt(he.$$.fragment, t),
                    (Ot = !0));
            },
            o(t) {
                yt(Xt.$$.fragment, t),
                    yt(Qt.$$.fragment, t),
                    yt(Kt.$$.fragment, t),
                    yt(te.$$.fragment, t),
                    yt(ee.$$.fragment, t),
                    yt(se.$$.fragment, t),
                    yt(ie.$$.fragment, t),
                    yt(ne.$$.fragment, t),
                    yt(ae.$$.fragment, t),
                    yt(re.$$.fragment, t),
                    yt(ce.$$.fragment, t),
                    yt(he.$$.fragment, t),
                    (Ot = !1);
            },
            d(t) {
                t && S(e),
                    t && S(o),
                    M(Jt, t),
                    t && S(l),
                    t && S(c),
                    t && S(h),
                    t && S(d),
                    t && S(u),
                    t && S(m),
                    t && S(p),
                    t && S(f),
                    t && S(g),
                    Tt(Xt, t),
                    t && S(v),
                    t && S(y),
                    t && S(b),
                    t && S(w),
                    t && S(x),
                    Tt(Qt, t),
                    t && S(_),
                    Tt(Kt, t),
                    t && S(I),
                    t && S(D),
                    t && S(B),
                    Tt(te, t),
                    t && S(F),
                    t && S(W),
                    t && S(Z),
                    t && S(j),
                    t && S(G),
                    Tt(ee, t),
                    t && S(V),
                    Tt(se, t),
                    t && S(Y),
                    Tt(ie, t),
                    t && S(J),
                    t && S(X),
                    t && S(Q),
                    Tt(ne, t),
                    t && S(K),
                    Tt(ae, t),
                    t && S(tt),
                    t && S(et),
                    t && S(st),
                    t && S(it),
                    t && S(nt),
                    Tt(re, t),
                    t && S(at),
                    t && S(rt),
                    t && S(lt),
                    t && S(ct),
                    t && S(ht),
                    t && S(dt),
                    t && S(ut),
                    Tt(ce, t),
                    t && S(mt),
                    Tt(he, t),
                    t && S(pt),
                    t && S(ft),
                    t && S(gt),
                    t && S($t),
                    t && S(St),
                    t && S(Mt),
                    t && S(_t),
                    t && S(At),
                    t && S(Dt),
                    t && S(Lt),
                    a(qt);
            }
        };
    }
    function vw(e) {
        let s, i, n, r, o;
        return {
            c() {
                ((s = E("div")).textContent = `${Wh.ui.settings.sfxvolume}`),
                    (i = E("input")),
                    ((n = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.musicvolume}`),
                    (r = E("input")),
                    U(i, "type", "range"),
                    U(r, "type", "range"),
                    (o = [
                        P(i, "change", e[31]),
                        P(i, "input", e[31]),
                        P(r, "change", e[32]),
                        P(r, "input", e[32])
                    ]);
            },
            m(t, a) {
                $(t, s, a),
                    $(t, i, a),
                    A(i, e[7]),
                    $(t, n, a),
                    $(t, r, a),
                    A(r, e[8]);
            },
            p(t, e) {
                128 & e[0] && A(i, t[7]), 256 & e[0] && A(r, t[8]);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), t && S(i), t && S(n), t && S(r), a(o);
            }
        };
    }
    function yw(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            I,
            D,
            R,
            B,
            F,
            N,
            L,
            O,
            q = Wh.ui.settings.mousesensitivity + "",
            H = t[5].toFixed(2) + "";
        const W = new lw({ props: { store: Ms } }),
            Z = new lw({ props: { store: Es } }),
            j = new lw({ props: { store: Cs } }),
            G = new lw({ props: { store: Ts } });
        let V = Object.keys(yi).filter(Mw).map(t[28]),
            Y = [];
        for (let e = 0; e < V.length; e += 1) Y[e] = kw(dw(t, V, e));
        return {
            c() {
                ((e = E("div")).textContent = `${Wh.ui.settings.camera}`),
                    (s = E("div")),
                    (i = E("div")),
                    (n = C(q)),
                    (r = T()),
                    (o = E("span")),
                    (l = C(H)),
                    (c = E("input")),
                    ((h = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.invertmousex}`),
                    Et(W.$$.fragment),
                    ((d = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.invertmousey}`),
                    Et(Z.$$.fragment),
                    ((u = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.lockedcamera}`),
                    Et(j.$$.fragment),
                    ((m = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.pointerlock}`),
                    Et(G.$$.fragment),
                    ((p = E("div")).textContent = "Skillbar"),
                    (f = E("div")),
                    (g = E("div")),
                    (v = C("Skillbar slots ")),
                    (y = E("span")),
                    (b = C(t[6])),
                    (w = E("br")),
                    ((x = E("small")).textContent = "Requires reload"),
                    (I = E("input")),
                    ((D = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.keybindings}`),
                    (R = E("div")),
                    ((B = E("small")).textContent = "Requires reload"),
                    ((F = E("small")).textContent =
                        "To reset, leave field blank.");
                for (let t = 0; t < Y.length; t += 1) Y[t].c();
                (N = _()),
                    U(e, "class", "textprimary"),
                    U(o, "class", "textgrey"),
                    U(c, "type", "range"),
                    U(c, "step", "0.05"),
                    U(c, "min", "0.1"),
                    U(c, "max", "3"),
                    U(p, "class", "textprimary"),
                    U(y, "class", "textgrey"),
                    U(x, "class", "textgrey"),
                    U(I, "type", "range"),
                    U(I, "min", "10"),
                    U(I, "max", "24"),
                    U(D, "class", "textprimary"),
                    U(B, "class", "textgrey"),
                    U(F, "class", "textprimary"),
                    (O = [
                        P(c, "change", t[26]),
                        P(c, "input", t[26]),
                        P(I, "change", t[27]),
                        P(I, "input", t[27]),
                        P(I, "change", t[21])
                    ]);
            },
            m(a, S) {
                $(a, e, S),
                    $(a, s, S),
                    $(a, i, S),
                    k(i, n),
                    k(i, r),
                    k(i, o),
                    k(o, l),
                    $(a, c, S),
                    A(c, t[5]),
                    $(a, h, S),
                    Ct(W, a, S),
                    $(a, d, S),
                    Ct(Z, a, S),
                    $(a, u, S),
                    Ct(j, a, S),
                    $(a, m, S),
                    Ct(G, a, S),
                    $(a, p, S),
                    $(a, f, S),
                    $(a, g, S),
                    k(g, v),
                    k(g, y),
                    k(y, b),
                    k(g, w),
                    k(g, x),
                    $(a, I, S),
                    A(I, t[6]),
                    $(a, D, S),
                    $(a, R, S),
                    $(a, B, S),
                    $(a, F, S);
                for (let t = 0; t < Y.length; t += 1) Y[t].m(a, S);
                $(a, N, S), (L = !0);
            },
            p(t, e) {
                if (
                    ((!L || 32 & e[0]) &&
                        H !== (H = t[5].toFixed(2) + "") &&
                        z(l, H),
                    32 & e[0] && A(c, t[5]),
                    (!L || 64 & e[0]) && z(b, t[6]),
                    64 & e[0] && A(I, t[6]),
                    4194304 & e[0])
                ) {
                    let s;
                    for (
                        V = Object.keys(yi).filter(Mw).map(t[28]), s = 0;
                        s < V.length;
                        s += 1
                    ) {
                        const i = dw(t, V, s);
                        Y[s]
                            ? Y[s].p(i, e)
                            : ((Y[s] = kw(i)),
                              Y[s].c(),
                              Y[s].m(N.parentNode, N));
                    }
                    for (; s < Y.length; s += 1) Y[s].d(1);
                    Y.length = V.length;
                }
            },
            i(t) {
                L ||
                    (vt(W.$$.fragment, t),
                    vt(Z.$$.fragment, t),
                    vt(j.$$.fragment, t),
                    vt(G.$$.fragment, t),
                    (L = !0));
            },
            o(t) {
                yt(W.$$.fragment, t),
                    yt(Z.$$.fragment, t),
                    yt(j.$$.fragment, t),
                    yt(G.$$.fragment, t),
                    (L = !1);
            },
            d(t) {
                t && S(e),
                    t && S(s),
                    t && S(i),
                    t && S(c),
                    t && S(h),
                    Tt(W, t),
                    t && S(d),
                    Tt(Z, t),
                    t && S(u),
                    Tt(j, t),
                    t && S(m),
                    Tt(G, t),
                    t && S(p),
                    t && S(f),
                    t && S(g),
                    t && S(I),
                    t && S(D),
                    t && S(R),
                    t && S(B),
                    t && S(F),
                    M(Y, t),
                    t && S(N),
                    a(O);
            }
        };
    }
    function bw(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            M,
            T,
            _,
            I,
            z,
            D,
            R,
            B,
            F = Wh.ui.settings.ssao + "",
            N = Wh.ui.settings.grass + "",
            L = Wh.ui.settings.shadows + "",
            O = Wh.ui.settings.clouds + "",
            q = Wh.ui.settings.detailprops + "";
        const H = new lw({ props: { store: Pe } }),
            W = new lw({ props: { cb: t[21], store: ze } }),
            Z = new lw({ props: { cb: t[21], store: Ue } }),
            j = new lw({ props: { cb: t[21], store: Ie } }),
            G = new lw({ props: { cb: t[21], store: Ae } }),
            V = new lw({ props: { cb: t[21], store: Re } }),
            Y = new lw({ props: { store: De } });
        return {
            c() {
                ((e = E("div")).textContent = `${Wh.ui.settings.resolution}`),
                    (s = E("input")),
                    ((i = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.viewrange}`),
                    (n = E("input")),
                    ((r = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.postprocessing}`),
                    Et(H.$$.fragment),
                    (o = E("div")),
                    (l = C(F)),
                    (c = E("br")),
                    ((h = E("small")).textContent = "Requires reload"),
                    Et(W.$$.fragment),
                    (d = E("div")),
                    (u = C(N)),
                    (m = E("br")),
                    ((p = E("small")).textContent = "Requires reload"),
                    Et(Z.$$.fragment),
                    (f = E("div")),
                    (g = C(L)),
                    (v = E("br")),
                    ((y = E("small")).textContent = "Requires reload"),
                    Et(j.$$.fragment),
                    (b = E("div")),
                    (w = C(O)),
                    (x = E("br")),
                    ((M = E("small")).textContent = "Requires reload"),
                    Et(G.$$.fragment),
                    (T = E("div")),
                    (_ = C(q)),
                    (I = E("br")),
                    ((z = E("small")).textContent = "Requires reload"),
                    Et(V.$$.fragment),
                    ((D = E(
                        "div"
                    )).textContent = `${Wh.ui.settings.particles}`),
                    Et(Y.$$.fragment),
                    U(s, "type", "range"),
                    U(s, "min", "30"),
                    U(s, "step", "10"),
                    U(n, "type", "range"),
                    U(n, "min", "20"),
                    U(h, "class", "textgrey"),
                    U(p, "class", "textgrey"),
                    U(y, "class", "textgrey"),
                    U(M, "class", "textgrey"),
                    U(z, "class", "textgrey"),
                    (B = [
                        P(s, "change", t[24]),
                        P(s, "input", t[24]),
                        P(n, "change", t[25]),
                        P(n, "input", t[25])
                    ]);
            },
            m(a, S) {
                $(a, e, S),
                    $(a, s, S),
                    A(s, t[3]),
                    $(a, i, S),
                    $(a, n, S),
                    A(n, t[4]),
                    $(a, r, S),
                    Ct(H, a, S),
                    $(a, o, S),
                    k(o, l),
                    k(o, c),
                    k(o, h),
                    Ct(W, a, S),
                    $(a, d, S),
                    k(d, u),
                    k(d, m),
                    k(d, p),
                    Ct(Z, a, S),
                    $(a, f, S),
                    k(f, g),
                    k(f, v),
                    k(f, y),
                    Ct(j, a, S),
                    $(a, b, S),
                    k(b, w),
                    k(b, x),
                    k(b, M),
                    Ct(G, a, S),
                    $(a, T, S),
                    k(T, _),
                    k(T, I),
                    k(T, z),
                    Ct(V, a, S),
                    $(a, D, S),
                    Ct(Y, a, S),
                    (R = !0);
            },
            p(t, e) {
                8 & e[0] && A(s, t[3]), 16 & e[0] && A(n, t[4]);
            },
            i(t) {
                R ||
                    (vt(H.$$.fragment, t),
                    vt(W.$$.fragment, t),
                    vt(Z.$$.fragment, t),
                    vt(j.$$.fragment, t),
                    vt(G.$$.fragment, t),
                    vt(V.$$.fragment, t),
                    vt(Y.$$.fragment, t),
                    (R = !0));
            },
            o(t) {
                yt(H.$$.fragment, t),
                    yt(W.$$.fragment, t),
                    yt(Z.$$.fragment, t),
                    yt(j.$$.fragment, t),
                    yt(G.$$.fragment, t),
                    yt(V.$$.fragment, t),
                    yt(Y.$$.fragment, t),
                    (R = !1);
            },
            d(t) {
                t && S(e),
                    t && S(s),
                    t && S(i),
                    t && S(n),
                    t && S(r),
                    Tt(H, t),
                    t && S(o),
                    Tt(W, t),
                    t && S(d),
                    Tt(Z, t),
                    t && S(f),
                    Tt(j, t),
                    t && S(b),
                    Tt(G, t),
                    t && S(T),
                    Tt(V, t),
                    t && S(D),
                    Tt(Y, t),
                    a(B);
            }
        };
    }
    function ww(t) {
        let e,
            s,
            i,
            n,
            a,
            r = t[52] + "";
        function o(...e) {
            return t[44](t[54], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    (s = C(r)),
                    U(
                        (i = E("div")),
                        "class",
                        (n = "btn checkbox " + (t[18][t[54]] ? "active" : ""))
                    ),
                    (a = P(i, "click", function () {
                        o.apply(this, arguments);
                    }));
            },
            m(t, n) {
                $(t, e, n), k(e, s), $(t, i, n);
            },
            p(e, s) {
                (t = e),
                    262144 & s[0] &&
                        n !==
                            (n =
                                "btn checkbox " +
                                (t[18][t[54]] ? "active" : "")) &&
                        U(i, "class", n);
            },
            d(t) {
                t && S(e), t && S(i), a();
            }
        };
    }
    function xw(e) {
        let s,
            i,
            n,
            a = e[49].name + "";
        return {
            c() {
                (s = E("option")),
                    (i = C(a)),
                    (s.__value = n = e[49].val),
                    (s.value = s.__value);
            },
            m(t, e) {
                $(t, s, e), k(s, i);
            },
            p: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function kw(t) {
        let e,
            s,
            i,
            n,
            r = t[46].k.slice(2) + "";
        function o() {
            t[29].call(i, t[46]);
        }
        function l(...e) {
            return t[30](t[46], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    (s = C(r)),
                    U((i = E("input")), "type", "text"),
                    (n = [P(i, "input", o), P(i, "change", l)]);
            },
            m(n, a) {
                $(n, e, a), k(e, s), $(n, i, a), A(i, vi[t[46].k]);
            },
            p(e, n) {
                (t = e),
                    0 & n && r !== (r = t[46].k.slice(2) + "") && z(s, r),
                    0 & n && i.value !== vi[t[46].k] && A(i, vi[t[46].k]);
            },
            d(t) {
                t && S(e), t && S(i), a(n);
            }
        };
    }
    function $w(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h = t[0].name + "",
            d = t[19],
            u = [];
        for (let e = 0; e < d.length; e += 1) u[e] = pw(uw(t, d, e));
        const m = [bw, yw, vw, gw, fw],
            p = [];
        function f(t, e) {
            return "gfx" == t[0].id
                ? 0
                : "controls" == t[0].id
                ? 1
                : "audio" == t[0].id
                ? 2
                : "ui" == t[0].id
                ? 3
                : "chat" == t[0].id
                ? 4
                : -1;
        }
        return (
            ~(o = f(t)) && (l = p[o] = m[o](t)),
            {
                c() {
                    (e = E("div")), (s = E("div"));
                    for (let t = 0; t < u.length; t += 1) u[t].c();
                    (i = E("div")),
                        (n = E("h3")),
                        (a = C(h)),
                        (r = E("div")),
                        l && l.c(),
                        U(n, "class", "textprimary"),
                        U(r, "class", "settings svelte-1xknmu9"),
                        U(i, "class", "menu panel-black svelte-1xknmu9"),
                        U(e, "class", "divide svelte-1xknmu9");
                },
                m(t, l) {
                    $(t, e, l), k(e, s);
                    for (let t = 0; t < u.length; t += 1) u[t].m(s, null);
                    k(e, i),
                        k(i, n),
                        k(n, a),
                        k(i, r),
                        ~o && p[o].m(r, null),
                        (c = !0);
                },
                p(t, e) {
                    if (524289 & e[0]) {
                        let i;
                        for (d = t[19], i = 0; i < d.length; i += 1) {
                            const n = uw(t, d, i);
                            u[i]
                                ? u[i].p(n, e)
                                : ((u[i] = pw(n)), u[i].c(), u[i].m(s, null));
                        }
                        for (; i < u.length; i += 1) u[i].d(1);
                        u.length = d.length;
                    }
                    (!c || 1 & e[0]) && h !== (h = t[0].name + "") && z(a, h);
                    let i = o;
                    (o = f(t)) === i
                        ? ~o && p[o].p(t, e)
                        : (l &&
                              (ft(),
                              yt(p[i], 1, 1, () => {
                                  p[i] = null;
                              }),
                              gt()),
                          ~o
                              ? ((l = p[o]) || (l = p[o] = m[o](t)).c(),
                                vt(l, 1),
                                l.m(r, null))
                              : (l = null));
                },
                i(t) {
                    c || (vt(l), (c = !0));
                },
                o(t) {
                    yt(l), (c = !1);
                },
                d(t) {
                    t && S(e), M(u, t), ~o && p[o].d();
                }
            }
        );
    }
    function Sw(t) {
        let e,
            s,
            i = t[2] && mw(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, s) {
                t[2]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = mw(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    const Mw = t => "kb" == t.slice(0, 2);
    function Ew(t, e, s) {
        let i, n, a, r, o, l, c, d, u, m, p, g, v, y, b, w, x;
        h(t, Ze, t => s(2, (i = t))),
            h(t, _e, t => s(3, (n = t))),
            h(t, Te, t => s(4, (a = t))),
            h(t, Ss, t => s(5, (r = t))),
            h(t, Ws, t => s(6, (o = t))),
            h(t, Be, t => s(7, (l = t))),
            h(t, Fe, t => s(8, (c = t))),
            h(t, Ne, t => s(9, (d = t))),
            h(t, ns, t => s(10, (u = t))),
            h(t, fs, t => s(11, (m = t))),
            h(t, ys, t => s(12, (p = t))),
            h(t, xs, t => s(13, (g = t))),
            h(t, ks, t => s(14, (v = t))),
            h(t, He, t => s(15, (y = t))),
            h(t, Oe, t => s(16, (b = t))),
            h(t, qe, t => s(17, (w = t))),
            h(t, es, t => s(18, (x = t)));
        const k = [
            { id: "ui", name: Wh.ui.settings.interface },
            { id: "gfx", name: Wh.ui.settings.graphics },
            { id: "controls", name: Wh.ui.settings.controls },
            { id: "chat", name: Wh.ui.settings.chat },
            { id: "audio", name: Wh.ui.settings.audio }
        ];
        let $ = k[0];
        const S = [
            { val: "en", name: "English" },
            { val: "de", name: "German" },
            { val: "nl", name: "Dutch" },
            { val: "ru", name: "Russian" },
            { val: "pt", name: "Portugese" },
            { val: "es", name: "Spanish" },
            { val: "fr", name: "French" },
            { val: "hu", name: "Hungarian" },
            { val: "ro", name: "Romanian" }
        ];
        let M = !1;
        const E = (t, e) => {
            e.set("" === t ? void 0 : t), s(1, (M = !0));
        };
        return [
            $,
            M,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            d,
            u,
            m,
            p,
            g,
            v,
            y,
            b,
            w,
            x,
            k,
            S,
            () => {
                s(1, (M = !0));
            },
            E,
            (t, e) => {
                s(0, ($ = t));
            },
            function () {
                (n = I(this.value)), _e.set(n);
            },
            function () {
                (a = I(this.value)), Te.set(a);
            },
            function () {
                (r = I(this.value)), Ss.set(r);
            },
            function () {
                (o = I(this.value)), Ws.set(o);
            },
            t => ({ k: t, s: yi[t] }),
            function (t) {
                vi[t.k] = this.value;
            },
            (t, e) => {
                E(vi[t.k], t.s);
            },
            function () {
                (l = I(this.value)), Be.set(l);
            },
            function () {
                (c = I(this.value)), Fe.set(c);
            },
            function () {
                (d = B(this)), Ne.set(d), s(20, S);
            },
            t => cs.set(0),
            t => cs.set(Rf.length),
            function () {
                (u = I(this.value)), ns.set(u);
            },
            function () {
                (m = I(this.value)), fs.set(m);
            },
            function () {
                (p = I(this.value)), ys.set(p);
            },
            function () {
                (g = I(this.value)), xs.set(g);
            },
            function () {
                (v = I(this.value)), ks.set(v);
            },
            function () {
                (y = I(this.value)), He.set(y);
            },
            function () {
                (b = I(this.value)), Oe.set(b);
            },
            function () {
                (w = I(this.value)), qe.set(w);
            },
            (t, e) => f(es, (x[t] = x[t] ? 0 : 1), x),
            () => {
                f(Ze, (i = !1)), M && window.location.reload();
            }
        ];
    }
    class Cw extends Pt {
        constructor(t) {
            super(), _t(this, t, Ew, Sw, o, {}, [-1, -1]);
        }
    }
    function Tw(t, e, s) {
        const i = t.slice();
        return (i[11] = e[s]), i;
    }
    function _w(t, e, s) {
        const i = t.slice();
        return (i[11] = e[s]), i;
    }
    function Pw(t) {
        let e, s;
        const i = new og({
            props: {
                title: "Skills",
                icon: "book",
                $$slots: { default: [Dw] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", t[9]),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(
                            e,
                            "class",
                            "l-upperLeftModal container svelte-7b6b0t"
                        );
                },
                m(n, a) {
                    $(n, e, a), Ct(i, e, null), t[10](e), (s = !0);
                },
                p(t, e) {
                    const s = {};
                    65563 & e && (s.$$scope = { dirty: e, ctx: t }), i.$set(s);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(s) {
                    s && S(e), Tt(i), t[10](null);
                }
            }
        );
    }
    function Uw(t) {
        let e;
        const s = new wy({ props: { level: t[11].level, skill: t[11].logic } });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                16 & e && (i.level = t[11].level),
                    16 & e && (i.skill = t[11].logic),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Iw(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m = Wh.items.book[t[11].logic.id].name + "",
            p = t[11].logic.engineOnly ? "Default" : "Lv. " + t[11].level,
            f = void 0 !== t[11].logic.onCast ? "Spell" : "Passive";
        const g = new Cv({
            props: {
                descPos: "left:100%;top:0;",
                descRoot: t[0],
                border: "white",
                data: {},
                pickable: void 0 !== t[11].logic.onCast,
                meta: { type: "skill", skill: t[11].logic },
                css: "slotskill",
                img: `/assets/ui/skills/${t[11].logic.id}.${$r}?v=35201089`,
                $$slots: { default: [Uw] },
                $$scope: { ctx: t }
            }
        });
        function v(...e) {
            return t[7](t[11], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    Et(g.$$.fragment),
                    (s = E("div")),
                    (i = E("div")),
                    (n = C(m)),
                    (a = E("span")),
                    (r = E("div")),
                    (o = C(p)),
                    (l = T()),
                    (c = C(f)),
                    U(a, "class", "textgrey"),
                    U(i, "class", "textprimary name svelte-7b6b0t"),
                    U(r, "class", "textgrey"),
                    U(
                        e,
                        "class",
                        (h =
                            (t[11].logic.engineOnly ? "panel-black" : "btn") +
                            " grid " +
                            (t[1] == t[11] ? "grey" : "black") +
                            " svelte-7b6b0t")
                    ),
                    (u = P(e, "click", function () {
                        v.apply(this, arguments);
                    }));
            },
            m(t, h) {
                $(t, e, h),
                    Ct(g, e, null),
                    k(e, s),
                    k(s, i),
                    k(i, n),
                    k(i, a),
                    k(s, r),
                    k(r, o),
                    k(r, l),
                    k(r, c),
                    (d = !0);
            },
            p(s, i) {
                t = s;
                const a = {};
                1 & i && (a.descRoot = t[0]),
                    16 & i && (a.pickable = void 0 !== t[11].logic.onCast),
                    16 & i && (a.meta = { type: "skill", skill: t[11].logic }),
                    16 & i &&
                        (a.img = `/assets/ui/skills/${t[11].logic.id}.${$r}?v=35201089`),
                    65552 & i && (a.$$scope = { dirty: i, ctx: t }),
                    g.$set(a),
                    (!d || 16 & i) &&
                        m !== (m = Wh.items.book[t[11].logic.id].name + "") &&
                        z(n, m),
                    (!d || 16 & i) &&
                        p !==
                            (p = t[11].logic.engineOnly
                                ? "Default"
                                : "Lv. " + t[11].level) &&
                        z(o, p),
                    (!d || 16 & i) &&
                        f !==
                            (f =
                                void 0 !== t[11].logic.onCast
                                    ? "Spell"
                                    : "Passive") &&
                        z(c, f),
                    (!d ||
                        (18 & i &&
                            h !==
                                (h =
                                    (t[11].logic.engineOnly
                                        ? "panel-black"
                                        : "btn") +
                                    " grid " +
                                    (t[1] == t[11] ? "grey" : "black") +
                                    " svelte-7b6b0t"))) &&
                        U(e, "class", h);
            },
            i(t) {
                d || (vt(g.$$.fragment, t), (d = !0));
            },
            o(t) {
                yt(g.$$.fragment, t), (d = !1);
            },
            d(t) {
                t && S(e), Tt(g), u();
            }
        };
    }
    function zw(t) {
        let e;
        const s = new wy({ props: { level: 1, skill: t[11] } });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                16 & e && (i.skill = t[11]), s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Aw(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c = Wh.items.book[t[11].id].name + "",
            h = t[11].minlevel + "";
        const d = new Cv({
            props: {
                descPos: "left:100%;top:0;",
                descRoot: t[0],
                border: "grey filtered",
                data: {},
                pickable: !1,
                meta: { type: "skill", skill: t[11] },
                css: "slotskill",
                img: `/assets/ui/skills/${t[11].id}.${$r}?v=35201089`,
                $$slots: { default: [zw] },
                $$scope: { ctx: t }
            }
        });
        return {
            c() {
                (e = E("div")),
                    Et(d.$$.fragment),
                    (s = E("div")),
                    (i = E("div")),
                    (n = C(c)),
                    (a = E("div")),
                    (r = C("Requires Lv. ")),
                    (o = C(h)),
                    U(i, "class", "name svelte-7b6b0t"),
                    U(s, "class", "textgrey"),
                    U(e, "class", "panel-black grid svelte-7b6b0t");
            },
            m(t, c) {
                $(t, e, c),
                    Ct(d, e, null),
                    k(e, s),
                    k(s, i),
                    k(i, n),
                    k(s, a),
                    k(a, r),
                    k(a, o),
                    (l = !0);
            },
            p(t, e) {
                const s = {};
                1 & e && (s.descRoot = t[0]),
                    16 & e && (s.meta = { type: "skill", skill: t[11] }),
                    16 & e &&
                        (s.img = `/assets/ui/skills/${t[11].id}.${$r}?v=35201089`),
                    65552 & e && (s.$$scope = { dirty: e, ctx: t }),
                    d.$set(s),
                    (!l || 16 & e) &&
                        c !== (c = Wh.items.book[t[11].id].name + "") &&
                        z(n, c),
                    (!l || 16 & e) &&
                        h !== (h = t[11].minlevel + "") &&
                        z(o, h);
            },
            i(t) {
                l || (vt(d.$$.fragment, t), (l = !0));
            },
            o(t) {
                yt(d.$$.fragment, t), (l = !1);
            },
            d(t) {
                t && S(e), Tt(d);
            }
        };
    }
    function Dw(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p = t[3][22] + "",
            f = t[4],
            g = [];
        for (let e = 0; e < f.length; e += 1) g[e] = Iw(_w(t, f, e));
        const v = t =>
            yt(g[t], 1, 1, () => {
                g[t] = null;
            });
        let y = Array.from(ff.values()).filter(t[8]).sort(Bw),
            b = [];
        for (let e = 0; e < y.length; e += 1) b[e] = Aw(Tw(t, y, e));
        const w = t =>
            yt(b[t], 1, 1, () => {
                b[t] = null;
            });
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    (i = E("span")),
                    (n = C("Skill points: ")),
                    (a = C(p)),
                    (r = E("div")),
                    (o = C("Unlearn")),
                    (c = T()),
                    (h = E("div"));
                for (let t = 0; t < g.length; t += 1) g[t].c();
                (d = E("div")).textContent = "Learnable through books:";
                for (let t = 0; t < b.length; t += 1) b[t].c();
                U(
                    r,
                    "class",
                    (l =
                        "btn primary unlearn " +
                        (void 0 === t[1] || t[1].logic.engineOnly
                            ? "disabled"
                            : ""))
                ),
                    U(s, "class", "panel-black textprimary bar svelte-7b6b0t"),
                    U(d, "class", "learndiv textgrey textcenter svelte-7b6b0t"),
                    U(h, "id", "skilllist"),
                    U(h, "class", "scroll svelte-7b6b0t"),
                    U(e, "class", "flexer svelte-7b6b0t"),
                    (m = P(r, "click", function () {
                        t[6].apply(this, arguments);
                    }));
            },
            m(t, l) {
                $(t, e, l),
                    k(e, s),
                    k(s, i),
                    k(i, n),
                    k(i, a),
                    k(s, r),
                    k(r, o),
                    k(e, c),
                    k(e, h);
                for (let t = 0; t < g.length; t += 1) g[t].m(h, null);
                k(h, d);
                for (let t = 0; t < b.length; t += 1) b[t].m(h, null);
                u = !0;
            },
            p(e, s) {
                if (
                    ((t = e),
                    (!u || 8 & s) && p !== (p = t[3][22] + "") && z(a, p),
                    (!u ||
                        (2 & s &&
                            l !==
                                (l =
                                    "btn primary unlearn " +
                                    (void 0 === t[1] || t[1].logic.engineOnly
                                        ? "disabled"
                                        : "")))) &&
                        U(r, "class", l),
                    19 & s)
                ) {
                    let e;
                    for (f = t[4], e = 0; e < f.length; e += 1) {
                        const i = _w(t, f, e);
                        g[e]
                            ? (g[e].p(i, s), vt(g[e], 1))
                            : ((g[e] = Iw(i)),
                              g[e].c(),
                              vt(g[e], 1),
                              g[e].m(h, d));
                    }
                    for (ft(), e = f.length; e < g.length; e += 1) v(e);
                    gt();
                }
                if (17 & s) {
                    let e;
                    for (
                        y = Array.from(ff.values()).filter(t[8]).sort(Bw),
                            e = 0;
                        e < y.length;
                        e += 1
                    ) {
                        const i = Tw(t, y, e);
                        b[e]
                            ? (b[e].p(i, s), vt(b[e], 1))
                            : ((b[e] = Aw(i)),
                              b[e].c(),
                              vt(b[e], 1),
                              b[e].m(h, null));
                    }
                    for (ft(), e = y.length; e < b.length; e += 1) w(e);
                    gt();
                }
            },
            i(t) {
                if (!u) {
                    for (let t = 0; t < f.length; t += 1) vt(g[t]);
                    for (let t = 0; t < y.length; t += 1) vt(b[t]);
                    u = !0;
                }
            },
            o(t) {
                g = g.filter(Boolean);
                for (let t = 0; t < g.length; t += 1) yt(g[t]);
                b = b.filter(Boolean);
                for (let t = 0; t < b.length; t += 1) yt(b[t]);
                u = !1;
            },
            d(t) {
                t && S(e), M(g, t), M(b, t), m();
            }
        };
    }
    function Rw(t) {
        let e,
            s,
            i = t[2] && Pw(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[2]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = Pw(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    const Bw = (t, e) => t.minlevel - e.minlevel;
    function Fw(t, e, s) {
        let i, n, a, r, o;
        h(t, je, t => s(2, (i = t))),
            h(t, we, t => s(3, (n = t))),
            h(t, ee, t => s(4, (a = t)));
        const l = t => {
            Ld("skillremove", `${t.logic.id}`), s(1, (o = void 0));
        };
        return [
            r,
            o,
            i,
            n,
            a,
            l,
            t => l(o),
            (t, e) => t.logic.engineOnly || s(1, (o = t)),
            t =>
                t.class === Wn.player.class &&
                !t.engineOnly &&
                !a.some(e => e.logic.id === t.id),
            () => {
                f(je, (i = !1));
            },
            function (t) {
                tt[t ? "unshift" : "push"](() => {
                    s(0, (r = t));
                });
            }
        ];
    }
    class Nw extends Pt {
        constructor(t) {
            super(), _t(this, t, Fw, Rw, o, {});
        }
    }
    const Lw = t => 9 + Math.ceil(0.015 * t);
    function Ow(t, e, s) {
        const i = t.slice();
        return (i[47] = e[s]), i;
    }
    function qw(t, e, s) {
        const i = t.slice();
        return (i[50] = e[s]), i;
    }
    function Hw(t) {
        let e, s;
        const i = new og({
            props: {
                title: "Merchant",
                $$slots: { default: [Xw] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", t[46]),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(
                            e,
                            "class",
                            "l-upperLeftModal container svelte-1gzciq8"
                        );
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(t, e) {
                    const s = {};
                    (114687 & e[0]) | (4194304 & e[1]) &&
                        (s.$$scope = { dirty: e, ctx: t }),
                        i.$set(s);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    function Ww(t) {
        let e,
            s,
            i,
            n,
            a = t[50] + "";
        function r(...e) {
            return t[40](t[50], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    (s = C(a)),
                    U(
                        e,
                        "class",
                        (i =
                            "choice " +
                            (t[50] == t[1] ? "active" : "") +
                            " svelte-1gzciq8")
                    ),
                    (n = P(e, "click", function () {
                        r.apply(this, arguments);
                    }));
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(s, n) {
                (t = s),
                    2 & n[0] &&
                        i !==
                            (i =
                                "choice " +
                                (t[50] == t[1] ? "active" : "") +
                                " svelte-1gzciq8") &&
                        U(e, "class", i);
            },
            d(t) {
                t && S(e), n();
            }
        };
    }
    function Zw(t) {
        let e;
        const s = new Yh({});
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function jw(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m = jh(t[47].temp.type, t[47].temp.tier) + "",
            p = t[47].temp.owner + "",
            f = t[22](t[47].temp.auction.getTime()) + "";
        const g = new mb({
                props: {
                    descPos: "right:0;top:0;",
                    descRoot: t[0],
                    pickable: !1,
                    item: t[47]
                }
            }),
            v = new $y({ props: { amount: t[47].temp.auctionprice } });
        function y(...e) {
            return t[44](t[47], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    Et(g.$$.fragment),
                    (s = E("span")),
                    (i = C(m)),
                    (a = E("span")),
                    (r = C(p)),
                    (o = E("span")),
                    (l = C(f)),
                    (c = E("div")),
                    Et(v.$$.fragment),
                    U(
                        s,
                        "class",
                        (n =
                            "marg text" +
                            Au(t[47].temp.quality)[0] +
                            " svelte-1gzciq8")
                    ),
                    U(a, "class", "marg svelte-1gzciq8"),
                    U(o, "class", "marg svelte-1gzciq8"),
                    U(c, "class", "marg svelte-1gzciq8"),
                    D(c, "text-align", "end"),
                    U(
                        e,
                        "class",
                        (h =
                            "buy " +
                            (t[12] == t[47] ? "selected" : "") +
                            " item panel-black svelte-1gzciq8")
                    ),
                    (u = P(e, "click", function () {
                        y.apply(this, arguments);
                    }));
            },
            m(t, n) {
                $(t, e, n),
                    Ct(g, e, null),
                    k(e, s),
                    k(s, i),
                    k(e, a),
                    k(a, r),
                    k(e, o),
                    k(o, l),
                    k(e, c),
                    Ct(v, c, null),
                    (d = !0);
            },
            p(a, o) {
                t = a;
                const c = {};
                1 & o[0] && (c.descRoot = t[0]),
                    2048 & o[0] && (c.item = t[47]),
                    g.$set(c),
                    (!d || 2048 & o[0]) &&
                        m !== (m = jh(t[47].temp.type, t[47].temp.tier) + "") &&
                        z(i, m),
                    (!d ||
                        (2048 & o[0] &&
                            n !==
                                (n =
                                    "marg text" +
                                    Au(t[47].temp.quality)[0] +
                                    " svelte-1gzciq8"))) &&
                        U(s, "class", n),
                    (!d || 2048 & o[0]) &&
                        p !== (p = t[47].temp.owner + "") &&
                        z(r, p),
                    (!d || 2048 & o[0]) &&
                        f !== (f = t[22](t[47].temp.auction.getTime()) + "") &&
                        z(l, f);
                const u = {};
                2048 & o[0] && (u.amount = t[47].temp.auctionprice),
                    v.$set(u),
                    (!d ||
                        (6144 & o[0] &&
                            h !==
                                (h =
                                    "buy " +
                                    (t[12] == t[47] ? "selected" : "") +
                                    " item panel-black svelte-1gzciq8"))) &&
                        U(e, "class", h);
            },
            i(t) {
                d || (vt(g.$$.fragment, t), vt(v.$$.fragment, t), (d = !0));
            },
            o(t) {
                yt(g.$$.fragment, t), yt(v.$$.fragment, t), (d = !1);
            },
            d(t) {
                t && S(e), Tt(g), Tt(v), u();
            }
        };
    }
    function Gw(t) {
        let e, s, i, n;
        const a = [Jw, Yw],
            r = [];
        function o(t, e) {
            return t[12].temp.owner !== Wn.player.name ? 0 : 1;
        }
        return (
            (s = o(t)),
            (i = r[s] = a[s](t)),
            {
                c() {
                    (e = E("section")),
                        i.c(),
                        U(e, "class", "confirm panel-black svelte-1gzciq8");
                },
                m(t, i) {
                    $(t, e, i), r[s].m(e, null), (n = !0);
                },
                p(t, n) {
                    let l = s;
                    (s = o(t)) === l
                        ? r[s].p(t, n)
                        : (ft(),
                          yt(r[l], 1, 1, () => {
                              r[l] = null;
                          }),
                          gt(),
                          (i = r[s]) || (i = r[s] = a[s](t)).c(),
                          vt(i, 1),
                          i.m(e, null));
                },
                i(t) {
                    n || (vt(i), (n = !0));
                },
                o(t) {
                    yt(i), (n = !1);
                },
                d(t) {
                    t && S(e), r[s].d();
                }
            }
        );
    }
    function Vw(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y =
                (t[13] ? jh(t[13].type, t[13].tier) : Wh.ui.merchant.dragitem) +
                "",
            b = Wh.ui.merchant.price + "",
            w = Wh.ui.merchant.fee + "",
            x = !1,
            M = Wh.ui.merchant.post + "";
        const T = new mb({
            props: {
                descPos: "left:100%;bottom:100%;",
                clearOnMove: !0,
                invslot: t[13] ? t[10] : void 0,
                pickable: !0,
                item: de
            }
        });
        T.$on("discard", t[21]), T.$on("move", t[20]);
        const _ = new $y({ props: { amount: t[9] } }),
            I = new $y({ props: { amount: t[15] } });
        function R() {
            (x = !0), t[45].call(u);
        }
        return {
            c() {
                (e = E("section")),
                    Et(T.$$.fragment),
                    (s = E("span")),
                    (i = C(y)),
                    (r = E("div")),
                    (o = E("span")),
                    (l = C(b)),
                    Et(_.$$.fragment),
                    (c = E("br")),
                    (h = E("span")),
                    (d = C(w)),
                    Et(I.$$.fragment),
                    (u = E("input")),
                    (m = E("div")),
                    (p = C(M)),
                    U(
                        s,
                        "class",
                        (n =
                            "marg text" +
                            (t[13] ? Au(t[13].quality)[0] : "grey") +
                            " svelte-1gzciq8")
                    ),
                    U(o, "class", "textwhite"),
                    U(h, "class", "textgrey"),
                    U(r, "class", "marg svelte-1gzciq8"),
                    D(r, "text-align", "end"),
                    U(u, "class", "marg svelte-1gzciq8"),
                    U(u, "type", "number"),
                    U(u, "placeholder", "Set price"),
                    U(
                        m,
                        "class",
                        (f =
                            "marg btn formatted secondary " +
                            (t[16] ? "" : "disabled") +
                            " svelte-1gzciq8")
                    ),
                    U(e, "class", "post panel-black svelte-1gzciq8"),
                    (v = [P(u, "input", R), P(m, "click", t[19])]);
            },
            m(n, a) {
                $(n, e, a),
                    Ct(T, e, null),
                    k(e, s),
                    k(s, i),
                    k(e, r),
                    k(r, o),
                    k(o, l),
                    Ct(_, o, null),
                    k(r, c),
                    k(r, h),
                    k(h, d),
                    Ct(I, h, null),
                    k(e, u),
                    A(u, t[9]),
                    k(e, m),
                    k(m, p),
                    (g = !0);
            },
            p(t, e) {
                const a = {};
                9216 & e[0] && (a.invslot = t[13] ? t[10] : void 0),
                    T.$set(a),
                    (!g || 8192 & e[0]) &&
                        y !==
                            (y =
                                (t[13]
                                    ? jh(t[13].type, t[13].tier)
                                    : Wh.ui.merchant.dragitem) + "") &&
                        z(i, y),
                    (!g ||
                        (8192 & e[0] &&
                            n !==
                                (n =
                                    "marg text" +
                                    (t[13] ? Au(t[13].quality)[0] : "grey") +
                                    " svelte-1gzciq8"))) &&
                        U(s, "class", n);
                const r = {};
                512 & e[0] && (r.amount = t[9]), _.$set(r);
                const o = {};
                32768 & e[0] && (o.amount = t[15]),
                    I.$set(o),
                    !x && 512 & e[0] && A(u, t[9]),
                    (x = !1),
                    (!g ||
                        (65536 & e[0] &&
                            f !==
                                (f =
                                    "marg btn formatted secondary " +
                                    (t[16] ? "" : "disabled") +
                                    " svelte-1gzciq8"))) &&
                        U(m, "class", f);
            },
            i(t) {
                g ||
                    (vt(T.$$.fragment, t),
                    vt(_.$$.fragment, t),
                    vt(I.$$.fragment, t),
                    (g = !0));
            },
            o(t) {
                yt(T.$$.fragment, t),
                    yt(_.$$.fragment, t),
                    yt(I.$$.fragment, t),
                    (g = !1);
            },
            d(t) {
                t && S(e), Tt(T), Tt(_), Tt(I), a(v);
            }
        };
    }
    function Yw(e) {
        let s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u =
                Wh.items[e[12].temp.type][
                    "book" === e[12].temp.type
                        ? e[12].temp.logic.skillid
                        : e[12].temp.tier
                ].name + "";
        return {
            c() {
                (s = E("span")),
                    (i = C("Stop ")),
                    (n = E("span")),
                    (r = C(u)),
                    (l = C(" from being listed?")),
                    ((c = E("div")).textContent = `${Wh.ui.cancel}`),
                    ((h = E("div")).textContent = `${Wh.ui.merchant.delist}`),
                    U(
                        n,
                        "class",
                        (o =
                            "text" +
                            Au(e[12].temp.quality)[0] +
                            " svelte-1gzciq8")
                    ),
                    U(s, "class", "marg svelte-1gzciq8"),
                    U(c, "class", "marg btn formatted grey svelte-1gzciq8"),
                    U(h, "class", "marg btn formatted orange svelte-1gzciq8"),
                    (d = [P(c, "click", e[24]), P(h, "click", e[26])]);
            },
            m(t, e) {
                $(t, s, e),
                    k(s, i),
                    k(s, n),
                    k(n, r),
                    k(s, l),
                    $(t, c, e),
                    $(t, h, e);
            },
            p(t, e) {
                4096 & e[0] &&
                    u !==
                        (u =
                            Wh.items[t[12].temp.type][
                                "book" === t[12].temp.type
                                    ? t[12].temp.logic.skillid
                                    : t[12].temp.tier
                            ].name + "") &&
                    z(r, u),
                    4096 & e[0] &&
                        o !==
                            (o =
                                "text" +
                                Au(t[12].temp.quality)[0] +
                                " svelte-1gzciq8") &&
                        U(n, "class", o);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), t && S(c), t && S(h), a(d);
            }
        };
    }
    function Jw(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m =
                Wh.items[t[12].temp.type][
                    "book" === t[12].temp.type
                        ? t[12].temp.logic.skillid
                        : t[12].temp.tier
                ].name + "";
        const p = new $y({ props: { amount: t[12].temp.auctionprice } });
        return {
            c() {
                (e = E("span")),
                    (s = C("Buy ")),
                    (i = E("span")),
                    (n = C(m)),
                    (o = C("\n          for ")),
                    Et(p.$$.fragment),
                    (l = C("?")),
                    ((c = E("div")).textContent = `${Wh.ui.cancel}`),
                    ((h = E("div")).textContent = `${Wh.ui.merchant.buy}`),
                    U(
                        i,
                        "class",
                        (r =
                            "text" +
                            Au(t[12].temp.quality)[0] +
                            " svelte-1gzciq8")
                    ),
                    U(e, "class", "marg svelte-1gzciq8"),
                    U(c, "class", "marg btn formatted grey svelte-1gzciq8"),
                    U(
                        h,
                        "class",
                        "marg btn formatted secondary svelte-1gzciq8"
                    ),
                    (u = [P(c, "click", t[24]), P(h, "click", t[25])]);
            },
            m(t, a) {
                $(t, e, a),
                    k(e, s),
                    k(e, i),
                    k(i, n),
                    k(e, o),
                    Ct(p, e, null),
                    k(e, l),
                    $(t, c, a),
                    $(t, h, a),
                    (d = !0);
            },
            p(t, e) {
                (!d || 4096 & e[0]) &&
                    m !==
                        (m =
                            Wh.items[t[12].temp.type][
                                "book" === t[12].temp.type
                                    ? t[12].temp.logic.skillid
                                    : t[12].temp.tier
                            ].name + "") &&
                    z(n, m),
                    (!d ||
                        (4096 & e[0] &&
                            r !==
                                (r =
                                    "text" +
                                    Au(t[12].temp.quality)[0] +
                                    " svelte-1gzciq8"))) &&
                        U(i, "class", r);
                const s = {};
                4096 & e[0] && (s.amount = t[12].temp.auctionprice), p.$set(s);
            },
            i(t) {
                d || (vt(p.$$.fragment, t), (d = !0));
            },
            o(t) {
                yt(p.$$.fragment, t), (d = !1);
            },
            d(t) {
                t && S(e), Tt(p), t && S(c), t && S(h), a(u);
            }
        };
    }
    function Xw(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            _,
            I,
            R,
            B,
            F,
            N,
            L,
            O,
            q,
            H,
            W,
            Z,
            j,
            G,
            V = !1,
            Y = !1,
            J = Wh.ui.merchant.filtermine + "",
            X = Wh.ui.merchant.search + "",
            Q = t[27](t[7], "tier", t[8]) + "",
            K = t[27](t[7], "auction", t[8]) + "",
            tt = t[27](t[7], "auctionprice", t[8]) + "";
        function et() {
            (V = !0), t[36].call(r);
        }
        function st() {
            (Y = !0), t[37].call(l);
        }
        let it = t[17],
            nt = [];
        for (let e = 0; e < it.length; e += 1) nt[e] = Ww(qw(t, it, e));
        let at = !t[6] && Zw(),
            rt = t[11],
            ot = [];
        for (let e = 0; e < rt.length; e += 1) ot[e] = jw(Ow(t, rt, e));
        const lt = t =>
                yt(ot[t], 1, 1, () => {
                    ot[t] = null;
                }),
            ct = [Vw, Gw],
            ht = [];
        function dt(t, e) {
            return t[12] ? 1 : 0;
        }
        return (
            (W = dt(t)),
            (Z = ht[W] = ct[W](t)),
            {
                c() {
                    (e = E("div")),
                        (s = E("section")),
                        (i = E("input")),
                        ((n = E("span")).textContent = "Lv."),
                        (r = E("input")),
                        ((o = E("span")).textContent = "–"),
                        (l = E("input")),
                        (c = E("span")),
                        (h = E("div")),
                        (d = E("div")),
                        (m = T()),
                        (p = C(J)),
                        (f = E("div")),
                        (g = C(X)),
                        (y = E("section"));
                    for (let t = 0; t < nt.length; t += 1) nt[t].c();
                    (b = E("section")),
                        (w = E("div")),
                        (x = E("span")),
                        at && at.c(),
                        (_ = E("span")),
                        (I = C(Q)),
                        (R = C("Item")),
                        ((B = E("span")).textContent = "Owner"),
                        (F = E("span")),
                        (N = C(K)),
                        (L = C("Time left")),
                        (O = E("span")),
                        (q = C(tt)),
                        (H = C("Price"));
                    for (let t = 0; t < ot.length; t += 1) ot[t].c();
                    Z.c(),
                        U(i, "class", "marg svelte-1gzciq8"),
                        U(i, "type", "search"),
                        U(i, "placeholder", "Name"),
                        U(n, "class", "marg svelte-1gzciq8"),
                        U(r, "class", "marg svelte-1gzciq8"),
                        U(r, "type", "number"),
                        U(o, "class", "marg svelte-1gzciq8"),
                        U(l, "class", "marg svelte-1gzciq8"),
                        U(l, "type", "number"),
                        U(
                            d,
                            "class",
                            (u =
                                "btn checkbox " +
                                (t[5] ? "active" : "disabled"))
                        ),
                        U(h, "class", "marg svelte-1gzciq8"),
                        U(
                            f,
                            "class",
                            (v =
                                "btn marg formatted secondary " +
                                (t[6] ? "" : "disabled") +
                                " svelte-1gzciq8")
                        ),
                        U(s, "class", "search panel-black svelte-1gzciq8"),
                        U(y, "class", "choices border grey svelte-1gzciq8"),
                        D(x, "position", "relative"),
                        D(O, "text-align", "end"),
                        U(w, "class", "buy panel-black svelte-1gzciq8"),
                        U(b, "class", "items border grey svelte-1gzciq8"),
                        U(e, "class", "layout svelte-1gzciq8"),
                        (G = [
                            P(i, "input", t[35]),
                            P(r, "input", et),
                            P(l, "input", st),
                            P(h, "click", function () {
                                t[38].apply(this, arguments);
                            }),
                            P(f, "click", t[18]),
                            P(_, "click", t[41]),
                            P(F, "click", t[42]),
                            P(O, "click", t[43])
                        ]);
                },
                m(a, u) {
                    $(a, e, u),
                        k(e, s),
                        k(s, i),
                        A(i, t[4]),
                        k(s, n),
                        k(s, r),
                        A(r, t[2]),
                        k(s, o),
                        k(s, l),
                        A(l, t[3]),
                        k(s, c),
                        k(s, h),
                        k(h, d),
                        k(h, m),
                        k(h, p),
                        k(s, f),
                        k(f, g),
                        t[39](s),
                        k(e, y);
                    for (let t = 0; t < nt.length; t += 1) nt[t].m(y, null);
                    k(e, b),
                        k(b, w),
                        k(w, x),
                        at && at.m(x, null),
                        k(w, _),
                        k(_, I),
                        k(_, R),
                        k(w, B),
                        k(w, F),
                        k(F, N),
                        k(F, L),
                        k(w, O),
                        k(O, q),
                        k(O, H);
                    for (let t = 0; t < ot.length; t += 1) ot[t].m(b, null);
                    ht[W].m(e, null), (j = !0);
                },
                p(s, n) {
                    if (
                        ((t = s),
                        16 & n[0] && A(i, t[4]),
                        !V && 4 & n[0] && A(r, t[2]),
                        (V = !1),
                        !Y && 8 & n[0] && A(l, t[3]),
                        (Y = !1),
                        (!j ||
                            (32 & n[0] &&
                                u !==
                                    (u =
                                        "btn checkbox " +
                                        (t[5] ? "active" : "disabled")))) &&
                            U(d, "class", u),
                        (!j ||
                            (64 & n[0] &&
                                v !==
                                    (v =
                                        "btn marg formatted secondary " +
                                        (t[6] ? "" : "disabled") +
                                        " svelte-1gzciq8"))) &&
                            U(f, "class", v),
                        131074 & n[0])
                    ) {
                        let e;
                        for (it = t[17], e = 0; e < it.length; e += 1) {
                            const s = qw(t, it, e);
                            nt[e]
                                ? nt[e].p(s, n)
                                : ((nt[e] = Ww(s)),
                                  nt[e].c(),
                                  nt[e].m(y, null));
                        }
                        for (; e < nt.length; e += 1) nt[e].d(1);
                        nt.length = it.length;
                    }
                    if (
                        (t[6]
                            ? at &&
                              (ft(),
                              yt(at, 1, 1, () => {
                                  at = null;
                              }),
                              gt())
                            : at
                            ? vt(at, 1)
                            : ((at = Zw()).c(), vt(at, 1), at.m(x, null)),
                        (!j || 384 & n[0]) &&
                            Q !== (Q = t[27](t[7], "tier", t[8]) + "") &&
                            z(I, Q),
                        (!j || 384 & n[0]) &&
                            K !== (K = t[27](t[7], "auction", t[8]) + "") &&
                            z(N, K),
                        (!j || 384 & n[0]) &&
                            tt !==
                                (tt = t[27](t[7], "auctionprice", t[8]) + "") &&
                            z(q, tt),
                        12589057 & n[0])
                    ) {
                        let e;
                        for (rt = t[11], e = 0; e < rt.length; e += 1) {
                            const s = Ow(t, rt, e);
                            ot[e]
                                ? (ot[e].p(s, n), vt(ot[e], 1))
                                : ((ot[e] = jw(s)),
                                  ot[e].c(),
                                  vt(ot[e], 1),
                                  ot[e].m(b, null));
                        }
                        for (ft(), e = rt.length; e < ot.length; e += 1) lt(e);
                        gt();
                    }
                    let a = W;
                    (W = dt(t)) === a
                        ? ht[W].p(t, n)
                        : (ft(),
                          yt(ht[a], 1, 1, () => {
                              ht[a] = null;
                          }),
                          gt(),
                          (Z = ht[W]) || (Z = ht[W] = ct[W](t)).c(),
                          vt(Z, 1),
                          Z.m(e, null));
                },
                i(t) {
                    if (!j) {
                        vt(at);
                        for (let t = 0; t < rt.length; t += 1) vt(ot[t]);
                        vt(Z), (j = !0);
                    }
                },
                o(t) {
                    yt(at), (ot = ot.filter(Boolean));
                    for (let t = 0; t < ot.length; t += 1) yt(ot[t]);
                    yt(Z), (j = !1);
                },
                d(s) {
                    s && S(e),
                        t[39](null),
                        M(nt, s),
                        at && at.d(),
                        M(ot, s),
                        ht[W].d(),
                        a(G);
                }
            }
        );
    }
    function Qw(t) {
        let e,
            s,
            i = t[14] && Hw(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, s) {
                t[14]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = Hw(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function Kw(t, e, s) {
        let i, n, a, r, o;
        h(t, de, t => s(13, (i = t))),
            h(t, ue, t => s(32, (n = t))),
            h(t, ce, t => s(14, (a = t))),
            h(t, he, t => s(33, (r = t)));
        let l = Object.keys(Lr).filter(t => "gold" != t);
        l.unshift("all");
        let c = l[0],
            d = 0,
            u = 100,
            m = "",
            p = [],
            g = !1,
            v = !0,
            y = "auctionprice",
            b = "asc";
        const w = () => {
            if (v && a) {
                let t = m.toLowerCase();
                if (
                    t.length &&
                    (p = zf.filter(e =>
                        jh(e.type, e.tier).toLowerCase().includes(t)
                    )).length
                ) {
                    const t = p[0];
                    s(1, (c = t.type)),
                        s(2, (d = t.level)),
                        s(3, (u = t.level));
                }
                Ld("itemauctionfind", `${c} ${d} ${u} ${g ? 1 : 0} ${y} ${b}`),
                    s(6, (v = !1));
            }
        };
        let x;
        let k,
            $,
            S = [],
            M = [];
        const E = () => {
            if ((($ = Date.now()), r.length)) {
                const t = r.map(t => t.dbid);
                fetch("/api/item/get", {
                    method: "POST",
                    body: JSON.stringify({ auction: 1, ids: t })
                }).then(async t => {
                    const e = await t.json();
                    e.fail
                        ? console.error(e)
                        : (s(11, (M.length = 0), M),
                          r.forEach((t, s) => {
                              const i = e.find(e => e.id === t.dbid);
                              i &&
                                  ((i.store = S[s] || (S[s] = It())),
                                  (i.store.temp = t),
                                  t.hydrate(i),
                                  M.push(i.store));
                          }),
                          s(6, (v = !0)));
                });
            } else s(6, (v = !0)), s(11, (M.length = 0), M);
        };
        let C;
        const T = t => {
                s(12, (C = t));
            },
            _ = () => {
                s(12, (C = void 0));
            },
            P = t => {
                t == y
                    ? s(8, (b = "asc" == b ? "desc" : "asc"))
                    : s(7, (y = t)),
                    w();
            };
        let U, z;
        return (
            (t.$$.update = () => {
                16384 & t.$$.dirty[0] && (a || f(de, (i = void 0))),
                    8192 & t.$$.dirty[0] && i && s(1, (c = i.type)),
                    12 & t.$$.dirty[0] &&
                        (s(2, (d = Math.min(Math.max(0, d || 0), 100))),
                        s(3, (u = Math.min(Math.max(0, u) || 100, 100)))),
                    (16386 & t.$$.dirty[0]) | (2 & t.$$.dirty[1]) && a && w(),
                    8704 & t.$$.dirty[0] &&
                        s(9, (x = i ? na(0, 2147483646, x) : 0)),
                    512 & t.$$.dirty[0] &&
                        s(15, (U = Number.isInteger(x) ? Lw(x) : 0)),
                    8704 & t.$$.dirty[0] &&
                        s(
                            16,
                            (z =
                                Number.isInteger(x) &&
                                x > 0 &&
                                i &&
                                i.canBeTraded())
                        ),
                    4 & t.$$.dirty[1] && E();
            }),
            [
                o,
                c,
                d,
                u,
                m,
                g,
                v,
                y,
                b,
                x,
                k,
                M,
                C,
                i,
                a,
                U,
                z,
                l,
                w,
                () => {
                    z && Ld("itemauctionpost", `${i.dbid} ${x}`);
                },
                t => {
                    const { from: e, to: i } = t.detail;
                    e !== i &&
                        "item" == e.type &&
                        (de.set(e.item), s(10, (k = e.slot)));
                },
                t => {
                    de.set(), s(10, (k = void 0));
                },
                t => {
                    let e = Math.ceil((t - $) / 6e4);
                    return e < 60
                        ? `${e} minutes`
                        : `${Math.ceil(e / 60)} hours`;
                },
                T,
                _,
                () => {
                    Ld("itemauctionbuy", C.temp.dbid + ""), _();
                },
                () => {
                    Ld("itemauctioncancel", C.temp.dbid + ""), _();
                },
                (t, e, s) => (t == e ? ("asc" == s ? "🠕 " : "🠗 ") : ""),
                P,
                p,
                $,
                S,
                n,
                r,
                E,
                function () {
                    (m = this.value), s(4, m);
                },
                function () {
                    (d = I(this.value)), s(2, d), s(3, u);
                },
                function () {
                    (u = I(this.value)), s(3, u), s(2, d);
                },
                t => s(5, (g = !g)),
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(0, (o = t));
                    });
                },
                (t, e) => {
                    s(1, (c = t));
                },
                t => P("tier"),
                t => P("auction"),
                t => P("auctionprice"),
                (t, e) => T(t),
                function () {
                    (x = I(this.value)), s(9, x), s(13, i), s(14, a);
                },
                () => {
                    f(ce, (a = void 0)),
                        s(2, (d = 0)),
                        s(3, (u = 100)),
                        s(4, (m = ""));
                }
            ]
        );
    }
    class tx extends Pt {
        constructor(t) {
            super(), _t(this, t, Kw, Qw, o, {}, [-1, -1]);
        }
    }
    let ex = 0;
    const sx = new Al(0, 10),
        ix = (t, e, s = !1, i, n, a, r, o) => {
            Zt.update(l => {
                l.length > 100 && l.shift(),
                    s && (e = hg(e)),
                    "whisper" === t &&
                        "f" === i[0] &&
                        (sx.done(Wn.time) && Jr({ id: "ui/msg", pitch: -1 }),
                        sx.reset(Wn.time));
                const c = new Date();
                return (
                    l.push({
                        channel: t,
                        time: `${String(c.getHours()).padStart(
                            2,
                            "0"
                        )}.${String(c.getMinutes()).padStart(2, "0")}`,
                        text: e,
                        id: ++ex,
                        sender: i,
                        sub: o,
                        faction: n,
                        cclass: a,
                        level: r,
                        interpolate: s
                    }),
                    l
                );
            });
        },
        nx = [
            { name: "Year", description: "one year", days: 365, price: 9e3 },
            { name: "Month", description: "one month", days: 30, price: 900 }
        ],
        ax = [
            { stash: 15, inventory: 15, auction: 10, auctionHours: 12 },
            { stash: 100, inventory: 25, auction: 100, auctionHours: 24 }
        ];
    function rx(t, e, s) {
        const i = t.slice();
        return (i[26] = e[s]), i;
    }
    function ox(t) {
        let e, s, i;
        const n = new og({
            props: {
                title: "Stash",
                pad: "5",
                icon: "bag",
                $$slots: { default: [ux] },
                $$scope: { ctx: t }
            }
        });
        return (
            n.$on("close", function () {
                t[24].apply(this, arguments);
            }),
            {
                c() {
                    (e = E("div")),
                        Et(n.$$.fragment),
                        U(
                            e,
                            "class",
                            "l-upperLeftModal container svelte-1tde6tk"
                        ),
                        (i = P(e, "pointerup", t[11]));
                },
                m(i, a) {
                    $(i, e, a), Ct(n, e, null), t[25](e), (s = !0);
                },
                p(e, s) {
                    t = e;
                    const i = {};
                    536872959 & s && (i.$$scope = { dirty: s, ctx: t }),
                        n.$set(i);
                },
                i(t) {
                    s || (vt(n.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(n.$$.fragment, t), (s = !1);
                },
                d(s) {
                    s && S(e), Tt(n), t[25](null), i();
                }
            }
        );
    }
    function lx(t) {
        let e;
        return {
            c() {
                e = E("div");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function cx(t) {
        let e;
        const s = new mb({
            props: {
                descPos: "left:100%;top:0;",
                descRoot: t[0],
                pickable: !1,
                text: t[12](t[26].temp.stash.getTime()),
                item: t[26],
                filter: !t[3] || t[26].temp.stash.getTime() > t[1] || ""
            }
        });
        return (
            s.$on("click", t[13]),
            {
                c() {
                    Et(s.$$.fragment);
                },
                m(t, i) {
                    Ct(s, t, i), (e = !0);
                },
                p(t, e) {
                    const i = {};
                    1 & e && (i.descRoot = t[0]),
                        4 & e && (i.text = t[12](t[26].temp.stash.getTime())),
                        4 & e && (i.item = t[26]),
                        14 & e &&
                            (i.filter =
                                !t[3] ||
                                t[26].temp.stash.getTime() > t[1] ||
                                ""),
                        s.$set(i);
                },
                i(t) {
                    e || (vt(s.$$.fragment, t), (e = !0));
                },
                o(t) {
                    yt(s.$$.fragment, t), (e = !1);
                },
                d(t) {
                    Tt(s, t);
                }
            }
        );
    }
    function hx(t) {
        let e, s;
        return {
            c() {
                ((e = E("span")).innerHTML =
                    'Upgrade <img class="svgicon texticon" src="/assets/ui/icons/gem.svg?v=35201089">'),
                    U(e, "class", "btn textwhite"),
                    (s = P(e, "click", function () {
                        t[20].apply(this, arguments);
                    }));
            },
            m(t, s) {
                $(t, e, s);
            },
            p(e, s) {
                t = e;
            },
            d(t) {
                t && S(e), s();
            }
        };
    }
    function dx(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p = (1 == t[4] ? Wh.ui.stash.deposit : Wh.ui.stash.withdraw) + "",
            f = !1,
            g = (1 == t[4] ? Wh.ui.stash.deposit : Wh.ui.stash.withdraw) + "";
        const v = new $y({ props: { amount: t[4] > 0 ? t[5] : 0 } });
        function y() {
            (f = !0), t[23].call(l);
        }
        return {
            c() {
                (e = E("div")),
                    (s = E("span")),
                    (i = C(p)),
                    (n = T()),
                    Et(v.$$.fragment),
                    (r = C(" ?")),
                    (o = E("div")),
                    (l = E("input")),
                    (c = E("div")),
                    (h = C(g)),
                    D(l, "width", "150px"),
                    U(l, "class", "navbtn formatted"),
                    U(l, "type", "number"),
                    U(
                        c,
                        "class",
                        (d =
                            "btn " +
                            (!t[3] || t[5] <= 0 ? "disabled" : "") +
                            " " +
                            (1 == t[4] ? "blue" : "green") +
                            " formatted")
                    ),
                    U(o, "class", "marg-top formelements svelte-1tde6tk"),
                    U(e, "class", "panel-black marg-top"),
                    D(e, "text-align", "right"),
                    (m = [P(l, "input", y), P(c, "click", t[14])]);
            },
            m(a, d) {
                $(a, e, d),
                    k(e, s),
                    k(s, i),
                    k(s, n),
                    Ct(v, s, null),
                    k(s, r),
                    k(e, o),
                    k(o, l),
                    A(l, t[5]),
                    k(o, c),
                    k(c, h),
                    (u = !0);
            },
            p(t, e) {
                (!u || 16 & e) &&
                    p !==
                        (p =
                            (1 == t[4]
                                ? Wh.ui.stash.deposit
                                : Wh.ui.stash.withdraw) + "") &&
                    z(i, p);
                const s = {};
                48 & e && (s.amount = t[4] > 0 ? t[5] : 0),
                    v.$set(s),
                    !f && 32 & e && A(l, t[5]),
                    (f = !1),
                    (!u || 16 & e) &&
                        g !==
                            (g =
                                (1 == t[4]
                                    ? Wh.ui.stash.deposit
                                    : Wh.ui.stash.withdraw) + "") &&
                        z(h, g),
                    (!u ||
                        (56 & e &&
                            d !==
                                (d =
                                    "btn " +
                                    (!t[3] || t[5] <= 0 ? "disabled" : "") +
                                    " " +
                                    (1 == t[4] ? "blue" : "green") +
                                    " formatted"))) &&
                        U(c, "class", d);
            },
            i(t) {
                u || (vt(v.$$.fragment, t), (u = !0));
            },
            o(t) {
                yt(v.$$.fragment, t), (u = !1);
            },
            d(t) {
                t && S(e), Tt(v), a(m);
            }
        };
    }
    function ux(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            T = t[2].length + "",
            I = (t[7].subscribed_until ? ax[1].stash : ax[0].stash) + "",
            A = t[2],
            R = [];
        for (let e = 0; e < A.length; e += 1) R[e] = cx(rx(t, A, e));
        const B = t =>
            yt(R[t], 1, 1, () => {
                R[t] = null;
            });
        let F = null;
        A.length || (F = lx()).c();
        let N = !t[7].subscribed_until && hx(t);
        const L = new $y({ props: { amount: t[6].gold } });
        let O = t[4] > 0 && dx(t);
        return {
            c() {
                e = E("div");
                for (let t = 0; t < R.length; t += 1) R[t].c();
                (s = E("div")),
                    (i = E("div")),
                    (n = E("span")),
                    (r = C(T)),
                    (o = C(" / ")),
                    (l = C(I)),
                    N && N.c(),
                    (h = E("div")),
                    Et(L.$$.fragment),
                    (d = E("div")),
                    (u = E("img")),
                    (f = E("div")),
                    (g = E("img")),
                    O && O.c(),
                    (b = _()),
                    U(e, "class", "panel-black slotcontainer svelte-1tde6tk"),
                    D(e, "grid-template-columns", "repeat(" + t[8] + ", 46px)"),
                    D(e, "max-height", t[9] + "px"),
                    U(
                        n,
                        "class",
                        (c =
                            t[2].length <
                            (t[7].subscribed_until ? ax[1].stash : ax[0].stash)
                                ? "textgreen"
                                : "textred")
                    ),
                    U(
                        i,
                        "class",
                        "navbtn panel-black border black gold svelte-1tde6tk"
                    ),
                    D(i, "margin-right", "auto"),
                    U(
                        h,
                        "class",
                        "navbtn panel-black border black gold svelte-1tde6tk"
                    ),
                    U(u, "class", "svgicon"),
                    u.src !== (m = "/assets/ui/icons/deposit.svg?v=35201089") &&
                        U(u, "src", "/assets/ui/icons/deposit.svg?v=35201089"),
                    U(
                        d,
                        "class",
                        (p =
                            "navbtn btn grey gold " +
                            (1 == t[4] ? "active" : "") +
                            " svelte-1tde6tk")
                    ),
                    U(g, "class", "svgicon"),
                    g.src !==
                        (v = "/assets/ui/icons/withdraw.svg?v=35201089") &&
                        U(g, "src", "/assets/ui/icons/withdraw.svg?v=35201089"),
                    U(
                        f,
                        "class",
                        (y =
                            "navbtn btn grey gold " +
                            (2 == t[4] ? "active" : "") +
                            " svelte-1tde6tk")
                    ),
                    U(s, "class", "formelements svelte-1tde6tk"),
                    (x = [
                        P(d, "click", function () {
                            t[21].apply(this, arguments);
                        }),
                        P(f, "click", function () {
                            t[22].apply(this, arguments);
                        })
                    ]);
            },
            m(t, a) {
                $(t, e, a);
                for (let t = 0; t < R.length; t += 1) R[t].m(e, null);
                F && F.m(e, null),
                    $(t, s, a),
                    k(s, i),
                    k(i, n),
                    k(n, r),
                    k(n, o),
                    k(n, l),
                    N && N.m(n, null),
                    k(s, h),
                    Ct(L, h, null),
                    k(s, d),
                    k(d, u),
                    k(s, f),
                    k(f, g),
                    O && O.m(t, a),
                    $(t, b, a),
                    (w = !0);
            },
            p(s, i) {
                if (((t = s), 12303 & i)) {
                    let s;
                    for (A = t[2], s = 0; s < A.length; s += 1) {
                        const n = rx(t, A, s);
                        R[s]
                            ? (R[s].p(n, i), vt(R[s], 1))
                            : ((R[s] = cx(n)),
                              R[s].c(),
                              vt(R[s], 1),
                              R[s].m(e, null));
                    }
                    for (ft(), s = A.length; s < R.length; s += 1) B(s);
                    gt();
                }
                A.length
                    ? F && (F.d(1), (F = null))
                    : F || ((F = lx()).c(), F.m(e, null)),
                    (!w || 256 & i) &&
                        D(
                            e,
                            "grid-template-columns",
                            "repeat(" + t[8] + ", 46px)"
                        ),
                    (!w || 512 & i) && D(e, "max-height", t[9] + "px"),
                    (!w || 4 & i) && T !== (T = t[2].length + "") && z(r, T),
                    (!w || 128 & i) &&
                        I !==
                            (I =
                                (t[7].subscribed_until
                                    ? ax[1].stash
                                    : ax[0].stash) + "") &&
                        z(l, I),
                    t[7].subscribed_until
                        ? N && (N.d(1), (N = null))
                        : N
                        ? N.p(t, i)
                        : ((N = hx(t)).c(), N.m(n, null)),
                    (!w ||
                        (132 & i &&
                            c !==
                                (c =
                                    t[2].length <
                                    (t[7].subscribed_until
                                        ? ax[1].stash
                                        : ax[0].stash)
                                        ? "textgreen"
                                        : "textred"))) &&
                        U(n, "class", c);
                const a = {};
                64 & i && (a.amount = t[6].gold),
                    L.$set(a),
                    (!w ||
                        (16 & i &&
                            p !==
                                (p =
                                    "navbtn btn grey gold " +
                                    (1 == t[4] ? "active" : "") +
                                    " svelte-1tde6tk"))) &&
                        U(d, "class", p),
                    (!w ||
                        (16 & i &&
                            y !==
                                (y =
                                    "navbtn btn grey gold " +
                                    (2 == t[4] ? "active" : "") +
                                    " svelte-1tde6tk"))) &&
                        U(f, "class", y),
                    t[4] > 0
                        ? O
                            ? (O.p(t, i), vt(O, 1))
                            : ((O = dx(t)).c(), vt(O, 1), O.m(b.parentNode, b))
                        : O &&
                          (ft(),
                          yt(O, 1, 1, () => {
                              O = null;
                          }),
                          gt());
            },
            i(t) {
                if (!w) {
                    for (let t = 0; t < A.length; t += 1) vt(R[t]);
                    vt(L.$$.fragment, t), vt(O), (w = !0);
                }
            },
            o(t) {
                R = R.filter(Boolean);
                for (let t = 0; t < R.length; t += 1) yt(R[t]);
                yt(L.$$.fragment, t), yt(O), (w = !1);
            },
            d(t) {
                t && S(e),
                    M(R, t),
                    F && F.d(),
                    t && S(s),
                    N && N.d(),
                    Tt(L),
                    O && O.d(t),
                    t && S(b),
                    a(x);
            }
        };
    }
    function mx(t) {
        let e,
            s,
            i = t[6] && t[7] && ox(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[6] && t[7]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = ox(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function px(t, e, s) {
        let i, n, a, r, o, l, c, d, u, m;
        h(t, fe, t => s(16, (i = t))),
            h(t, Vt, t => s(17, (n = t))),
            h(t, pe, t => s(6, (a = t))),
            h(t, Jt, t => s(18, (r = t))),
            h(t, $e, t => s(7, (o = t))),
            h(t, Oe, t => s(8, (l = t))),
            h(t, qe, t => s(9, (c = t))),
            h(t, Ye, t => s(10, (d = t)));
        let p = [],
            g = [],
            v = !1;
        const y = async () => {
            if ((s(1, (m = Date.now())), i.length)) {
                const t = await fetch("/api/item/get", {
                        method: "POST",
                        body: JSON.stringify({
                            stash: 1,
                            ids: i.map(t => t.dbid)
                        })
                    }),
                    e = await t.json();
                if (e.fail) console.error(e);
                else {
                    s(2, (g.length = 0), g);
                    let t = new Map(i.map(t => [t.dbid, t]));
                    e.forEach((e, i) => {
                        (e.store = p[i] || (p[i] = It())),
                            s(2, (g[i] = p[i]), g),
                            t.has(e.id) &&
                                (t.get(e.id).hydrate(e),
                                s(2, (g[i].temp = t.get(e.id)), g));
                    });
                }
                s(3, (v = !0));
            } else s(3, (v = !0)), s(2, (g.length = 0), g);
        };
        let b = 2,
            w = 0;
        return (
            (t.$$.update = () => {
                65536 & t.$$.dirty && y(),
                    262256 & t.$$.dirty &&
                        s(5, (w = a ? Math.min(1 == b ? r : a.gold, w) : 0));
            }),
            [
                u,
                m,
                g,
                v,
                b,
                w,
                a,
                o,
                l,
                c,
                d,
                t => {
                    n &&
                        (Ld("itemstash", `${n.meta.slot}`),
                        f(Vt, (n = void 0)));
                },
                t => (t < m ? void 0 : `${Math.ceil((t - m) / 6e4)}m`),
                t => {
                    v &&
                        (t.detail.item.stash.getTime() > Date.now()
                            ? ix("system", Wh.ui.stash.waitunstash)
                            : (Ld("itemunstash", t.detail.item.dbid + ""),
                              s(3, (v = !1))));
                },
                t => {
                    v &&
                        (Ld(1 == b ? "goldstash" : "goldunstash", w + ""),
                        s(3, (v = !1)),
                        setTimeout(() => {
                            s(3, (v = !0));
                        }, 500));
                },
                p,
                i,
                n,
                r,
                y,
                t => f(Ye, (d = !0)),
                t => s(4, (b = 1)),
                t => s(4, (b = 2)),
                function () {
                    (w = I(this.value)), s(5, w), s(6, a), s(4, b), s(18, r);
                },
                t => f(pe, (a = !1)),
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(0, (u = t));
                    });
                }
            ]
        );
    }
    class fx extends Pt {
        constructor(t) {
            super(), _t(this, t, px, mx, o, {});
        }
    }
    function gx(t, e, s) {
        const i = t.slice();
        return (i[7] = e[s]), (i[9] = s), i;
    }
    function vx(t) {
        let e, s, i;
        const n = new og({
            props: {
                title: "Trader",
                icon: "bag",
                $$slots: { default: [$x] },
                $$scope: { ctx: t }
            }
        });
        return (
            n.$on("close", function () {
                t[5].apply(this, arguments);
            }),
            {
                c() {
                    (e = E("div")),
                        Et(n.$$.fragment),
                        U(
                            e,
                            "class",
                            "l-upperLeftModal container svelte-46w0ts"
                        ),
                        (i = P(e, "pointerup", t[3]));
                },
                m(i, a) {
                    $(i, e, a), Ct(n, e, null), t[6](e), (s = !0);
                },
                p(e, s) {
                    t = e;
                    const i = {};
                    1027 & s && (i.$$scope = { dirty: s, ctx: t }), n.$set(i);
                },
                i(t) {
                    s || (vt(n.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(n.$$.fragment, t), (s = !1);
                },
                d(s) {
                    s && S(e), Tt(n), t[6](null), i();
                }
            }
        );
    }
    function yx(t) {
        let e;
        const s = new mb({
            props: {
                id: "trader" + t[9],
                descPos: "left:100%;top:0;",
                descRoot: t[0],
                isTrader: !0,
                pickable: !1,
                item: t[7]
            }
        });
        return (
            s.$on("click", t[4]),
            {
                c() {
                    Et(s.$$.fragment);
                },
                m(t, i) {
                    Ct(s, t, i), (e = !0);
                },
                p(t, e) {
                    const i = {};
                    1 & e && (i.descRoot = t[0]), s.$set(i);
                },
                i(t) {
                    e || (vt(s.$$.fragment, t), (e = !0));
                },
                o(t) {
                    yt(s.$$.fragment, t), (e = !1);
                },
                d(t) {
                    Tt(s, t);
                }
            }
        );
    }
    function bx(e) {
        let s;
        return {
            c() {
                ((s = E("span")).textContent = "Select an item to sell"),
                    U(s, "class", "textgrey");
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function wx(t) {
        let e, s, i, n, a;
        const r = [kx, xx],
            o = [];
        function l(t, s) {
            return 2 & s && (e = !!t[1].data.canBeSold()), e ? 0 : 1;
        }
        return (
            (s = l(t, -1)),
            (i = o[s] = r[s](t)),
            {
                c() {
                    i.c(), (n = _());
                },
                m(t, e) {
                    o[s].m(t, e), $(t, n, e), (a = !0);
                },
                p(t, e) {
                    let a = s;
                    (s = l(t, e)) === a
                        ? o[s].p(t, e)
                        : (ft(),
                          yt(o[a], 1, 1, () => {
                              o[a] = null;
                          }),
                          gt(),
                          (i = o[s]) || (i = o[s] = r[s](t)).c(),
                          vt(i, 1),
                          i.m(n.parentNode, n));
                },
                i(t) {
                    a || (vt(i), (a = !0));
                },
                o(t) {
                    yt(i), (a = !1);
                },
                d(t) {
                    o[s].d(t), t && S(n);
                }
            }
        );
    }
    function xx(e) {
        let s;
        return {
            c() {
                ((s = E("span")).textContent =
                    "The trader does not want this item"),
                    U(s, "class", "textred");
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function kx(t) {
        let e;
        const s = new $y({ props: { amount: t[1].data.goldValue() } });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                2 & e && (i.amount = t[1].data.goldValue()), s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function $x(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h = Wn.player.getTargetEntity().itemStores,
            d = [];
        for (let e = 0; e < h.length; e += 1) d[e] = yx(gx(t, h, e));
        const u = t =>
                yt(d[t], 1, 1, () => {
                    d[t] = null;
                }),
            m = [wx, bx],
            p = [];
        function f(t, e) {
            return t[1] && "item" === t[1].meta.type ? 0 : 1;
        }
        return (
            (o = f(t)),
            (l = p[o] = m[o](t)),
            {
                c() {
                    ((e = E("p")).textContent = `${Wh.npcs.trader.buy}`),
                        (s = E("div"));
                    for (let t = 0; t < d.length; t += 1) d[t].c();
                    (i = E("div")),
                        ((n = E("p")).textContent = `${Wh.npcs.trader.info}`),
                        ((a = E("p")).textContent = `${Wh.npcs.trader.price}`),
                        (r = E("span")),
                        l.c(),
                        U(e, "class", "textprimary textcenter"),
                        U(
                            s,
                            "class",
                            "panel-black slotcontainer svelte-46w0ts"
                        ),
                        U(n, "class", "textprimary"),
                        U(
                            r,
                            "class",
                            "panel-black formatted info svelte-46w0ts"
                        ),
                        U(i, "class", "textcenter");
                },
                m(t, l) {
                    $(t, e, l), $(t, s, l);
                    for (let t = 0; t < d.length; t += 1) d[t].m(s, null);
                    $(t, i, l),
                        k(i, n),
                        k(i, a),
                        k(i, r),
                        p[o].m(r, null),
                        (c = !0);
                },
                p(t, e) {
                    if (17 & e) {
                        let i;
                        for (
                            h = Wn.player.getTargetEntity().itemStores, i = 0;
                            i < h.length;
                            i += 1
                        ) {
                            const n = gx(t, h, i);
                            d[i]
                                ? (d[i].p(n, e), vt(d[i], 1))
                                : ((d[i] = yx(n)),
                                  d[i].c(),
                                  vt(d[i], 1),
                                  d[i].m(s, null));
                        }
                        for (ft(), i = h.length; i < d.length; i += 1) u(i);
                        gt();
                    }
                    let i = o;
                    (o = f(t)) === i
                        ? p[o].p(t, e)
                        : (ft(),
                          yt(p[i], 1, 1, () => {
                              p[i] = null;
                          }),
                          gt(),
                          (l = p[o]) || (l = p[o] = m[o](t)).c(),
                          vt(l, 1),
                          l.m(r, null));
                },
                i(t) {
                    if (!c) {
                        for (let t = 0; t < h.length; t += 1) vt(d[t]);
                        vt(l), (c = !0);
                    }
                },
                o(t) {
                    d = d.filter(Boolean);
                    for (let t = 0; t < d.length; t += 1) yt(d[t]);
                    yt(l), (c = !1);
                },
                d(t) {
                    t && S(e), t && S(s), M(d, t), t && S(i), p[o].d();
                }
            }
        );
    }
    function Sx(t) {
        let e,
            s,
            i = t[2] && vx(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[2]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = vx(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function Mx(t, e, s) {
        let i, n;
        h(t, Vt, t => s(1, (i = t))), h(t, ge, t => s(2, (n = t)));
        let a;
        return [
            a,
            i,
            n,
            t => {
                i &&
                    (Ld("itemtradersell", `${i.meta.slot}`),
                    f(Vt, (i = void 0)));
            },
            t => {
                Ld("itemtraderbuy", `${t.detail.item.traderslot}`);
            },
            t => f(ge, (n = !1)),
            function (t) {
                tt[t ? "unshift" : "push"](() => {
                    s(0, (a = t));
                });
            }
        ];
    }
    class Ex extends Pt {
        constructor(t) {
            super(), _t(this, t, Mx, Sx, o, {});
        }
    }
    const Cx = t =>
            void 0 === t.stacks && t.rolls.length > 0 && !Lr[t.type].noupgrade,
        Tx = t => t < 101,
        _x = t => {
            if (!Cx(t)) return 0;
            const e = If[t.type + t.tier];
            return (
                Math.ceil(
                    ((1 + e.level * (1 + t.upgrade)) / Lr[t.type].drop) **
                        (1.2 + 0.2 * t.upgrade)
                ) + 100
            );
        },
        Px = t => {
            if (Cx(t)) {
                const e = [];
                for (let s = 0; s < Math.max(1, Math.min(t.upgrade, 3)); ++s)
                    e.push({
                        type: "rune",
                        tier: s + Math.max(0, t.upgrade - 3),
                        stacks: Math.min(t.upgrade + 1, 3 - s)
                    });
                return e;
            }
            return [];
        },
        Ux = (t, e, s, i, n) =>
            Ix(t, i, n) &&
            zx(s, i, n) &&
            Bx(e, i, n) &&
            Nx(e, i, n) &&
            Rx(e, t, i, n, s),
        Ix = (t, e, s) => t >= If[e + s].level,
        zx = (t, e, s) => void 0 === If[e + s].class || t === If[e + s].class,
        Ax = (t, e) => t + ff.get(e).skillpoints,
        Dx = (t, e) => ff.get(If[t + e].skillid).skillpoints,
        Rx = (t, e, s, i, n) =>
            "book" !== s ||
            ((t, e) => Math.ceil(t / 2) + $u[e].startSkills.length)(e, n) >=
                (t => t.reduce(Ax, 0))(t) + Dx(s, i),
        Bx = (t, e, s) =>
            "book" !== e || Fx(t, If[e + s].skillid) === If[e + s].skilllevel,
        Fx = (t, e) => t.reduce((t, s) => t + (s === e), 0),
        Nx = (t, e, s) =>
            !If[e + s].requiredSkills ||
            !If[e + s].requiredSkills.some(e => t.indexOf(e) < 0),
        Lx = (t, e, s, i) => {
            return (
                Math.ceil(
                    t.goldValue ||
                        (0.4 * (t.level ** 1.3 + 0.4 * e)) ** (1.1 + e / 100) /
                            Lr[t.type].drop
                ) *
                (s || 1) *
                (i ? 8 : 1)
            );
        };
    class Ox {
        constructor(t) {
            (this.dbid = t), (this.stats = new Map()), (this.dirty = !0);
        }
        hydrate(t) {
            if (
                ((this.dirty = !1),
                (this.bound = t.bound),
                (this.type = t.type),
                (this.tier = t.tier),
                (this.logic = If[this.type + this.tier]),
                (this.auction = t.auction ? new Date(t.auction) : void 0),
                (this.auctionprice = t.auctionprice),
                (this.owner = t.name),
                (this.stash = t.stash ? new Date(t.stash) : void 0),
                void 0 === this.logic)
            )
                throw "Unknown item " + t.type + t.tier;
            if (((this.upgrade = t.upgrade), this.stats.clear(), t.rolls)) {
                if (
                    (this.setRolls(t.rolls),
                    (this.quality = this.nextRoll()),
                    this.logic.stats)
                ) {
                    this.logic.stats.forEach((t, e) => {
                        this.stats.set(e, {
                            type: "base",
                            qual: this.quality,
                            value: Math.floor(
                                t.min +
                                    (t.max - t.min) *
                                        (this.quality / 100) ** 2 +
                                    Hr[e] * this.upgrade
                            )
                        });
                    });
                    const t = Math.round((this.quality / 100) ** 1.5 * 3.6);
                    for (let e = 0; e < t; ++e) {
                        let t = this.nextRoll(),
                            e = -1;
                        for (; -1 === e || this.stats.has(e); )
                            (e = parseInt(Fr(qx, t / 101))),
                                (t = (t + 5) % 100);
                        const s = (this.nextRoll() + this.quality) / 2;
                        this.stats.set(e, {
                            type: "bonus",
                            qual: s,
                            value: Math.ceil(
                                Math.max(
                                    (qr[e].min +
                                        (qr[e].max - qr[e].min) *
                                            (s / 100) ** 2) *
                                        this.logic.level *
                                        Lr[this.type].weight,
                                    Hr[e]
                                ) +
                                    Hr[e] * this.upgrade
                            )
                        });
                    }
                }
                (this.quality = this.logic.quality || this.quality),
                    (this.stacks = void 0);
            } else
                (this.stacks = t.stacks),
                    (this.quality = this.logic.quality || 0);
        }
        setRolls(t) {
            (this.rolls = t), (this.currentRoll = 0);
        }
        nextRoll() {
            if (this.currentRoll == this.rolls.length)
                throw "roll maximum reached";
            return this.rolls[this.currentRoll++];
        }
        use(t) {
            this.logic.use && this.logic.use(t);
        }
        goldValue(t) {
            if (!this.canBeSold())
                throw "Item cant have value because it cant be sold";
            return Lx(this.logic, this.quality, this.stacks, t);
        }
        storeValue() {
            return this.logic.storeValue || 0;
        }
        canEquip(t) {
            return Ux(
                t.level,
                t.skills.skillIds,
                t.class,
                this.type,
                this.tier
            );
        }
        canEquipClass(t) {
            return zx(t.class, this.type, this.tier);
        }
        equipReasons(t) {
            const e = [];
            return (
                this.logic.level && e.push(["Lv. " + this.logic.level, !0]), e
            );
        }
        canBeDropped() {
            return !Lr[this.type].undroppable && !this.bound;
        }
        canBeTraded() {
            return !this.bound;
        }
        canBeSold() {
            return !this.logic.unsellable;
        }
    }
    const qx = Object.keys(qr),
        Hx = (t, e, s) => {
            if (t && t.type)
                switch (e) {
                    case 13:
                        t.rolls &&
                            t.quality >= 70 &&
                            Jr({
                                id:
                                    "item/" +
                                    (t.quality < 90
                                        ? "discoverRare"
                                        : "discoverEpic"),
                                pitch: -1
                            });
                    case 1:
                        vi.chat[7] &&
                            ix(
                                "inv",
                                Wh.ui.inventory.pick.replace(
                                    "$1",
                                    jh(t.type, t.tier)
                                ),
                                !0
                            ),
                            Lf(10, 100),
                            so(t.type),
                            (Rf[12].element = "bag" + s),
                            "book" == t.type &&
                                Lf(23, 100) &&
                                (Rf[24].element = "bag" + s);
                        break;
                    case 10:
                        t.rolls &&
                            ye.update(e => (be.set(t.upgrade - e.upgrade), t));
                }
        },
        Wx = (t, e) => {
            if (t && t.type)
                switch (e) {
                    case 7:
                        vi.chat[8] &&
                            ix(
                                "inv",
                                Wh.ui.stash.stashed.replace(
                                    "$1",
                                    jh(t.type, t.tier)
                                )
                            ),
                            so(t.type);
                        break;
                    case 6:
                        de.set(),
                            ue.update(t => !t),
                            vi.chat[8] &&
                                ix(
                                    "inv",
                                    Wh.ui.merchant.auctionpost.replace(
                                        "$1",
                                        jh(t.type, t.tier)
                                    )
                                );
                        break;
                    case 9:
                        vi.chat[8] &&
                            ix(
                                "inv",
                                Wh.ui.inventory.sell.replace(
                                    "$1",
                                    jh(t.type, t.tier)
                                )
                            ),
                            so(t.type);
                        break;
                    case 2:
                        vi.chat[7] &&
                            ix(
                                "inv",
                                Wh.ui.inventory.throw.replace(
                                    "$1",
                                    jh(t.type, t.tier)
                                )
                            ),
                            so(t.type);
                }
        },
        Zx = (t, e, s) => {
            switch ((0 != s && so("gold"), s)) {
                case 1:
                    vi.chat[9] &&
                        ix(
                            "inv",
                            Wh.ui.inventory.pick.replace("$1", "$g" + e),
                            !0
                        );
                    break;
                case 4:
                    ue.update(t => !t),
                        vi.chat[10] &&
                            ix(
                                "inv",
                                Wh.ui.merchant.auctionbuy.replace("$1", e),
                                !0
                            );
                    break;
                case 3:
                    vi.chat[10] &&
                        ix("inv", Wh.ui.inventory.spend.replace("$1", e), !0);
                    break;
                case 12:
                    vi.chat[10] &&
                        ix(
                            "inv",
                            Wh.ui.inventory.spend
                                .replace("$g", "$sp")
                                .replace("$1", e),
                            !0
                        );
                    break;
                case 11:
                    vi.chat[10] &&
                        ix("inv", Wh.ui.inventory.death.replace("$1", e), !0);
                    break;
                case 9:
                    vi.chat[10] &&
                        ix(
                            "inv",
                            Wh.ui.inventory.receive.replace("$1", "$g" + e),
                            !0
                        );
            }
        };
    class jx extends Ox {
        constructor(t) {
            super(t);
        }
        hydrate(t) {
            super.hydrate(t),
                t.store
                    ? t.store.set(this)
                    : console.error("no store for item", t),
                Hx(this, this.reason, t.slot);
        }
        equipReasons(t) {
            const e = [];
            if (
                (void 0 !== this.logic.class &&
                    e.push([
                        "Class: " + Wh.classes[this.logic.class].name,
                        zx(t.class, this.type, this.tier)
                    ]),
                this.logic.level &&
                    e.push([
                        "Requires Lv. " + this.logic.level,
                        Ix(t.level, this.type, this.tier)
                    ]),
                this.logic.requiredSkills &&
                    e.push([
                        "Must know: " +
                            this.logic.requiredSkills
                                .map(t => Wh.items.book[t].name)
                                .join(", "),
                        Nx(t.skills.skillIds, this.type, this.tier)
                    ]),
                zx(t.class, this.type, this.tier) && "book" == this.type)
            ) {
                const s = Bx(t.skills.skillIds, this.type, this.tier),
                    i = Fx(t.skills.skillIds, this.logic.skillid);
                e.push([
                    s
                        ? "Use book to learn skill"
                        : i >= this.logic.skilllevel
                        ? "You already know this skill"
                        : `Must learn book Lv. ${this.logic.skilllevel} first`,
                    s
                ]);
                const n = Rx(
                    t.skills.skillIds,
                    t.level,
                    this.type,
                    this.tier,
                    t.class
                );
                e.push([
                    n
                        ? `Requires ${
                              Dx(this.type, this.tier) || "no"
                          } skill point`
                        : "Not enough skill points",
                    n
                ]);
            }
            return e;
        }
    }
    function Gx(t, e, s) {
        const i = t.slice();
        return (i[18] = e[s]), i;
    }
    function Vx(t) {
        let e, s;
        const i = new og({
            props: {
                title: "Blacksmith",
                pad: "5",
                icon: "bag",
                $$slots: { default: [Xx] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", function () {
                t[17].apply(this, arguments);
            }),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(
                            e,
                            "class",
                            "absCentered container textcenter svelte-1pe30wj"
                        );
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(e, s) {
                    t = e;
                    const n = {};
                    2097407 & s && (n.$$scope = { dirty: s, ctx: t }),
                        i.$set(n);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    function Yx(t) {
        let e;
        return {
            c() {
                e = E("div");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Jx(t) {
        let e;
        const s = new mb({
            props: { pickable: !1, item: t[18], filter: t[18].filter }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                2 & e && (i.item = t[18]),
                    2 & e && (i.filter = t[18].filter),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Xx(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g = (t[5] || "Place an item into the upgrade slot") + "";
        const v = new mb({
            props: {
                clearOnMove: !0,
                invslot: t[7] ? t[0] : void 0,
                pickable: !0,
                item: ye,
                filter: !!t[3] || ""
            }
        });
        v.$on("discard", t[10]), v.$on("move", t[9]);
        let y = t[1],
            b = [];
        for (let e = 0; e < y.length; e += 1) b[e] = Jx(Gx(t, y, e));
        const w = t =>
            yt(b[t], 1, 1, () => {
                b[t] = null;
            });
        let x = null;
        y.length || (x = Yx()).c();
        const T = new $y({
            props: { isPrice: !0, amount: t[7] ? _x(t[7]) : 0 }
        });
        return {
            c() {
                ((e = E("h3")).textContent = "Upgrade Item"),
                    (s = E("span")),
                    (i = C(g)),
                    (a = E("div")),
                    Et(v.$$.fragment),
                    (o = E("div")),
                    ((l = E("span")).textContent = "Cost:"),
                    (c = E("div"));
                for (let t = 0; t < b.length; t += 1) b[t].c();
                (h = E("div")),
                    Et(T.$$.fragment),
                    (d = E("div")),
                    (u = C("Upgrade")),
                    U(e, "class", "textwhite"),
                    U(
                        s,
                        "class",
                        (n =
                            "panel-black upgradetext " +
                            t[6] +
                            " svelte-1pe30wj")
                    ),
                    U(
                        a,
                        "class",
                        (r = "upgradeslot " + t[4] + " svelte-1pe30wj")
                    ),
                    U(c, "class", "panel-black costgrid svelte-1pe30wj"),
                    D(
                        c,
                        "grid-template-columns",
                        "repeat(" + (t[1].length || 3) + ", 30px)"
                    ),
                    U(
                        d,
                        "class",
                        (m =
                            "btn primary formatted textcenter upgradebutton " +
                            (t[2] ? "" : "disabled") +
                            " svelte-1pe30wj")
                    ),
                    U(o, "class", "upgrade svelte-1pe30wj"),
                    (f = P(d, "click", t[11]));
            },
            m(t, n) {
                $(t, e, n),
                    $(t, s, n),
                    k(s, i),
                    $(t, a, n),
                    Ct(v, a, null),
                    $(t, o, n),
                    k(o, l),
                    k(o, c);
                for (let t = 0; t < b.length; t += 1) b[t].m(c, null);
                x && x.m(c, null),
                    k(o, h),
                    Ct(T, h, null),
                    k(o, d),
                    k(d, u),
                    (p = !0);
            },
            p(t, e) {
                (!p || 32 & e) &&
                    g !==
                        (g =
                            (t[5] || "Place an item into the upgrade slot") +
                            "") &&
                    z(i, g),
                    (!p ||
                        (64 & e &&
                            n !==
                                (n =
                                    "panel-black upgradetext " +
                                    t[6] +
                                    " svelte-1pe30wj"))) &&
                        U(s, "class", n);
                const o = {};
                if (
                    (129 & e && (o.invslot = t[7] ? t[0] : void 0),
                    8 & e && (o.filter = !!t[3] || ""),
                    v.$set(o),
                    (!p ||
                        (16 & e &&
                            r !==
                                (r =
                                    "upgradeslot " +
                                    t[4] +
                                    " svelte-1pe30wj"))) &&
                        U(a, "class", r),
                    2 & e)
                ) {
                    let s;
                    for (y = t[1], s = 0; s < y.length; s += 1) {
                        const i = Gx(t, y, s);
                        b[s]
                            ? (b[s].p(i, e), vt(b[s], 1))
                            : ((b[s] = Jx(i)),
                              b[s].c(),
                              vt(b[s], 1),
                              b[s].m(c, null));
                    }
                    for (ft(), s = y.length; s < b.length; s += 1) w(s);
                    gt();
                }
                y.length
                    ? x && (x.d(1), (x = null))
                    : x || ((x = Yx()).c(), x.m(c, null)),
                    (!p || 2 & e) &&
                        D(
                            c,
                            "grid-template-columns",
                            "repeat(" + (t[1].length || 3) + ", 30px)"
                        );
                const l = {};
                128 & e && (l.amount = t[7] ? _x(t[7]) : 0),
                    T.$set(l),
                    (!p ||
                        (4 & e &&
                            m !==
                                (m =
                                    "btn primary formatted textcenter upgradebutton " +
                                    (t[2] ? "" : "disabled") +
                                    " svelte-1pe30wj"))) &&
                        U(d, "class", m);
            },
            i(t) {
                if (!p) {
                    vt(v.$$.fragment, t);
                    for (let t = 0; t < y.length; t += 1) vt(b[t]);
                    vt(T.$$.fragment, t), (p = !0);
                }
            },
            o(t) {
                yt(v.$$.fragment, t), (b = b.filter(Boolean));
                for (let t = 0; t < b.length; t += 1) yt(b[t]);
                yt(T.$$.fragment, t), (p = !1);
            },
            d(t) {
                t && S(e),
                    t && S(s),
                    t && S(a),
                    Tt(v),
                    t && S(o),
                    M(b, t),
                    x && x.d(),
                    Tt(T),
                    f();
            }
        };
    }
    function Qx(t) {
        let e,
            s,
            i = t[8] && Vx(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[8]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = Vx(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function Kx(t, e, s) {
        let i, n, a, r, o;
        h(t, ye, t => s(7, (i = t))),
            h(t, ve, t => s(8, (n = t))),
            h(t, be, t => s(12, (a = t))),
            h(t, Jt, t => s(13, (r = t))),
            h(t, Kt, t => s(14, (o = t)));
        let l,
            c = [],
            d = !1,
            u = !1;
        const m = () => {
            const t = Cx(i),
                e = r > _x(i),
                n = Tx(l);
            s(2, (d = t && e && n));
            const a = Px(i);
            a.forEach((t, e) => {
                const i = c[e] || s(1, (c[e] = It()), c),
                    n = new jx();
                n.hydrate({ ...t, store: i }),
                    (i.filter = !(o[n.type + n.tier] >= n.stacks) || ""),
                    i.filter && s(2, (d = !1));
            }),
                s(1, (c = c.slice(0, a.length))),
                d || s(5, (g = "You lack the required materials")),
                t || s(5, (g = "This item type cannot be upgraded")),
                e || s(5, (g = "You do not have enough gold")),
                n || s(5, (g = "You must un-equip the item first")),
                d
                    ? (s(6, (v = "textgreen")), s(5, (g = "Ready to upgrade")))
                    : s(6, (v = "textred"));
        };
        let p, g, v;
        const y = () => {
            Jr({
                id: a > 0 ? "upgrade_success" : "upgrade_fail",
                loop: !1,
                gain: !0
            }),
                s(4, (p = a > 0 ? "flash_success" : "flash_fail")),
                s(
                    5,
                    (g =
                        (a > 0 ? "Success! " : "Fail! ") +
                        (a < 0 ? "-" : "+") +
                        a)
                ),
                s(6, (v = a > 0 ? "textgreen" : "textred"));
        };
        return (
            (t.$$.update = () => {
                256 & t.$$.dirty &&
                    (n || (f(ye, (i = void 0)), f(be, (a = void 0)))),
                    128 & t.$$.dirty &&
                        (s(2, (d = !0)),
                        i
                            ? m()
                            : (s(1, (c.length = 0), c),
                              s(2, (d = !1)),
                              s(6, (v = void 0)),
                              s(5, (g = void 0))),
                        s(3, (u = !1))),
                    4096 & t.$$.dirty &&
                        (void 0 !== a ? y() : (s(4, (p = "")), s(6, (v = ""))));
            }),
            [
                l,
                c,
                d,
                u,
                p,
                g,
                v,
                i,
                n,
                t => {
                    const { from: e, to: i } = t.detail;
                    e !== i &&
                        "item" == e.type &&
                        (ye.set(e.item), s(0, (l = e.slot)));
                },
                t => {
                    ye.set(), s(0, (l = void 0));
                },
                () => {
                    i &&
                        d &&
                        !u &&
                        (s(3, (u = !0)),
                        f(be, (a = void 0)),
                        s(5, (g = "Upgrading...")),
                        s(6, (v = "textprimary")),
                        Jr({ id: "anvil", loop: !1, gain: !0 }),
                        setTimeout(
                            () => Ld("itemblacksmithupgrade", `${i.dbid}`),
                            1e3
                        ));
                },
                a,
                r,
                o,
                m,
                y,
                t => f(ve, (n = !1))
            ]
        );
    }
    class tk extends Pt {
        constructor(t) {
            super(), _t(this, t, Kx, Qx, o, {});
        }
    }
    function ek(e) {
        let s,
            i,
            n,
            a,
            r,
            o = Wh.ui.stats.array[e[1]] + "",
            l =
                (e[3]
                    ? "+" + jg(e[1], e[0].get(e[2]).get(e[1]))
                    : jg(e[1], e[4][e[1]] || 0)) + "";
        return {
            c() {
                (s = E("span")),
                    (i = C(o)),
                    (n = E("span")),
                    (a = C(l)),
                    U(
                        n,
                        "class",
                        (r =
                            "number " +
                            (e[3]
                                ? "textgreen"
                                : e[0]
                                ? "textprimary"
                                : "textgreen") +
                            " svelte-1ddmf0x")
                    );
            },
            m(t, e) {
                $(t, s, e), k(s, i), $(t, n, e), k(n, a);
            },
            p(t, [e]) {
                2 & e && o !== (o = Wh.ui.stats.array[t[1]] + "") && z(i, o),
                    31 & e &&
                        l !==
                            (l =
                                (t[3]
                                    ? "+" + jg(t[1], t[0].get(t[2]).get(t[1]))
                                    : jg(t[1], t[4][t[1]] || 0)) + "") &&
                        z(a, l),
                    9 & e &&
                        r !==
                            (r =
                                "number " +
                                (t[3]
                                    ? "textgreen"
                                    : t[0]
                                    ? "textprimary"
                                    : "textgreen") +
                                " svelte-1ddmf0x") &&
                        U(n, "class", r);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), t && S(n);
            }
        };
    }
    function sk(t, e, s) {
        let i;
        h(t, we, t => s(4, (i = t)));
        let n,
            { relmap: a } = e,
            { id: r } = e,
            { relation: o } = e;
        return (
            (t.$set = t => {
                "relmap" in t && s(0, (a = t.relmap)),
                    "id" in t && s(1, (r = t.id)),
                    "relation" in t && s(2, (o = t.relation));
            }),
            (t.$$.update = () => {
                7 & t.$$.dirty &&
                    s(3, (n = void 0 !== o && void 0 !== a.get(o).get(r)));
            }),
            [a, r, o, n, i]
        );
    }
    class ik extends Pt {
        constructor(t) {
            super(), _t(this, t, sk, ek, o, { relmap: 0, id: 1, relation: 2 });
        }
    }
    const nk = [10, 180, 600, 1300, 2100, 3200, 4500, 5900, 7600, 1e4],
        ak = nk.length,
        rk = t => {
            for (let e = 0; e < ak; ++e) if (nk[e] > t) return e;
            return Math.max(0, ak - 1);
        };
    function ok(t, e, s) {
        const i = t.slice();
        return (i[17] = e[s]), i;
    }
    function lk(t, e, s) {
        const i = t.slice();
        return (i[14] = e[s]), i;
    }
    function ck(t, e, s) {
        const i = t.slice();
        return (i[20] = e[s]), (i[22] = s), i;
    }
    function hk(t, e, s) {
        const i = t.slice();
        return (i[17] = e[s]), i;
    }
    function dk(t) {
        let e, s;
        const i = new og({
            props: {
                title: "Character",
                icon: "char",
                $$slots: { default: [gk] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", t[13]),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(
                            e,
                            "class",
                            "l-upperLeftModal container uiscaled svelte-11akou7"
                        );
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(t, e) {
                    const s = {};
                    33554487 & e && (s.$$scope = { dirty: e, ctx: t }),
                        i.$set(s);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    function uk(t) {
        let e, s, i, n, r;
        const o = new ik({ props: { id: t[17] } });
        function l(...e) {
            return t[10](t[17], ...e);
        }
        function c(...e) {
            return t[12](t[17], ...e);
        }
        return {
            c() {
                Et(o.$$.fragment),
                    (e = E("img")).src !==
                        (s = "/assets/ui/icons/arrow.svg?v=35201089") &&
                        U(e, "src", "/assets/ui/icons/arrow.svg?v=35201089"),
                    U(
                        e,
                        "class",
                        (i =
                            "btn " +
                            (t[1][21] > 0 ? "green" : "disabled") +
                            " svgicon statbtn svelte-11akou7")
                    ),
                    (r = [
                        P(e, "pointerenter", function () {
                            l.apply(this, arguments);
                        }),
                        P(e, "pointerleave", function () {
                            t[11].apply(this, arguments);
                        }),
                        P(e, "click", c)
                    ]);
            },
            m(t, s) {
                Ct(o, t, s), $(t, e, s), (n = !0);
            },
            p(s, a) {
                (t = s),
                    (!n ||
                        (2 & a &&
                            i !==
                                (i =
                                    "btn " +
                                    (t[1][21] > 0 ? "green" : "disabled") +
                                    " svgicon statbtn svelte-11akou7"))) &&
                        U(e, "class", i);
            },
            i(t) {
                n || (vt(o.$$.fragment, t), (n = !0));
            },
            o(t) {
                yt(o.$$.fragment, t), (n = !1);
            },
            d(t) {
                Tt(o, t), t && S(e), a(r);
            }
        };
    }
    function mk(t) {
        let e;
        const s = new mb({
            props: {
                descPos: "left:100%;top:0;",
                item: t[20],
                invslot: 101 + t[22]
            }
        });
        return (
            s.$on("move", t[7]),
            {
                c() {
                    Et(s.$$.fragment);
                },
                m(t, i) {
                    Ct(s, t, i), (e = !0);
                },
                p(t, e) {
                    const i = {};
                    32 & e && (i.item = t[20]), s.$set(i);
                },
                i(t) {
                    e || (vt(s.$$.fragment, t), (e = !0));
                },
                o(t) {
                    yt(s.$$.fragment, t), (e = !1);
                },
                d(t) {
                    Tt(s, t);
                }
            }
        );
    }
    function pk(t) {
        let e;
        const s = new ik({
            props: { id: t[17], relmap: t[6], relation: t[0] }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                1 & e && (i.relation = t[0]), s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function fk(t) {
        let e,
            s,
            i = t[14],
            n = [];
        for (let e = 0; e < i.length; e += 1) n[e] = pk(ok(t, i, e));
        const a = t =>
            yt(n[t], 1, 1, () => {
                n[t] = null;
            });
        return {
            c() {
                e = E("div");
                for (let t = 0; t < n.length; t += 1) n[t].c();
                U(e, "class", "statcol panel-black svelte-11akou7");
            },
            m(t, i) {
                $(t, e, i);
                for (let t = 0; t < n.length; t += 1) n[t].m(e, null);
                s = !0;
            },
            p(t, s) {
                if (321 & s) {
                    let r;
                    for (i = t[14], r = 0; r < i.length; r += 1) {
                        const a = ok(t, i, r);
                        n[r]
                            ? (n[r].p(a, s), vt(n[r], 1))
                            : ((n[r] = pk(a)),
                              n[r].c(),
                              vt(n[r], 1),
                              n[r].m(e, null));
                    }
                    for (ft(), r = i.length; r < n.length; r += 1) a(r);
                    gt();
                }
            },
            i(t) {
                if (!s) {
                    for (let t = 0; t < i.length; t += 1) vt(n[t]);
                    s = !0;
                }
            },
            o(t) {
                n = n.filter(Boolean);
                for (let t = 0; t < n.length; t += 1) yt(n[t]);
                s = !1;
            },
            d(t) {
                t && S(e), M(n, t);
            }
        };
    }
    function gk(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            P,
            I,
            A,
            R,
            B,
            F,
            N,
            L,
            O,
            q,
            H,
            W,
            Z,
            j,
            G,
            V,
            Y,
            J,
            X = t[4].name + "",
            Q = t[4].level + "",
            K = Wh.classes[t[4].class].name + "",
            tt = Wh.factions[t[4].faction].name + "",
            et = (t[1][20] || 0) + "",
            st = t[2] < ak ? "/ " + nk[t[2]] : "",
            it = (t[2] || "None") + "",
            nt = [0, 1, 2, 3, 4, 5],
            at = [];
        for (let e = 0; e < 6; e += 1) at[e] = uk(hk(t, nt, e));
        const rt = t =>
                yt(at[t], 1, 1, () => {
                    at[t] = null;
                }),
            ot = new ik({ props: { id: 21 } });
        let lt = t[5].filter(yk),
            ct = [];
        for (let e = 0; e < lt.length; e += 1) ct[e] = mk(ck(t, lt, e));
        const ht = t =>
            yt(ct[t], 1, 1, () => {
                ct[t] = null;
            });
        let dt = t[8],
            ut = [];
        for (let e = 0; e < dt.length; e += 1) ut[e] = fk(lk(t, dt, e));
        const mt = t =>
            yt(ut[t], 1, 1, () => {
                ut[t] = null;
            });
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    ((i = E("span")).textContent = "Name"),
                    (n = E("span")),
                    (a = C(X)),
                    ((r = E("span")).textContent = "Level"),
                    (o = E("span")),
                    (l = C(Q)),
                    ((c = E("span")).textContent = "Class"),
                    (h = E("span")),
                    (d = E("img")),
                    (m = T()),
                    (f = C(K)),
                    ((v = E("span")).textContent = "Faction"),
                    (y = E("span")),
                    (b = E("img")),
                    (x = T()),
                    (P = C(tt)),
                    ((A = E("span")).textContent = "Fame"),
                    (R = E("span")),
                    (B = C(et)),
                    (F = T()),
                    (N = C(st)),
                    ((L = E("span")).textContent = "Fame Rank"),
                    (O = E("span")),
                    (q = E("img")),
                    (W = T()),
                    (Z = C(it)),
                    (j = E("div"));
                for (let t = 0; t < 6; t += 1) at[t].c();
                (G = _()), Et(ot.$$.fragment), (V = E("div"));
                for (let t = 0; t < ct.length; t += 1) ct[t].c();
                Y = E("div");
                for (let t = 0; t < ut.length; t += 1) ut[t].c();
                U(n, "class", "textwhite"),
                    U(o, "class", "textwhite"),
                    U(d, "class", "texticon"),
                    d.src !== (u = Vd(t[4].class)) && U(d, "src", u),
                    U(
                        h,
                        "class",
                        (g = p("textc" + t[4].class) + " svelte-11akou7")
                    ),
                    U(b, "class", "texticon"),
                    b.src !== (w = Yd(t[4].faction)) && U(b, "src", w),
                    U(
                        y,
                        "class",
                        (I = p("textf" + t[4].faction) + " svelte-11akou7")
                    ),
                    U(R, "class", "textfame"),
                    U(q, "class", "texticon"),
                    q.src !== (H = "/assets/ui/icons/crown.svg?v=35201089") &&
                        U(q, "src", "/assets/ui/icons/crown.svg?v=35201089"),
                    U(O, "class", "textfame"),
                    U(s, "class", "statcol panel-black svelte-11akou7"),
                    U(j, "id", "statpoints"),
                    U(j, "class", "statcol panel-black svelte-11akou7"),
                    D(j, "grid-template-columns", "1fr auto auto"),
                    U(e, "class", "grid two"),
                    U(V, "id", "equipslots"),
                    U(V, "class", "items svelte-11akou7"),
                    U(Y, "class", "grid three stats2 svelte-11akou7");
            },
            m(t, u) {
                $(t, e, u),
                    k(e, s),
                    k(s, i),
                    k(s, n),
                    k(n, a),
                    k(s, r),
                    k(s, o),
                    k(o, l),
                    k(s, c),
                    k(s, h),
                    k(h, d),
                    k(h, m),
                    k(h, f),
                    k(s, v),
                    k(s, y),
                    k(y, b),
                    k(y, x),
                    k(y, P),
                    k(s, A),
                    k(s, R),
                    k(R, B),
                    k(R, F),
                    k(R, N),
                    k(s, L),
                    k(s, O),
                    k(O, q),
                    k(O, W),
                    k(O, Z),
                    k(e, j);
                for (let t = 0; t < 6; t += 1) at[t].m(j, null);
                k(j, G), Ct(ot, j, null), $(t, V, u);
                for (let t = 0; t < ct.length; t += 1) ct[t].m(V, null);
                $(t, Y, u);
                for (let t = 0; t < ut.length; t += 1) ut[t].m(Y, null);
                J = !0;
            },
            p(t, e) {
                if (
                    ((!J || 16 & e) && X !== (X = t[4].name + "") && z(a, X),
                    (!J || 16 & e) && Q !== (Q = t[4].level + "") && z(l, Q),
                    (!J || (16 & e && d.src !== (u = Vd(t[4].class)))) &&
                        U(d, "src", u),
                    (!J || 16 & e) &&
                        K !== (K = Wh.classes[t[4].class].name + "") &&
                        z(f, K),
                    (!J ||
                        (16 & e &&
                            g !==
                                (g =
                                    p("textc" + t[4].class) +
                                    " svelte-11akou7"))) &&
                        U(h, "class", g),
                    (!J || (16 & e && b.src !== (w = Yd(t[4].faction)))) &&
                        U(b, "src", w),
                    (!J || 16 & e) &&
                        tt !== (tt = Wh.factions[t[4].faction].name + "") &&
                        z(P, tt),
                    (!J ||
                        (16 & e &&
                            I !==
                                (I =
                                    p("textf" + t[4].faction) +
                                    " svelte-11akou7"))) &&
                        U(y, "class", I),
                    (!J || 2 & e) &&
                        et !== (et = (t[1][20] || 0) + "") &&
                        z(B, et),
                    (!J || 4 & e) &&
                        st !== (st = t[2] < ak ? "/ " + nk[t[2]] : "") &&
                        z(N, st),
                    (!J || 4 & e) &&
                        it !== (it = (t[2] || "None") + "") &&
                        z(Z, it),
                    515 & e)
                ) {
                    let s;
                    for (nt = [0, 1, 2, 3, 4, 5], s = 0; s < 6; s += 1) {
                        const i = hk(t, nt, s);
                        at[s]
                            ? (at[s].p(i, e), vt(at[s], 1))
                            : ((at[s] = uk(i)),
                              at[s].c(),
                              vt(at[s], 1),
                              at[s].m(j, G));
                    }
                    for (ft(), s = 6; s < 6; s += 1) rt(s);
                    gt();
                }
                if (160 & e) {
                    let s;
                    for (lt = t[5].filter(yk), s = 0; s < lt.length; s += 1) {
                        const i = ck(t, lt, s);
                        ct[s]
                            ? (ct[s].p(i, e), vt(ct[s], 1))
                            : ((ct[s] = mk(i)),
                              ct[s].c(),
                              vt(ct[s], 1),
                              ct[s].m(V, null));
                    }
                    for (ft(), s = lt.length; s < ct.length; s += 1) ht(s);
                    gt();
                }
                if (321 & e) {
                    let s;
                    for (dt = t[8], s = 0; s < dt.length; s += 1) {
                        const i = lk(t, dt, s);
                        ut[s]
                            ? (ut[s].p(i, e), vt(ut[s], 1))
                            : ((ut[s] = fk(i)),
                              ut[s].c(),
                              vt(ut[s], 1),
                              ut[s].m(Y, null));
                    }
                    for (ft(), s = dt.length; s < ut.length; s += 1) mt(s);
                    gt();
                }
            },
            i(t) {
                if (!J) {
                    for (let t = 0; t < 6; t += 1) vt(at[t]);
                    vt(ot.$$.fragment, t);
                    for (let t = 0; t < lt.length; t += 1) vt(ct[t]);
                    for (let t = 0; t < dt.length; t += 1) vt(ut[t]);
                    J = !0;
                }
            },
            o(t) {
                at = at.filter(Boolean);
                for (let t = 0; t < 6; t += 1) yt(at[t]);
                yt(ot.$$.fragment, t), (ct = ct.filter(Boolean));
                for (let t = 0; t < ct.length; t += 1) yt(ct[t]);
                ut = ut.filter(Boolean);
                for (let t = 0; t < ut.length; t += 1) yt(ut[t]);
                J = !1;
            },
            d(t) {
                t && S(e),
                    M(at, t),
                    Tt(ot),
                    t && S(V),
                    M(ct, t),
                    t && S(Y),
                    M(ut, t);
            }
        };
    }
    function vk(t) {
        let e,
            s,
            i = t[3] && dk(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[3]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = dk(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    const yk = (t, e) => e >= 101;
    function bk(t, e, s) {
        let i, n, a, r;
        h(t, we, t => s(1, (i = t))),
            h(t, Ke, t => s(3, (n = t))),
            h(t, jt, t => s(4, (a = t))),
            h(t, Qt, t => s(5, (r = t)));
        const o = new Map();
        if (
            (Su.forEach((t, e) => {
                const s = new Map();
                t.forEach((t, e) => {
                    s.set(e, t);
                }),
                    o.set(e, s);
            }),
            Wn && Wn.player)
        ) {
            const t = Wn.player.buffs.casters.get(Wn.player.id);
            t &&
                t.forEach(t => {
                    t.logic.statsConvert &&
                        t.logic.statsConvert.forEach(t => {
                            const e = Su.get(t[0]) || new Map();
                            e.set(t[2], t[1]), o.set(t[0], e);
                        });
                });
        }
        let l = void 0;
        const c = t => {
            i[21] &&
                (Ld("statincrease", t + " " + (oo.shift.down ? 10 : 1)),
                s(0, (l = void 0)),
                Lf(18, 50));
        };
        let d;
        return (
            (t.$$.update = () => {
                2 & t.$$.dirty && s(2, (d = rk(i[20] || 0)));
            }),
            [
                l,
                i,
                d,
                n,
                a,
                r,
                o,
                t => {
                    const { from: e, to: s } = t.detail;
                    e !== s &&
                        "item" == e.type &&
                        Ld("itemmove", `${e.slot} ${s.slot}`);
                },
                [
                    [6, 8, 7, 9, 12, 13],
                    [10, 11, 17, 14, 16],
                    [15, 19, 18]
                ],
                c,
                (t, e) => s(0, (l = t)),
                t => s(0, (l = void 0)),
                (t, e) => c(t),
                () => {
                    f(Ke, (n = !1));
                }
            ]
        );
    }
    class wk extends Pt {
        constructor(t) {
            super(), _t(this, t, bk, vk, o, {});
        }
    }
    function xk(t, e, s) {
        const i = t.slice();
        return (i[9] = e[s]), i;
    }
    function kk(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y = t[1]
                ? "Searching..."
                : "Find " + (t[0].membercount < 2 ? "party" : "members"),
            b = t[0].exprate + "",
            w = 0 === t[0].membercount ? "" : "/" + t[0].nearby,
            x = t[0].itemfind + "",
            M = [],
            T = new Map();
        function _(t, e) {
            return 0 === t[0].membercount ? Sk : $k;
        }
        let I = _(t),
            A = I(t),
            R = t[3];
        const B = t => t[9].name;
        for (let e = 0; e < R.length; e += 1) {
            let s = xk(t, R, e),
                i = B(s);
            T.set(i, (M[e] = Mk(i, s)));
        }
        return {
            c() {
                (e = E("div")),
                    ((s = E("div")).textContent = "Party"),
                    ((i = E("div")).textContent = "Queue"),
                    (n = E("div")),
                    (r = C(y)),
                    A.c(),
                    (l = E("div")),
                    (c = C(b)),
                    (h = C("% EXP")),
                    (d = C(w)),
                    (u = E("div")),
                    (m = C(x)),
                    (p = C("% FIND")),
                    (f = E("div"));
                for (let t = 0; t < M.length; t += 1) M[t].c();
                U(s, "class", "btn party"),
                    U(i, "class", "btn purp"),
                    U(n, "id", "partybtn"),
                    U(
                        n,
                        "class",
                        (o =
                            "btn border green " +
                            (t[1] ? "active" : "") +
                            " textwhite")
                    ),
                    U(l, "class", "btn border grey disabled textexp"),
                    U(u, "class", "btn border grey disabled textcyan"),
                    U(e, "class", "btnbar"),
                    U(f, "class", "partyframes svelte-1xmlhk"),
                    D(f, "width", t[2] + "px"),
                    (v = [
                        P(s, "click", t[5]),
                        P(i, "click", t[6]),
                        P(n, "click", t[7])
                    ]);
            },
            m(t, a) {
                $(t, e, a),
                    k(e, s),
                    k(e, i),
                    k(e, n),
                    k(n, r),
                    A.m(e, null),
                    k(e, l),
                    k(l, c),
                    k(l, h),
                    k(l, d),
                    k(e, u),
                    k(u, m),
                    k(u, p),
                    $(t, f, a);
                for (let t = 0; t < M.length; t += 1) M[t].m(f, null);
                g = !0;
            },
            p(t, s) {
                (!g || 3 & s) &&
                    y !==
                        (y = t[1]
                            ? "Searching..."
                            : "Find " +
                              (t[0].membercount < 2 ? "party" : "members")) &&
                    z(r, y),
                    (!g ||
                        (2 & s &&
                            o !==
                                (o =
                                    "btn border green " +
                                    (t[1] ? "active" : "") +
                                    " textwhite"))) &&
                        U(n, "class", o),
                    I === (I = _(t)) && A
                        ? A.p(t, s)
                        : (A.d(1), (A = I(t)) && (A.c(), A.m(e, l))),
                    (!g || 1 & s) && b !== (b = t[0].exprate + "") && z(c, b),
                    (!g || 1 & s) &&
                        w !==
                            (w =
                                0 === t[0].membercount
                                    ? ""
                                    : "/" + t[0].nearby) &&
                        z(d, w),
                    (!g || 1 & s) && x !== (x = t[0].itemfind + "") && z(m, x);
                const i = t[3];
                ft(),
                    (M = St(M, s, B, 1, t, i, T, f, $t, Mk, null, xk)),
                    gt(),
                    (!g || 4 & s) && D(f, "width", t[2] + "px");
            },
            i(t) {
                if (!g) {
                    for (let t = 0; t < R.length; t += 1) vt(M[t]);
                    g = !0;
                }
            },
            o(t) {
                for (let t = 0; t < M.length; t += 1) yt(M[t]);
                g = !1;
            },
            d(t) {
                t && S(e), A.d(), t && S(f);
                for (let t = 0; t < M.length; t += 1) M[t].d();
                a(v);
            }
        };
    }
    function $k(t) {
        let e,
            s,
            i,
            n,
            a = t[0].nearby + "",
            r = t[0].membercount + "";
        return {
            c() {
                (e = E("div")),
                    (s = C(a)),
                    (i = C("/")),
                    (n = C(r)),
                    U(e, "class", "btn border grey disabled textwhite");
            },
            m(t, a) {
                $(t, e, a), k(e, s), k(e, i), k(e, n);
            },
            p(t, e) {
                1 & e && a !== (a = t[0].nearby + "") && z(s, a),
                    1 & e && r !== (r = t[0].membercount + "") && z(n, r);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Sk(e) {
        let s;
        return {
            c() {
                ((s = E("div")).textContent = "No party"),
                    U(s, "class", "btn border grey disabled textgrey");
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function Mk(t, e) {
        let s, i;
        const n = new rv({
            props: { mode: "party", unit: e[9].store, buffcount: e[4] }
        });
        return {
            key: t,
            first: null,
            c() {
                (s = _()), Et(n.$$.fragment), (this.first = s);
            },
            m(t, e) {
                $(t, s, e), Ct(n, t, e), (i = !0);
            },
            p(t, e) {
                const s = {};
                8 & e && (s.unit = t[9].store),
                    16 & e && (s.buffcount = t[4]),
                    n.$set(s);
            },
            i(t) {
                i || (vt(n.$$.fragment, t), (i = !0));
            },
            o(t) {
                yt(n.$$.fragment, t), (i = !1);
            },
            d(t) {
                t && S(s), Tt(n, t);
            }
        };
    }
    function Ek(t) {
        let e,
            s,
            i = t[0] && kk(t);
        return {
            c() {
                (e = E("div")),
                    i && i.c(),
                    U(e, "class", "l-corner-ul uiscaled");
            },
            m(t, n) {
                $(t, e, n), i && i.m(e, null), (s = !0);
            },
            p(t, [s]) {
                t[0]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = kk(t)).c(), vt(i, 1), i.m(e, null))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                t && S(e), i && i.d();
            }
        };
    }
    function Ck(t, e, s) {
        let i, n, a, r;
        h(t, At, t => s(0, (i = t))),
            h(t, ys, t => s(2, (n = t))),
            h(t, Dt, t => s(3, (a = t))),
            h(t, ks, t => s(4, (r = t)));
        const o = () => Ld(l ? "stopqueue" : "startqueue", "memberfind");
        let l;
        return (
            (t.$$.update = () => {
                1 & t.$$.dirty &&
                    s(1, (l = i.queues && i.queues.indexOf("memberfind") >= 0));
            }),
            [
                i,
                l,
                n,
                a,
                r,
                t => {
                    const e = [
                        i.membercount ? Fg.partyleave() : Fg.partycreate()
                    ];
                    Rt.set({ x: t.pageX, y: t.pageY, opts: e });
                },
                t => {
                    const e = [];
                    if (0 == i.membercount)
                        e.push({ css: "disabled", name: "Party required" });
                    else
                        for (let t in Bg)
                            if (Bg[t].queue) {
                                const s =
                                    void 0 === Bg[t].groupsize ||
                                    Bg[t].groupsize === i.membercount;
                                e.push(
                                    i.queues.indexOf(t) < 0
                                        ? Fg.startqueue(t, s)
                                        : Fg.stopqueue(t, s)
                                );
                            }
                    Rt.set({ x: t.pageX, y: t.pageY, opts: e });
                },
                () => {
                    Lf(31, 100),
                        l || 0 !== i.membercount
                            ? o()
                            : (Ld("partycreate", ""), setTimeout(o, 1e3));
                }
            ]
        );
    }
    class Tk extends Pt {
        constructor(t) {
            super(), _t(this, t, Ck, Ek, o, {});
        }
    }
    function _k(t) {
        let e;
        return {
            c() {
                U((e = E("div")), "class", "pattern svelte-16344pz");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Pk(t) {
        let e, s;
        const i = new wg({
            props: {
                size: "0.8em",
                fract: t[0],
                barcol: "bgexp",
                left: t[1],
                right: `${t[0]}%`,
                $$slots: { default: [_k] },
                $$scope: { ctx: t }
            }
        });
        return {
            c() {
                (e = E("div")),
                    Et(i.$$.fragment),
                    U(e, "id", "expbar"),
                    U(e, "class", "container svelte-16344pz");
            },
            m(t, n) {
                $(t, e, n), Ct(i, e, null), (s = !0);
            },
            p(t, [e]) {
                const s = {};
                1 & e && (s.fract = t[0]),
                    2 & e && (s.left = t[1]),
                    1 & e && (s.right = `${t[0]}%`),
                    8 & e && (s.$$scope = { dirty: e, ctx: t }),
                    i.$set(s);
            },
            i(t) {
                s || (vt(i.$$.fragment, t), (s = !0));
            },
            o(t) {
                yt(i.$$.fragment, t), (s = !1);
            },
            d(t) {
                t && S(e), Tt(i);
            }
        };
    }
    function Uk(t, e, s) {
        let i, n, a;
        return (
            h(t, se, t => s(2, (i = t))),
            (t.$$.update = () => {
                4 & t.$$.dirty &&
                    (s(0, (n = ((100 * i.current) / i.max).toFixed(2))),
                    s(1, (a = `${qg(i.current)} / ${qg(i.max)} EXP`)));
            }),
            [n, a]
        );
    }
    class Ik extends Pt {
        constructor(t) {
            super(), _t(this, t, Uk, Pk, o, {});
        }
    }
    function zk(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l = t[5].msg + "",
            c = (t[5].fixed || t[5].step || t[5].fixed) && Ak(t),
            h = t[5].click && Dk(t);
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    c && c.c(),
                    (i = _()),
                    h && h.c(),
                    U(s, "class", "textprimary msgtext svelte-1trgmuj"),
                    U(
                        e,
                        "class",
                        (n =
                            "msg " +
                            (t[5].complete ? "complete" : "") +
                            " svelte-1trgmuj")
                    ),
                    U(e, "style", (a = t[5].click ? "cursor:pointer;" : "")),
                    (o = P(e, "click", function () {
                        t[7].apply(this, arguments);
                    }));
            },
            m(t, n) {
                $(t, e, n),
                    k(e, s),
                    (s.innerHTML = l),
                    c && c.m(e, null),
                    k(e, i),
                    h && h.m(e, null),
                    (r = !0);
            },
            p(o, d) {
                (t = o),
                    (!r || 32 & d) &&
                        l !== (l = t[5].msg + "") &&
                        (s.innerHTML = l),
                    t[5].fixed || t[5].step || t[5].fixed
                        ? c
                            ? (c.p(t, d), vt(c, 1))
                            : ((c = Ak(t)).c(), vt(c, 1), c.m(e, i))
                        : c &&
                          (ft(),
                          yt(c, 1, 1, () => {
                              c = null;
                          }),
                          gt()),
                    t[5].click
                        ? h
                            ? h.p(t, d)
                            : ((h = Dk(t)).c(), h.m(e, null))
                        : h && (h.d(1), (h = null)),
                    (!r ||
                        (32 & d &&
                            n !==
                                (n =
                                    "msg " +
                                    (t[5].complete ? "complete" : "") +
                                    " svelte-1trgmuj"))) &&
                        U(e, "class", n),
                    (!r ||
                        (32 & d &&
                            a !== (a = t[5].click ? "cursor:pointer;" : ""))) &&
                        U(e, "style", a);
            },
            i(t) {
                r || (vt(c), (r = !0));
            },
            o(t) {
                yt(c), (r = !1);
            },
            d(t) {
                t && S(e), c && c.d(), h && h.d(), o();
            }
        };
    }
    function Ak(t) {
        let e;
        const s = new wg({
            props: {
                size: "0.8em",
                fract: t[5].Qj,
                barcol: "bgtut",
                left: "",
                right: Math.ceil(t[5].Qj) + "%"
            }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                32 & e && (i.fract = t[5].Qj),
                    32 & e && (i.right = Math.ceil(t[5].Qj) + "%"),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function Dk(t) {
        let e,
            s,
            i,
            n,
            a,
            r = t[5].fixed || t[5].step || t[5].fixed ? "Skip" : "Next";
        return {
            c() {
                (e = E("div")),
                    ((s = E("a")).textContent = "Disable tutorial"),
                    (i = E("div")),
                    (n = C(r)),
                    U(s, "class", "textgrey"),
                    U(i, "class", "textgreen"),
                    D(e, "display", "flex"),
                    D(e, "justify-content", "space-between"),
                    (a = P(s, "click", t[6]));
            },
            m(t, a) {
                $(t, e, a), k(e, s), k(e, i), k(i, n);
            },
            p(t, e) {
                32 & e &&
                    r !==
                        (r =
                            t[5].fixed || t[5].step || t[5].fixed
                                ? "Skip"
                                : "Next") &&
                    z(n, r);
            },
            d(t) {
                t && S(e), a();
            }
        };
    }
    function Rk(t) {
        let e, s;
        return {
            c() {
                U(
                    (e = E("div")),
                    "class",
                    (s =
                        "border skill tut " +
                        (t[5].complete ? "complete" : "") +
                        " svelte-1trgmuj")
                ),
                    D(e, "top", t[2] + "px"),
                    D(e, "left", t[1] + "px"),
                    D(e, "width", t[3] + "px"),
                    D(e, "height", t[4] + "px");
            },
            m(t, s) {
                $(t, e, s);
            },
            p(t, i) {
                32 & i &&
                    s !==
                        (s =
                            "border skill tut " +
                            (t[5].complete ? "complete" : "") +
                            " svelte-1trgmuj") &&
                    U(e, "class", s),
                    4 & i && D(e, "top", t[2] + "px"),
                    2 & i && D(e, "left", t[1] + "px"),
                    8 & i && D(e, "width", t[3] + "px"),
                    16 & i && D(e, "height", t[4] + "px");
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Bk(t) {
        let e,
            s,
            i,
            n = t[5] && t[5].msg && zk(t),
            a = t[0] && Rk(t);
        return {
            c() {
                n && n.c(), (e = _()), a && a.c(), (s = _());
            },
            m(t, r) {
                n && n.m(t, r),
                    $(t, e, r),
                    a && a.m(t, r),
                    $(t, s, r),
                    (i = !0);
            },
            p(t, [i]) {
                t[5] && t[5].msg
                    ? n
                        ? (n.p(t, i), vt(n, 1))
                        : ((n = zk(t)).c(), vt(n, 1), n.m(e.parentNode, e))
                    : n &&
                      (ft(),
                      yt(n, 1, 1, () => {
                          n = null;
                      }),
                      gt()),
                    t[0]
                        ? a
                            ? a.p(t, i)
                            : ((a = Rk(t)).c(), a.m(s.parentNode, s))
                        : a && (a.d(1), (a = null));
            },
            i(t) {
                i || (vt(n), (i = !0));
            },
            o(t) {
                yt(n), (i = !1);
            },
            d(t) {
                n && n.d(t), t && S(e), a && a.d(t), t && S(s);
            }
        };
    }
    function Fk(t, e, s) {
        let i;
        h(t, le, t => s(5, (i = t)));
        let n,
            a,
            r,
            o,
            l = !1;
        le.subscribe(t => {
            if (t) {
                const e = document.getElementById(t.element);
                if (e) {
                    s(0, (l = !0));
                    const t = e.getBoundingClientRect();
                    s(3, (r = t.width + 10)),
                        s(4, (o = t.height + 10)),
                        s(1, (n = t.x - 5)),
                        s(2, (a = t.y - 5));
                } else s(0, (l = !1));
            } else s(0, (l = !1));
        });
        return [
            l,
            n,
            a,
            r,
            o,
            i,
            t => cs.set(1e3),
            t => {
                i.click && Lf(-1, 100);
            }
        ];
    }
    class Nk extends Pt {
        constructor(t) {
            super(), _t(this, t, Fk, Bk, o, {});
        }
    }
    const Lk = async (t, e, s) => {
            const i = await fetch(t, {
                method: void 0 !== e ? "POST" : "GET",
                body: e ? JSON.stringify(e) : void 0
            });
            return 500 === i.status ? s(await i.text()) : await i.json();
        },
        Ok = t => 50 * Math.round((10 + 5 * t) ** 1.85 / 50),
        qk = t => Math.min(100, 8 + 2 * t),
        Hk = (t, e = 200) => {
            let s = void 0;
            return (i, n) => {
                s && clearTimeout(s),
                    (s = setTimeout(e => t(i), null == n ? e : n));
            };
        };
    function Wk(t, e, s) {
        const i = t.slice();
        return (i[14] = e[s]), (i[16] = s), i;
    }
    function Zk(t) {
        let e,
            s,
            i,
            n = t[1],
            a = [];
        for (let e = 0; e < n.length; e += 1) a[e] = Gk(Wk(t, n, e));
        const r = t =>
            yt(a[t], 1, 1, () => {
                a[t] = null;
            });
        let o = null;
        return (
            n.length || (o = jk()).c(),
            {
                c() {
                    e = E("div");
                    for (let t = 0; t < a.length; t += 1) a[t].c();
                    (s = _()), U(e, "class", "divider svelte-1pxrrpt");
                },
                m(t, n) {
                    $(t, e, n);
                    for (let e = 0; e < a.length; e += 1) a[e].m(t, n);
                    $(t, s, n), o && o.m(t, n), (i = !0);
                },
                p(t, e) {
                    if (74 & e) {
                        let i;
                        for (n = t[1], i = 0; i < n.length; i += 1) {
                            const r = Wk(t, n, i);
                            a[i]
                                ? (a[i].p(r, e), vt(a[i], 1))
                                : ((a[i] = Gk(r)),
                                  a[i].c(),
                                  vt(a[i], 1),
                                  a[i].m(s.parentNode, s));
                        }
                        for (ft(), i = n.length; i < a.length; i += 1) r(i);
                        gt();
                    }
                    n.length
                        ? o && (o.d(1), (o = null))
                        : o || ((o = jk()).c(), o.m(s.parentNode, s));
                },
                i(t) {
                    if (!i) {
                        for (let t = 0; t < n.length; t += 1) vt(a[t]);
                        i = !0;
                    }
                },
                o(t) {
                    a = a.filter(Boolean);
                    for (let t = 0; t < a.length; t += 1) yt(a[t]);
                    i = !1;
                },
                d(t) {
                    t && S(e), M(a, t), t && S(s), o && o.d(t);
                }
            }
        );
    }
    function jk(t) {
        let e;
        return {
            c() {
                ((e = E("div")).textContent = "No results"),
                    U(e, "class", "textgrey result svelte-1pxrrpt");
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function Gk(t) {
        let e, i, n, a;
        const r = [t[14]];
        let o = {};
        for (let t = 0; t < r.length; t += 1) o = s(o, r[t]);
        const l = new Kd({ props: o });
        function c(...e) {
            return t[13](t[16], ...e);
        }
        return {
            c() {
                (e = E("div")),
                    Et(l.$$.fragment),
                    U(
                        e,
                        "class",
                        (i =
                            "result " +
                            (t[16] === t[3] ? "sel" : "") +
                            " svelte-1pxrrpt")
                    ),
                    (a = P(e, "mousedown", c));
            },
            m(t, s) {
                $(t, e, s), Ct(l, e, null), (n = !0);
            },
            p(s, a) {
                t = s;
                const o =
                    2 & a
                        ? (function (t, e) {
                              const s = {},
                                  i = {},
                                  n = { $$scope: 1 };
                              let a = t.length;
                              for (; a--; ) {
                                  const r = t[a],
                                      o = e[a];
                                  if (o) {
                                      for (const t in r) t in o || (i[t] = 1);
                                      for (const t in o)
                                          n[t] || ((s[t] = o[t]), (n[t] = 1));
                                      t[a] = o;
                                  } else for (const t in r) n[t] = 1;
                              }
                              for (const t in i) t in s || (s[t] = void 0);
                              return s;
                          })(r, [
                              ((c = t[14]),
                              "object" == typeof c && null !== c ? c : {})
                          ])
                        : {};
                var c;
                l.$set(o),
                    (!n ||
                        (8 & a &&
                            i !==
                                (i =
                                    "result " +
                                    (t[16] === t[3] ? "sel" : "") +
                                    " svelte-1pxrrpt"))) &&
                        U(e, "class", i);
            },
            i(t) {
                n || (vt(l.$$.fragment, t), (n = !0));
            },
            o(t) {
                yt(l.$$.fragment, t), (n = !1);
            },
            d(t) {
                t && S(e), Tt(l), a();
            }
        };
    }
    function Vk(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l = t[2] && Zk(t);
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    (i = E("input")),
                    l && l.c(),
                    U(i, "placeholder", "Enter player name"),
                    U(i, "type", "text"),
                    U(i, "class", "svelte-1pxrrpt"),
                    U(
                        s,
                        "class",
                        (n =
                            "container input " +
                            (t[2] ? "focus" : "") +
                            " svelte-1pxrrpt")
                    ),
                    U(e, "class", "navbtn wrapper svelte-1pxrrpt"),
                    (o = [
                        P(i, "input", t[9]),
                        P(i, "input", t[5]),
                        P(i, "focus", function () {
                            t[11].apply(this, arguments);
                        }),
                        P(i, "blur", function () {
                            t[12].apply(this, arguments);
                        })
                    ]);
            },
            m(n, a) {
                $(n, e, a),
                    k(e, s),
                    k(s, i),
                    A(i, t[0]),
                    t[10](i),
                    l && l.m(s, null),
                    (r = !0);
            },
            p(e, [a]) {
                (t = e),
                    1 & a && i.value !== t[0] && A(i, t[0]),
                    t[2]
                        ? l
                            ? (l.p(t, a), vt(l, 1))
                            : ((l = Zk(t)).c(), vt(l, 1), l.m(s, null))
                        : l &&
                          (ft(),
                          yt(l, 1, 1, () => {
                              l = null;
                          }),
                          gt()),
                    (!r ||
                        (4 & a &&
                            n !==
                                (n =
                                    "container input " +
                                    (t[2] ? "focus" : "") +
                                    " svelte-1pxrrpt"))) &&
                        U(s, "class", n);
            },
            i(t) {
                r || (vt(l), (r = !0));
            },
            o(t) {
                yt(l), (r = !1);
            },
            d(s) {
                s && S(e), t[10](null), l && l.d(), a(o);
            }
        };
    }
    function Yk(t, e, s) {
        const i = Hk(async () => {
            s(
                1,
                (o = await Lk("api/playerinfo/search", {
                    name: r,
                    order: "name"
                }))
            ),
                h(o.findIndex(t => t.name.toLowerCase() == r.toLowerCase()));
        });
        let n,
            a,
            { name: r = "" } = e,
            o = [],
            l = !1,
            c = -1;
        const h = t => {
                s(3, (c = t)), c >= 0 && ((n = o[c]), s(0, (r = n.name)));
            },
            d = t => {
                t.target == a &&
                    ((38 !== t.keyCode && 40 !== t.keyCode) || !o.length
                        ? (13 != t.keyCode && 27 != t.keyCode) || a.blur()
                        : (h(aa(c + (38 === t.keyCode ? -1 : 1), o.length)),
                          t.preventDefault()));
            };
        V(() => {
            document.addEventListener("keydown", d);
        }),
            J(() => {
                document.removeEventListener("keydown", d), s(4, (a = void 0));
            });
        return (
            (t.$set = t => {
                "name" in t && s(0, (r = t.name));
            }),
            [
                r,
                o,
                l,
                c,
                a,
                i,
                h,
                n,
                d,
                function () {
                    (r = this.value), s(0, r);
                },
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(4, (a = t));
                    });
                },
                t => s(2, (l = !0)),
                t => s(2, (l = !1)),
                (t, e) => h(t)
            ]
        );
    }
    class Jk extends Pt {
        constructor(t) {
            super(), _t(this, t, Yk, Vk, o, { name: 0 });
        }
    }
    function Xk(t, e, s) {
        const i = t.slice();
        return (i[24] = e[s]), (i[23] = s), i;
    }
    function Qk(t, e, s) {
        const i = t.slice();
        return (i[21] = e[s]), (i[23] = s), i;
    }
    function Kk(t, e, s) {
        const i = t.slice();
        return (i[26] = e[s]), (i[23] = s), i;
    }
    function t$(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            M,
            T,
            I,
            A,
            D,
            R,
            B,
            F,
            N,
            L,
            O,
            q,
            H,
            W,
            Z,
            j,
            G,
            V,
            Y,
            J,
            X,
            Q,
            K,
            tt,
            et,
            st,
            it,
            nt,
            at,
            rt,
            ot,
            lt,
            ct,
            ht = t[0].tag + "",
            dt = t[0].name + "",
            ut = Wh.factions[t[0].faction].name + "",
            mt = t[0].level + "",
            pt = qk(t[0].level) + "",
            bt = qk(t[0].level + 1) - qk(t[0].level) + "",
            wt = t[0].tax + "",
            xt = t[0].members.length + "",
            kt = `${t[0].online} (+${60 * t[0].online} EXP/h)` + "",
            $t = t[0].fame + "";
        const St = new wg({
                props: {
                    size: "1em",
                    fract: Math.ceil((t[0].exp / Ok(t[0].level)) * 100),
                    barcol: "bgpurp",
                    left: `${t[0].exp} / ${Ok(t[0].level)}`,
                    right: `${Math.ceil((t[0].exp / Ok(t[0].level)) * 100)}%`
                }
            }),
            Mt = new $y({ props: { amount: t[0].gold } });
        let _t = t[0].role > -1 && e$(t),
            Pt = t[0].role > 0 && s$(t),
            Ut = t[0].eligibleApply.length > 0 && i$(t),
            It = t[1] && a$(t),
            zt = t[0].role > 0 && r$(t);
        const At = [l$, o$],
            Dt = [];
        function Rt(t, e) {
            return "members" == t[6] ? 0 : "applications" == t[6] ? 1 : -1;
        }
        return (
            ~(at = Rt(t)) && (rt = Dt[at] = At[at](t)),
            {
                c() {
                    (e = E("div")),
                        (s = E("img")),
                        (n = E("div")),
                        (a = E("div")),
                        (r = E("h1")),
                        (o = C(ht)),
                        (l = E("h3")),
                        (c = C(dt)),
                        (d = E("p")),
                        (u = C(ut)),
                        (m = C(" Clan")),
                        (p = E("div")),
                        Et(St.$$.fragment),
                        (f = E("div")),
                        (g = E("div")),
                        (v = E("div")),
                        ((y = E("span")).textContent = "Clan Level"),
                        (b = E("span")),
                        (w = C(mt)),
                        ((x = E("span")).textContent = "Capacity"),
                        (M = E("span")),
                        (T = C(pt)),
                        ((I = E("span")).textContent = "Next Level"),
                        (A = E("span")),
                        (D = C("+")),
                        (R = C(bt)),
                        (B = C(" Capacity")),
                        ((F = E("span")).textContent = "Tax rate"),
                        (N = E("span")),
                        (L = C(wt)),
                        (O = C("%")),
                        (q = E("div")),
                        (H = E("div")),
                        ((W = E("span")).textContent = "Members"),
                        (Z = E("span")),
                        (j = C(xt)),
                        ((G = E("span")).textContent = "Online"),
                        (V = E("span")),
                        (Y = C(kt)),
                        ((J = E("span")).textContent = "Fame"),
                        (X = E("span")),
                        (Q = C($t)),
                        ((K = E("span")).textContent = "Treasury"),
                        Et(Mt.$$.fragment),
                        _t && _t.c(),
                        (tt = _()),
                        Pt && Pt.c(),
                        (et = _()),
                        Ut && Ut.c(),
                        (st = _()),
                        It && It.c(),
                        (it = E("div")),
                        ((nt = E("div")).textContent = "Members"),
                        zt && zt.c(),
                        rt && rt.c(),
                        (ot = _()),
                        U(s, "class", "helmet absCentered svelte-6t8hqd"),
                        s.src !==
                            (i =
                                "/assets/ui/factions/" +
                                t[0].faction +
                                ".svg?v=35201089") && U(s, "src", i),
                        U(
                            a,
                            "class",
                            (h = "textf" + t[0].faction + " svelte-6t8hqd")
                        ),
                        U(n, "class", "textcenter"),
                        U(e, "class", "hero svelte-6t8hqd"),
                        U(p, "class", "panel-black svelte-6t8hqd"),
                        U(y, "class", "textprimary"),
                        U(x, "class", "textprimary"),
                        U(I, "class", "textprimary"),
                        U(F, "class", "textprimary"),
                        U(v, "class", "panel-black grid two svelte-6t8hqd"),
                        U(W, "class", "textprimary"),
                        U(G, "class", "textprimary"),
                        U(J, "class", "textprimary"),
                        U(K, "class", "textprimary"),
                        U(H, "class", "panel-black grid two svelte-6t8hqd"),
                        U(f, "class", "marg-top grid two"),
                        U(nt, "class", "btn navbtn grey"),
                        U(it, "class", "subnav"),
                        (ct = P(nt, "click", function () {
                            t[17].apply(this, arguments);
                        }));
                },
                m(t, i) {
                    $(t, e, i),
                        k(e, s),
                        k(e, n),
                        k(n, a),
                        k(a, r),
                        k(r, o),
                        k(a, l),
                        k(l, c),
                        k(n, d),
                        k(d, u),
                        k(d, m),
                        $(t, p, i),
                        Ct(St, p, null),
                        $(t, f, i),
                        k(f, g),
                        k(g, v),
                        k(v, y),
                        k(v, b),
                        k(b, w),
                        k(v, x),
                        k(v, M),
                        k(M, T),
                        k(v, I),
                        k(v, A),
                        k(A, D),
                        k(A, R),
                        k(A, B),
                        k(v, F),
                        k(v, N),
                        k(N, L),
                        k(N, O),
                        k(f, q),
                        k(q, H),
                        k(H, W),
                        k(H, Z),
                        k(Z, j),
                        k(H, G),
                        k(H, V),
                        k(V, Y),
                        k(H, J),
                        k(H, X),
                        k(X, Q),
                        k(H, K),
                        Ct(Mt, H, null),
                        _t && _t.m(t, i),
                        $(t, tt, i),
                        Pt && Pt.m(t, i),
                        $(t, et, i),
                        Ut && Ut.m(t, i),
                        $(t, st, i),
                        It && It.m(t, i),
                        $(t, it, i),
                        k(it, nt),
                        zt && zt.m(it, null),
                        ~at && Dt[at].m(t, i),
                        $(t, ot, i),
                        (lt = !0);
                },
                p(e, n) {
                    (t = e),
                        (!lt ||
                            (1 & n &&
                                s.src !==
                                    (i =
                                        "/assets/ui/factions/" +
                                        t[0].faction +
                                        ".svg?v=35201089"))) &&
                            U(s, "src", i),
                        (!lt || 1 & n) &&
                            ht !== (ht = t[0].tag + "") &&
                            z(o, ht),
                        (!lt || 1 & n) &&
                            dt !== (dt = t[0].name + "") &&
                            z(c, dt),
                        (!lt ||
                            (1 & n &&
                                h !==
                                    (h =
                                        "textf" +
                                        t[0].faction +
                                        " svelte-6t8hqd"))) &&
                            U(a, "class", h),
                        (!lt || 1 & n) &&
                            ut !== (ut = Wh.factions[t[0].faction].name + "") &&
                            z(u, ut);
                    const r = {};
                    1 & n &&
                        (r.fract = Math.ceil(
                            (t[0].exp / Ok(t[0].level)) * 100
                        )),
                        1 & n && (r.left = `${t[0].exp} / ${Ok(t[0].level)}`),
                        1 & n &&
                            (r.right = `${Math.ceil(
                                (t[0].exp / Ok(t[0].level)) * 100
                            )}%`),
                        St.$set(r),
                        (!lt || 1 & n) &&
                            mt !== (mt = t[0].level + "") &&
                            z(w, mt),
                        (!lt || 1 & n) &&
                            pt !== (pt = qk(t[0].level) + "") &&
                            z(T, pt),
                        (!lt || 1 & n) &&
                            bt !==
                                (bt =
                                    qk(t[0].level + 1) - qk(t[0].level) + "") &&
                            z(R, bt),
                        (!lt || 1 & n) &&
                            wt !== (wt = t[0].tax + "") &&
                            z(L, wt),
                        (!lt || 1 & n) &&
                            xt !== (xt = t[0].members.length + "") &&
                            z(j, xt),
                        (!lt || 1 & n) &&
                            kt !==
                                (kt =
                                    `${t[0].online} (+${
                                        60 * t[0].online
                                    } EXP/h)` + "") &&
                            z(Y, kt),
                        (!lt || 1 & n) &&
                            $t !== ($t = t[0].fame + "") &&
                            z(Q, $t);
                    const l = {};
                    1 & n && (l.amount = t[0].gold),
                        Mt.$set(l),
                        t[0].role > -1
                            ? _t
                                ? _t.p(t, n)
                                : ((_t = e$(t)).c(), _t.m(tt.parentNode, tt))
                            : _t && (_t.d(1), (_t = null)),
                        t[0].role > 0
                            ? Pt
                                ? (Pt.p(t, n), vt(Pt, 1))
                                : ((Pt = s$(t)).c(),
                                  vt(Pt, 1),
                                  Pt.m(et.parentNode, et))
                            : Pt &&
                              (ft(),
                              yt(Pt, 1, 1, () => {
                                  Pt = null;
                              }),
                              gt()),
                        t[0].eligibleApply.length > 0
                            ? Ut
                                ? Ut.p(t, n)
                                : ((Ut = i$(t)).c(), Ut.m(st.parentNode, st))
                            : Ut && (Ut.d(1), (Ut = null)),
                        t[1]
                            ? It
                                ? It.p(t, n)
                                : ((It = a$(t)).c(), It.m(it.parentNode, it))
                            : It && (It.d(1), (It = null)),
                        t[0].role > 0
                            ? zt
                                ? zt.p(t, n)
                                : ((zt = r$(t)).c(), zt.m(it, null))
                            : zt && (zt.d(1), (zt = null));
                    let d = at;
                    (at = Rt(t)) === d
                        ? ~at && Dt[at].p(t, n)
                        : (rt &&
                              (ft(),
                              yt(Dt[d], 1, 1, () => {
                                  Dt[d] = null;
                              }),
                              gt()),
                          ~at
                              ? ((rt = Dt[at]) || (rt = Dt[at] = At[at](t)).c(),
                                vt(rt, 1),
                                rt.m(ot.parentNode, ot))
                              : (rt = null));
                },
                i(t) {
                    lt ||
                        (vt(St.$$.fragment, t),
                        vt(Mt.$$.fragment, t),
                        vt(Pt),
                        vt(rt),
                        (lt = !0));
                },
                o(t) {
                    yt(St.$$.fragment, t),
                        yt(Mt.$$.fragment, t),
                        yt(Pt),
                        yt(rt),
                        (lt = !1);
                },
                d(t) {
                    t && S(e),
                        t && S(p),
                        Tt(St),
                        t && S(f),
                        Tt(Mt),
                        _t && _t.d(t),
                        t && S(tt),
                        Pt && Pt.d(t),
                        t && S(et),
                        Ut && Ut.d(t),
                        t && S(st),
                        It && It.d(t),
                        t && S(it),
                        zt && zt.d(),
                        ~at && Dt[at].d(t),
                        t && S(ot),
                        ct();
                }
            }
        );
    }
    function e$(t) {
        let e,
            s,
            i,
            n,
            a = Wh.ui.clan.roles[t[0].role] + "";
        return {
            c() {
                (e = E("div")),
                    ((s = E("span")).textContent = "Your highest rank: "),
                    (i = E("span")),
                    (n = C(a)),
                    U(s, "class", "textprimary"),
                    U(i, "class", "textgreen"),
                    U(e, "class", "marg-top panel-black svelte-6t8hqd");
            },
            m(t, a) {
                $(t, e, a), k(e, s), k(e, i), k(i, n);
            },
            p(t, e) {
                1 & e &&
                    a !== (a = Wh.ui.clan.roles[t[0].role] + "") &&
                    z(n, a);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function s$(t) {
        let e, s, i, n, a, r, o, l, c;
        function h(e) {
            t[15].call(null, e);
        }
        let d = {};
        void 0 !== t[4] && (d.name = t[4]);
        const u = new Jk({ props: d });
        return (
            tt.push(() => Mt(u, "name", h)),
            {
                c() {
                    (e = E("div")),
                        ((s = E("span")).textContent = "Invite players"),
                        (i = E("div")),
                        Et(u.$$.fragment),
                        (a = E("div")),
                        (r = C("Invite player")),
                        U(s, "class", "textgrey"),
                        U(
                            a,
                            "class",
                            (o =
                                "btn formatted navbtn grey " +
                                (t[3] || !t[4].length ? "disabled" : ""))
                        ),
                        U(i, "class", "subnav"),
                        U(e, "class", "marg-top panel-black svelte-6t8hqd"),
                        (c = P(a, "click", t[8]));
                },
                m(t, n) {
                    $(t, e, n),
                        k(e, s),
                        k(e, i),
                        Ct(u, i, null),
                        k(i, a),
                        k(a, r),
                        (l = !0);
                },
                p(t, e) {
                    const s = {};
                    !n &&
                        16 & e &&
                        ((n = !0), (s.name = t[4]), lt(() => (n = !1))),
                        u.$set(s),
                        (!l ||
                            (24 & e &&
                                o !==
                                    (o =
                                        "btn formatted navbtn grey " +
                                        (t[3] || !t[4].length
                                            ? "disabled"
                                            : "")))) &&
                            U(a, "class", o);
                },
                i(t) {
                    l || (vt(u.$$.fragment, t), (l = !0));
                },
                o(t) {
                    yt(u.$$.fragment, t), (l = !1);
                },
                d(t) {
                    t && S(e), Tt(u), c();
                }
            }
        );
    }
    function i$(t) {
        let e,
            s,
            i,
            n,
            r,
            o,
            l,
            c,
            h = t[0].eligibleApply,
            d = [];
        for (let e = 0; e < h.length; e += 1) d[e] = n$(Kk(t, h, e));
        return {
            c() {
                (e = E("div")),
                    ((s = E("span")).textContent =
                        "Apply to clan (request invitation)"),
                    (i = E("div")),
                    (n = E("select"));
                for (let t = 0; t < d.length; t += 1) d[t].c();
                (r = E("div")),
                    (o = C("Apply")),
                    U(s, "class", "textgrey"),
                    U(n, "class", "navbtn"),
                    void 0 === t[5] && ot(() => t[16].call(n)),
                    U(
                        r,
                        "class",
                        (l =
                            "btn formatted navbtn grey " +
                            (t[3] || !t[5].length ? "disabled" : ""))
                    ),
                    U(i, "class", "subnav"),
                    U(e, "class", "marg-top panel-black svelte-6t8hqd"),
                    (c = [P(n, "change", t[16]), P(r, "click", t[9])]);
            },
            m(a, l) {
                $(a, e, l), k(e, s), k(e, i), k(i, n);
                for (let t = 0; t < d.length; t += 1) d[t].m(n, null);
                R(n, t[5]), k(i, r), k(r, o);
            },
            p(t, e) {
                if (33 & e) {
                    let s;
                    for (h = t[0].eligibleApply, s = 0; s < h.length; s += 1) {
                        const i = Kk(t, h, s);
                        d[s]
                            ? d[s].p(i, e)
                            : ((d[s] = n$(i)), d[s].c(), d[s].m(n, null));
                    }
                    for (; s < d.length; s += 1) d[s].d(1);
                    d.length = h.length;
                }
                32 & e && R(n, t[5]),
                    40 & e &&
                        l !==
                            (l =
                                "btn formatted navbtn grey " +
                                (t[3] || !t[5].length ? "disabled" : "")) &&
                        U(r, "class", l);
            },
            d(t) {
                t && S(e), M(d, t), a(c);
            }
        };
    }
    function n$(t) {
        let e,
            s,
            i,
            n,
            a = t[26] + "";
        return {
            c() {
                (e = E("option")),
                    (s = C(a)),
                    (e.selected = i = t[5] == t[26]),
                    (e.__value = n = t[26]),
                    (e.value = e.__value);
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, r) {
                1 & r && a !== (a = t[26] + "") && z(s, a),
                    33 & r && i !== (i = t[5] == t[26]) && (e.selected = i),
                    1 & r && n !== (n = t[26]) && (e.__value = n),
                    (e.value = e.__value);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function a$(t) {
        let e, s, i, n, a;
        return {
            c() {
                (e = E("div")),
                    (s = E("span")),
                    (i = C(t[1])),
                    U(s, "class", (n = "text" + t[2] + " svelte-6t8hqd")),
                    U(
                        e,
                        "class",
                        (a =
                            "marg-top panel-black border " +
                            t[2] +
                            " svelte-6t8hqd")
                    );
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(s, i);
            },
            p(t, r) {
                2 & r && z(i, t[1]),
                    4 & r &&
                        n !== (n = "text" + t[2] + " svelte-6t8hqd") &&
                        U(s, "class", n),
                    4 & r &&
                        a !==
                            (a =
                                "marg-top panel-black border " +
                                t[2] +
                                " svelte-6t8hqd") &&
                        U(e, "class", a);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function r$(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = t[0].applications.length + "";
        return {
            c() {
                (e = E("div")),
                    (s = C("Applications (")),
                    (i = C(o)),
                    (n = C(")")),
                    (a = T()),
                    U(e, "class", "btn navbtn grey"),
                    (r = P(e, "click", function () {
                        t[18].apply(this, arguments);
                    }));
            },
            m(t, r) {
                $(t, e, r), k(e, s), k(e, i), k(e, n), $(t, a, r);
            },
            p(e, s) {
                (t = e),
                    1 & s &&
                        o !== (o = t[0].applications.length + "") &&
                        z(i, o);
            },
            d(t) {
                t && S(e), t && S(a), r();
            }
        };
    }
    function o$(t) {
        let e,
            s,
            i,
            n,
            a,
            r = [],
            o = new Map(),
            l = t[0].applications;
        const c = t => t[24].name;
        for (let e = 0; e < l.length; e += 1) {
            let s = Xk(t, l, e),
                i = c(s);
            o.set(i, (r[e] = c$(i, s)));
        }
        return {
            c() {
                ((e = E("div")).textContent =
                    "This is a list of active applications to your clan. Right click to accept an application and invite the player to your clan"),
                    (s = E("table")),
                    ((i = E("thead")).innerHTML =
                        '<tr class="textprimary"><th width="70%">Player</th></tr>'),
                    (n = E("tbody"));
                for (let t = 0; t < r.length; t += 1) r[t].c();
                U(e, "class", "marg-top textgrey"),
                    U(s, "class", "marg-top panel-black svelte-6t8hqd");
            },
            m(t, o) {
                $(t, e, o), $(t, s, o), k(s, i), k(s, n);
                for (let t = 0; t < r.length; t += 1) r[t].m(n, null);
                a = !0;
            },
            p(t, e) {
                const s = t[0].applications;
                ft(), (r = St(r, e, c, 1, t, s, o, n, $t, c$, null, Xk)), gt();
            },
            i(t) {
                if (!a) {
                    for (let t = 0; t < l.length; t += 1) vt(r[t]);
                    a = !0;
                }
            },
            o(t) {
                for (let t = 0; t < r.length; t += 1) yt(r[t]);
                a = !1;
            },
            d(t) {
                t && S(e), t && S(s);
                for (let t = 0; t < r.length; t += 1) r[t].d();
            }
        };
    }
    function l$(t) {
        let e,
            s,
            i,
            n,
            a,
            r = [],
            o = new Map(),
            l = t[0].members;
        const c = t => t[21].name;
        for (let e = 0; e < l.length; e += 1) {
            let s = Qk(t, l, e),
                i = c(s);
            o.set(i, (r[e] = h$(i, s)));
        }
        return {
            c() {
                ((e = E("div")).textContent =
                    "This is a list of active members of this clan. Right click the members for additional options."),
                    (s = E("table")),
                    ((i = E("thead")).innerHTML =
                        '<tr class="textprimary"><th width="70%">Member</th><th>Rank</th></tr>'),
                    (n = E("tbody"));
                for (let t = 0; t < r.length; t += 1) r[t].c();
                U(e, "class", "marg-top textgrey"),
                    U(s, "class", "marg-top panel-black svelte-6t8hqd");
            },
            m(t, o) {
                $(t, e, o), $(t, s, o), k(s, i), k(s, n);
                for (let t = 0; t < r.length; t += 1) r[t].m(n, null);
                a = !0;
            },
            p(t, e) {
                const s = t[0].members;
                ft(), (r = St(r, e, c, 1, t, s, o, n, $t, h$, null, Qk)), gt();
            },
            i(t) {
                if (!a) {
                    for (let t = 0; t < l.length; t += 1) vt(r[t]);
                    a = !0;
                }
            },
            o(t) {
                for (let t = 0; t < r.length; t += 1) yt(r[t]);
                a = !1;
            },
            d(t) {
                t && S(e), t && S(s);
                for (let t = 0; t < r.length; t += 1) r[t].d();
            }
        };
    }
    function c$(t, e) {
        let s, i, n, a;
        const r = new Kd({
            props: {
                name: e[24].name,
                pclass: e[24].class,
                level: e[24].level,
                faction: e[0].faction
            }
        });
        function o(...t) {
            return e[20](e[24], ...t);
        }
        return {
            key: t,
            first: null,
            c() {
                (s = E("tr")),
                    (i = E("td")),
                    Et(r.$$.fragment),
                    U(s, "class", "striped"),
                    (a = P(s, "mousedown", function () {
                        o.apply(this, arguments);
                    })),
                    (this.first = s);
            },
            m(t, e) {
                $(t, s, e), k(s, i), Ct(r, i, null), (n = !0);
            },
            p(t, s) {
                e = t;
                const i = {};
                1 & s && (i.name = e[24].name),
                    1 & s && (i.pclass = e[24].class),
                    1 & s && (i.level = e[24].level),
                    1 & s && (i.faction = e[0].faction),
                    r.$set(i);
            },
            i(t) {
                n || (vt(r.$$.fragment, t), (n = !0));
            },
            o(t) {
                yt(r.$$.fragment, t), (n = !1);
            },
            d(t) {
                t && S(s), Tt(r), a();
            }
        };
    }
    function h$(t, e) {
        let s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u = e[21].online ? "⬤" : "",
            m = e[21].owned ? "⭐" : "",
            p = Wh.ui.clan.roles[e[21].clanrole] + "";
        const f = new Kd({
            props: {
                name: e[21].name,
                pclass: e[21].class,
                level: e[21].level,
                faction: e[0].faction
            }
        });
        function g(...t) {
            return e[19](e[21], ...t);
        }
        return {
            key: t,
            first: null,
            c() {
                (s = E("tr")),
                    (i = E("td")),
                    Et(f.$$.fragment),
                    (n = E("span")),
                    (a = C(u)),
                    (r = C(m)),
                    (o = E("td")),
                    (l = C(p)),
                    U(n, "class", "textgreen"),
                    U(
                        s,
                        "class",
                        (c =
                            "striped " +
                            (e[21].online ? "" : "offline") +
                            " svelte-6t8hqd")
                    ),
                    (d = P(s, "mousedown", function () {
                        g.apply(this, arguments);
                    })),
                    (this.first = s);
            },
            m(t, e) {
                $(t, s, e),
                    k(s, i),
                    Ct(f, i, null),
                    k(i, n),
                    k(n, a),
                    k(n, r),
                    k(s, o),
                    k(o, l),
                    (h = !0);
            },
            p(t, i) {
                e = t;
                const n = {};
                1 & i && (n.name = e[21].name),
                    1 & i && (n.pclass = e[21].class),
                    1 & i && (n.level = e[21].level),
                    1 & i && (n.faction = e[0].faction),
                    f.$set(n),
                    (!h || 1 & i) &&
                        u !== (u = e[21].online ? "⬤" : "") &&
                        z(a, u),
                    (!h || 1 & i) &&
                        m !== (m = e[21].owned ? "⭐" : "") &&
                        z(r, m),
                    (!h || 1 & i) &&
                        p !== (p = Wh.ui.clan.roles[e[21].clanrole] + "") &&
                        z(l, p),
                    (!h ||
                        (1 & i &&
                            c !==
                                (c =
                                    "striped " +
                                    (e[21].online ? "" : "offline") +
                                    " svelte-6t8hqd"))) &&
                        U(s, "class", c);
            },
            i(t) {
                h || (vt(f.$$.fragment, t), (h = !0));
            },
            o(t) {
                yt(f.$$.fragment, t), (h = !1);
            },
            d(t) {
                t && S(s), Tt(f), d();
            }
        };
    }
    function d$(t) {
        let e,
            s,
            i = t[0] && t$(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[0]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = t$(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function u$(t, e, s) {
        let i,
            n,
            { tag: a } = e;
        const r = async () => {
            const t = await Lk("/api/claninfo/info", { tag: a });
            t.name &&
                (s(0, (i = t)),
                i.eligibleApply.length && s(5, (m = i.eligibleApply[0])),
                s(0, (i.online = i.members.filter(t => t.online).length), i)),
                n && (clearTimeout(n), (n = setTimeout(r, 5e3)));
        };
        (n = !0),
            r(),
            J(() => {
                clearTimeout(n), (n = void 0);
            });
        const o = (t, e) => {
            const s = [];
            e.owned
                ? s.push({
                      name: "Leave clan",
                      fun: async () => {
                          d(
                              await Lk("/api/clan/leave", { name: e.name }),
                              "Left the clan"
                          );
                      }
                  })
                : e.clanrole < i.role &&
                  s.push({
                      name: "Kick member",
                      fun: async () => {
                          d(
                              await Lk("/api/clan/kick", { name: e.name }),
                              "Member kicked"
                          );
                      }
                  });
            for (let t = 0; t < (3 == i.role ? 4 : i.role); t++)
                s.push({
                    name: "Set rank: " + Wh.ui.clan.roles[t],
                    fun: async () => {
                        d(
                            await Lk("/api/clan/setrole", {
                                name: e.name,
                                role: t
                            }),
                            "Set rank: " + Wh.ui.clan.roles[t]
                        );
                    }
                });
            Rt.set({ x: t.pageX, y: t.pageY, opts: s });
        };
        let l,
            c,
            h = !1;
        const d = async (t, e) => {
            "ok" !== t.result
                ? (s(1, (l = t.result)), s(2, (c = "red")))
                : (s(1, (l = e)), s(2, (c = "green"))),
                await r(),
                s(3, (h = !1));
        };
        let u = "";
        let m = "";
        const p = (t, e) => {
            const s = [];
            i.role > 0 &&
                s.push({
                    name: "Accept application",
                    fun: async () => {
                        d(
                            await Lk("/api/clan/acceptapplication", {
                                id: e.id
                            }),
                            "Accepted application"
                        );
                    }
                }),
                i.role > 1 &&
                    s.push({
                        name: "Deny application",
                        fun: async () => {
                            d(
                                await Lk("/api/clan/denyapplication", {
                                    id: e.id
                                }),
                                "Denied application"
                            );
                        }
                    }),
                Rt.set({ x: t.pageX, y: t.pageY, opts: s });
        };
        let f = "members";
        return (
            (t.$set = t => {
                "tag" in t && s(11, (a = t.tag));
            }),
            [
                i,
                l,
                c,
                h,
                u,
                m,
                f,
                o,
                async () => {
                    s(3, (h = !0)),
                        d(
                            await Lk("/api/clan/invite", { name: u, tag: a }),
                            u + " invited"
                        ),
                        s(4, (u = ""));
                },
                async () => {
                    s(3, (h = !0)),
                        d(
                            await Lk("/api/clan/apply", { name: m, tag: a }),
                            "Applied to clan"
                        ),
                        s(5, (m = ""));
                },
                p,
                a,
                n,
                r,
                d,
                function (t) {
                    s(4, (u = t));
                },
                function () {
                    (m = B(this)), s(5, m), s(0, i);
                },
                t => s(6, (f = "members")),
                t => s(6, (f = "applications")),
                (t, e) => o(e, t),
                (t, e) => p(e, t)
            ]
        );
    }
    class m$ extends Pt {
        constructor(t) {
            super(), _t(this, t, u$, d$, o, { tag: 11 });
        }
    }
    function p$(t) {
        let e, s, i, n, r, o, l, c, h, d, u, m, p, f, g;
        const v = new $y({ props: { amount: 1e4 } });
        return {
            c() {
                ((e = E("h3")).textContent = "Create clan"),
                    ((s = E("label")).textContent = "Clan name"),
                    (i = E("input")),
                    ((n = E("label")).textContent = "Clan tag"),
                    (r = E("input")),
                    (o = E("p")),
                    (l = C("Cost: ")),
                    Et(v.$$.fragment),
                    (h = E("div")),
                    (d = C(t[2])),
                    (u = E("div")),
                    (m = C("Create")),
                    U(e, "class", "textprimary"),
                    U(s, "class", "svelte-7uvqsx"),
                    U(i, "type", "text"),
                    U(i, "placeholder", "Guardians of Guardstone (a-Z)"),
                    U(i, "maxlength", "20"),
                    U(n, "class", "svelte-7uvqsx"),
                    U(r, "type", "text"),
                    U(r, "placeholder", "GoG (a-Z !~=#*+-)"),
                    U(r, "maxlength", "4"),
                    U(
                        o,
                        "class",
                        (c = "text" + (t[4] > 1e4 ? "primary" : "red"))
                    ),
                    U(h, "class", "textred"),
                    D(u, "display", "inline-block"),
                    U(
                        u,
                        "class",
                        (p =
                            "btn marg-top formatted " +
                            (t[3] ? "blue" : "blue disabled"))
                    ),
                    (g = [
                        P(i, "input", t[7]),
                        P(r, "input", t[8]),
                        P(u, "click", t[5])
                    ]);
            },
            m(a, c) {
                $(a, e, c),
                    $(a, s, c),
                    $(a, i, c),
                    A(i, t[0]),
                    $(a, n, c),
                    $(a, r, c),
                    A(r, t[1]),
                    $(a, o, c),
                    k(o, l),
                    Ct(v, o, null),
                    $(a, h, c),
                    k(h, d),
                    $(a, u, c),
                    k(u, m),
                    (f = !0);
            },
            p(t, [e]) {
                1 & e && i.value !== t[0] && A(i, t[0]),
                    2 & e && r.value !== t[1] && A(r, t[1]),
                    (!f ||
                        (16 & e &&
                            c !==
                                (c =
                                    "text" +
                                    (t[4] > 1e4 ? "primary" : "red")))) &&
                        U(o, "class", c),
                    (!f || 4 & e) && z(d, t[2]),
                    (!f ||
                        (8 & e &&
                            p !==
                                (p =
                                    "btn marg-top formatted " +
                                    (t[3] ? "blue" : "blue disabled")))) &&
                        U(u, "class", p);
            },
            i(t) {
                f || (vt(v.$$.fragment, t), (f = !0));
            },
            o(t) {
                yt(v.$$.fragment, t), (f = !1);
            },
            d(t) {
                t && S(e),
                    t && S(s),
                    t && S(i),
                    t && S(n),
                    t && S(r),
                    t && S(o),
                    Tt(v),
                    t && S(h),
                    t && S(u),
                    a(g);
            }
        };
    }
    function f$(t, e, s) {
        let i;
        h(t, Jt, t => s(4, (i = t)));
        let n = "",
            a = "",
            r = !1,
            o = "";
        let l;
        return (
            (t.$$.update = () => {
                83 & t.$$.dirty &&
                    s(
                        3,
                        (l =
                            !r &&
                            i >= 1e4 &&
                            n.length <= 20 &&
                            n.length >= 3 &&
                            a.length <= 4 &&
                            a.length >= 2)
                    );
            }),
            [
                n,
                a,
                o,
                l,
                i,
                async () => {
                    if (r) return;
                    s(6, (r = !0));
                    const t = await Lk("/api/clan/create", { name: n, tag: a });
                    "ok" !== t.result && (s(2, (o = t.result)), s(6, (r = !1)));
                },
                r,
                function () {
                    (n = this.value), s(0, n);
                },
                function () {
                    (a = this.value), s(1, a);
                }
            ]
        );
    }
    class g$ extends Pt {
        constructor(t) {
            super(), _t(this, t, f$, p$, o, {});
        }
    }
    function v$(t, e, s) {
        const i = t.slice();
        return (i[4] = e[s]), (i[6] = s), i;
    }
    function y$(t) {
        let e,
            s = [],
            i = new Map(),
            n = t[0];
        const a = t => t[4].clan;
        for (let e = 0; e < n.length; e += 1) {
            let r = v$(t, n, e),
                o = a(r);
            i.set(o, (s[e] = x$(o, r)));
        }
        return {
            c() {
                for (let t = 0; t < s.length; t += 1) s[t].c();
                e = _();
            },
            m(t, i) {
                for (let e = 0; e < s.length; e += 1) s[e].m(t, i);
                $(t, e, i);
            },
            p(t, n) {
                const r = t[0];
                s = St(s, n, a, 1, t, r, i, e.parentNode, kt, x$, e, v$);
            },
            d(t) {
                for (let e = 0; e < s.length; e += 1) s[e].d(t);
                t && S(e);
            }
        };
    }
    function b$(t) {
        let e, s;
        function i(...e) {
            return t[3](t[4], ...e);
        }
        return {
            c() {
                ((e = E("div")).textContent = "Accept"),
                    U(e, "class", "btn blue"),
                    (s = P(e, "click", function () {
                        i.apply(this, arguments);
                    }));
            },
            m(t, s) {
                $(t, e, s);
            },
            p(e, s) {
                t = e;
            },
            d(t) {
                t && S(e), s();
            }
        };
    }
    function w$(e) {
        let s;
        return {
            c() {
                (s = E("div")).textContent = "Application";
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function x$(t, e) {
        let s,
            i,
            n,
            a,
            r,
            o,
            l = e[4].tag + "",
            c = e[4].name + "";
        function h(t, e) {
            return t[4].request ? w$ : b$;
        }
        let d = h(e),
            u = d(e);
        return {
            key: t,
            first: null,
            c() {
                (s = E("tr")),
                    (i = E("td")),
                    (n = C(l)),
                    (a = E("td")),
                    (r = C(c)),
                    (o = E("td")),
                    u.c(),
                    U(s, "class", "striped"),
                    (this.first = s);
            },
            m(t, e) {
                $(t, s, e),
                    k(s, i),
                    k(i, n),
                    k(s, a),
                    k(a, r),
                    k(s, o),
                    u.m(o, null);
            },
            p(t, e) {
                1 & e && l !== (l = t[4].tag + "") && z(n, l),
                    1 & e && c !== (c = t[4].name + "") && z(r, c),
                    d === (d = h(t)) && u
                        ? u.p(t, e)
                        : (u.d(1), (u = d(t)) && (u.c(), u.m(o, null)));
            },
            d(t) {
                t && S(s), u.d();
            }
        };
    }
    function k$(e) {
        let s,
            i,
            n,
            a = e[0] && y$(e);
        return {
            c() {
                (s = E("table")),
                    ((i = E("thead")).innerHTML =
                        '<tr class="textprimary"><th width="20%">Tag</th><th width="60%">Clan Name</th><th>Action</th></tr>'),
                    (n = E("tbody")),
                    a && a.c(),
                    U(s, "class", "marg-top panel-black");
            },
            m(t, e) {
                $(t, s, e), k(s, i), k(s, n), a && a.m(n, null);
            },
            p(t, [e]) {
                t[0]
                    ? a
                        ? a.p(t, e)
                        : ((a = y$(t)).c(), a.m(n, null))
                    : a && (a.d(1), (a = null));
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), a && a.d();
            }
        };
    }
    function $$(t, e, s) {
        let i;
        const n = async () => {
            s(0, (i = await Lk("/api/clan/invites", { name: Wn.player.name })));
        };
        n();
        const a = async t => {
            await Lk("/api/clan/acceptinvite", { id: t });
        };
        return [i, a, n, (t, e) => a(t.id)];
    }
    class S$ extends Pt {
        constructor(t) {
            super(), _t(this, t, $$, k$, o, {});
        }
    }
    function M$(t) {
        let e, s;
        const i = new og({
            props: {
                title: "Clan",
                icon: "clan",
                scroll: "true",
                $$slots: { default: [U$] },
                $$scope: { ctx: t }
            }
        });
        return (
            i.$on("close", t[6]),
            {
                c() {
                    (e = E("div")),
                        Et(i.$$.fragment),
                        U(e, "class", "absCentered container svelte-9et4uw");
                },
                m(t, n) {
                    $(t, e, n), Ct(i, e, null), (s = !0);
                },
                p(t, e) {
                    const s = {};
                    133 & e && (s.$$scope = { dirty: e, ctx: t }), i.$set(s);
                },
                i(t) {
                    s || (vt(i.$$.fragment, t), (s = !0));
                },
                o(t) {
                    yt(i.$$.fragment, t), (s = !1);
                },
                d(t) {
                    t && S(e), Tt(i);
                }
            }
        );
    }
    function E$(e) {
        let s, i, n, r, o, l;
        return {
            c() {
                (s = E("div")),
                    (i = E("div")),
                    ((n = E("h3")).textContent = "You have no clan"),
                    ((r = E("div")).textContent = "View invitations"),
                    ((o = E("div")).textContent = "Create clan"),
                    U(r, "class", "btn grey"),
                    U(o, "class", "btn grey marg-top"),
                    U(i, "class", "panel-black"),
                    U(s, "class", "clanInfoBox textcenter svelte-9et4uw"),
                    (l = [
                        P(r, "click", function () {
                            e[4].apply(this, arguments);
                        }),
                        P(o, "click", function () {
                            e[5].apply(this, arguments);
                        })
                    ]);
            },
            m(t, e) {
                $(t, s, e), k(s, i), k(i, n), k(i, r), k(i, o);
            },
            p(t, s) {
                e = t;
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), a(l);
            }
        };
    }
    function C$(t) {
        let e, s, i, n, a, r;
        const o = [P$, _$],
            l = [];
        function c(t, e) {
            return "create" == t[0] ? 0 : "invites" == t[0] ? 1 : -1;
        }
        return (
            ~(i = c(t)) && (n = l[i] = o[i](t)),
            {
                c() {
                    (e = E("div")),
                        ((s = E("div")).textContent = "Back"),
                        n && n.c(),
                        D(s, "display", "inline-block"),
                        U(s, "class", "btn formatted grey"),
                        U(e, "class", "modemenu svelte-9et4uw"),
                        (r = P(s, "click", function () {
                            t[3].apply(this, arguments);
                        }));
                },
                m(t, n) {
                    $(t, e, n), k(e, s), ~i && l[i].m(e, null), (a = !0);
                },
                p(s, a) {
                    let r = i;
                    (i = c((t = s))) !== r &&
                        (n &&
                            (ft(),
                            yt(l[r], 1, 1, () => {
                                l[r] = null;
                            }),
                            gt()),
                        ~i
                            ? ((n = l[i]) || (n = l[i] = o[i](t)).c(),
                              vt(n, 1),
                              n.m(e, null))
                            : (n = null));
                },
                i(t) {
                    a || (vt(n), (a = !0));
                },
                o(t) {
                    yt(n), (a = !1);
                },
                d(t) {
                    t && S(e), ~i && l[i].d(), r();
                }
            }
        );
    }
    function T$(t) {
        let e, s;
        const i = new m$({ props: { tag: t[2] } });
        return {
            c() {
                (e = E("div")),
                    Et(i.$$.fragment),
                    U(e, "class", "clanView svelte-9et4uw");
            },
            m(t, n) {
                $(t, e, n), Ct(i, e, null), (s = !0);
            },
            p(t, e) {
                const s = {};
                4 & e && (s.tag = t[2]), i.$set(s);
            },
            i(t) {
                s || (vt(i.$$.fragment, t), (s = !0));
            },
            o(t) {
                yt(i.$$.fragment, t), (s = !1);
            },
            d(t) {
                t && S(e), Tt(i);
            }
        };
    }
    function _$(t) {
        let e;
        const s = new S$({});
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function P$(t) {
        let e;
        const s = new g$({});
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function U$(t) {
        let e, s, i, n;
        const a = [T$, C$, E$],
            r = [];
        function o(t, e) {
            return t[2] ? 0 : t[0] ? 1 : 2;
        }
        return (
            (e = o(t)),
            (s = r[e] = a[e](t)),
            {
                c() {
                    s.c(), (i = _());
                },
                m(t, s) {
                    r[e].m(t, s), $(t, i, s), (n = !0);
                },
                p(t, n) {
                    let l = e;
                    (e = o(t)) === l
                        ? r[e].p(t, n)
                        : (ft(),
                          yt(r[l], 1, 1, () => {
                              r[l] = null;
                          }),
                          gt(),
                          (s = r[e]) || (s = r[e] = a[e](t)).c(),
                          vt(s, 1),
                          s.m(i.parentNode, i));
                },
                i(t) {
                    n || (vt(s), (n = !0));
                },
                o(t) {
                    yt(s), (n = !1);
                },
                d(t) {
                    r[e].d(t), t && S(i);
                }
            }
        );
    }
    function I$(t) {
        let e,
            s,
            i = t[1] && M$(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[1]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = M$(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function z$(t, e, s) {
        let i, n;
        h(t, Je, t => s(1, (i = t))), h(t, ke, t => s(2, (n = t)));
        let a = !1;
        return [
            a,
            i,
            n,
            t => s(0, (a = !1)),
            t => s(0, (a = "invites")),
            t => s(0, (a = "create")),
            () => {
                f(Je, (i = !1));
            }
        ];
    }
    class A$ extends Pt {
        constructor(t) {
            super(), _t(this, t, z$, I$, o, {});
        }
    }
    function D$(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m = t[0].name + "",
            f = (void 0 !== t[0].level ? `Lv. ${t[0].level} ` : "") + "",
            g =
                (void 0 !== t[0].class ? Wh.classes[t[0].class].name : "Item") +
                "",
            v =
                (void 0 !== t[0].faction
                    ? Wh.factions[t[0].faction].name
                    : "") + "";
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    (i = C(m)),
                    (n = E("div")),
                    (a = E("span")),
                    (r = C(f)),
                    (o = E("span")),
                    (l = C(g)),
                    (h = E("span")),
                    (d = C(v)),
                    U(s, "class", "textwhite title svelte-1wip79f"),
                    U(
                        o,
                        "class",
                        (c =
                            p(
                                void 0 !== t[0].class
                                    ? "textc" + t[0].class
                                    : "textyellow"
                            ) + " svelte-1wip79f")
                    ),
                    U(
                        h,
                        "class",
                        (u =
                            p(
                                void 0 !== t[0].faction
                                    ? "textf" + t[0].faction
                                    : ""
                            ) + " svelte-1wip79f")
                    ),
                    U(e, "class", "panel-black container svelte-1wip79f"),
                    D(e, "display", t[1] ? "block" : "none");
            },
            m(t, c) {
                $(t, e, c),
                    k(e, s),
                    k(s, i),
                    k(e, n),
                    k(n, a),
                    k(a, r),
                    k(n, o),
                    k(o, l),
                    k(e, h),
                    k(h, d);
            },
            p(t, s) {
                1 & s && m !== (m = t[0].name + "") && z(i, m),
                    1 & s &&
                        f !==
                            (f =
                                (void 0 !== t[0].level
                                    ? `Lv. ${t[0].level} `
                                    : "") + "") &&
                        z(r, f),
                    1 & s &&
                        g !==
                            (g =
                                (void 0 !== t[0].class
                                    ? Wh.classes[t[0].class].name
                                    : "Item") + "") &&
                        z(l, g),
                    1 & s &&
                        c !==
                            (c =
                                p(
                                    void 0 !== t[0].class
                                        ? "textc" + t[0].class
                                        : "textyellow"
                                ) + " svelte-1wip79f") &&
                        U(o, "class", c),
                    1 & s &&
                        v !==
                            (v =
                                (void 0 !== t[0].faction
                                    ? Wh.factions[t[0].faction].name
                                    : "") + "") &&
                        z(d, v),
                    1 & s &&
                        u !==
                            (u =
                                p(
                                    void 0 !== t[0].faction
                                        ? "textf" + t[0].faction
                                        : ""
                                ) + " svelte-1wip79f") &&
                        U(h, "class", u),
                    2 & s && D(e, "display", t[1] ? "block" : "none");
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function R$(e) {
        let s,
            i = e[0] && D$(e);
        return {
            c() {
                i && i.c(), (s = _());
            },
            m(t, e) {
                i && i.m(t, e), $(t, s, e);
            },
            p(t, [e]) {
                t[0]
                    ? i
                        ? i.p(t, e)
                        : ((i = D$(t)).c(), i.m(s.parentNode, s))
                    : i && (i.d(1), (i = null));
            },
            i: t,
            o: t,
            d(t) {
                i && i.d(t), t && S(s);
            }
        };
    }
    function B$(t, e, s) {
        let i, n;
        return (
            h(t, re, t => s(1, (i = t))),
            (t.$$.update = () => {
                2 & t.$$.dirty &&
                    i > 0 &&
                    Wn.isEntityIdTaken(i) &&
                    s(0, (n = Wn.entity(i)));
            }),
            [n, i]
        );
    }
    class F$ extends Pt {
        constructor(t) {
            super(), _t(this, t, B$, R$, o, {});
        }
    }
    const N$ = $e,
        L$ = async t => {
            const e = await Lk("/api/account/info");
            N$.set(e), Xt.set(e.storepoints), t && t(e);
        };
    function O$(e) {
        let s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            M,
            _,
            P,
            I,
            z,
            A,
            D,
            R,
            B,
            F,
            N,
            L,
            O,
            q,
            H,
            W,
            Z,
            j,
            G;
        return {
            c() {
                (s = E("div")),
                    ((i = E("div")).innerHTML =
                        '<img class="artwork svelte-cbx1m" src="/assets/ui/elixir.svg?v=35201089"><div class="sparkle svelte-cbx1m" style="font-size:35px; left:30%; top:30%; animation-delay: -1s;">+</div><div class="sparkle svelte-cbx1m" style="font-size:50px; left:40%; top:60%; animation-delay: -2s;">+</div><div class="sparkle svelte-cbx1m" style="font-size:80px; left:60%; top:20%; animation-delay: -3s;">+</div>'),
                    (n = E("div")),
                    ((a = E("h1")).innerHTML =
                        'Hordes <span class="textsub">Elixir</span>'),
                    ((r = E("div")).innerHTML =
                        '<img class="svgicon" src="/assets/ui/icons/gem.svg?v=35201089"> Chat supporter icon'),
                    ((o = E("div")).innerHTML =
                        '<img class="svgicon" src="/assets/ui/icons/check.svg?v=35201089"> No ads'),
                    (l = E("div")),
                    (c = E("img")),
                    (d = T()),
                    ((u = E("span")).textContent = `${ax[0].inventory}`),
                    (m = T()),
                    ((p = E("span")).textContent = `${ax[1].inventory}`),
                    (f = C(" base bag slots")),
                    (g = E("div")),
                    (v = E("img")),
                    (b = T()),
                    ((w = E("span")).textContent = `${ax[0].stash}`),
                    (x = T()),
                    ((M = E("span")).textContent = `${ax[1].stash}`),
                    (_ = C(" stash storage")),
                    (P = E("div")),
                    (I = E("img")),
                    (A = T()),
                    ((D = E("span")).textContent = `${ax[0].auction}`),
                    (R = T()),
                    ((B = E("span")).textContent = `${ax[1].auction}`),
                    (F = C(" merchant limit")),
                    (N = E("div")),
                    (L = E("img")),
                    (q = T()),
                    ((H = E("span")).textContent = `${ax[0].auctionHours}h`),
                    (W = T()),
                    ((Z = E("span")).textContent = `${ax[1].auctionHours}h`),
                    (j = C(" merchant duration")),
                    ((G = E("div")).textContent = "+ more to come (TBA)"),
                    U(i, "class", "artcontainer svelte-cbx1m"),
                    U(a, "class", "textprimary"),
                    U(r, "class", "textwhite"),
                    U(o, "class", "textwhite"),
                    U(c, "class", "svgicon"),
                    c.src !== (h = "/assets/ui/icons/check.svg?v=35201089") &&
                        U(c, "src", "/assets/ui/icons/check.svg?v=35201089"),
                    U(u, "class", "old svelte-cbx1m"),
                    U(p, "class", "textsub"),
                    U(l, "class", "textwhite"),
                    U(v, "class", "svgicon"),
                    v.src !== (y = "/assets/ui/icons/check.svg?v=35201089") &&
                        U(v, "src", "/assets/ui/icons/check.svg?v=35201089"),
                    U(w, "class", "old svelte-cbx1m"),
                    U(M, "class", "textsub"),
                    U(g, "class", "textwhite"),
                    U(I, "class", "svgicon"),
                    I.src !== (z = "/assets/ui/icons/check.svg?v=35201089") &&
                        U(I, "src", "/assets/ui/icons/check.svg?v=35201089"),
                    U(D, "class", "old svelte-cbx1m"),
                    U(B, "class", "textsub"),
                    U(P, "class", "textwhite"),
                    U(L, "class", "svgicon"),
                    L.src !== (O = "/assets/ui/icons/check.svg?v=35201089") &&
                        U(L, "src", "/assets/ui/icons/check.svg?v=35201089"),
                    U(H, "class", "old svelte-cbx1m"),
                    U(Z, "class", "textsub"),
                    U(N, "class", "textwhite"),
                    U(G, "class", "textgrey"),
                    U(s, "class", "split svelte-cbx1m");
            },
            m(t, e) {
                $(t, s, e),
                    k(s, i),
                    k(s, n),
                    k(n, a),
                    k(n, r),
                    k(n, o),
                    k(n, l),
                    k(l, c),
                    k(l, d),
                    k(l, u),
                    k(l, m),
                    k(l, p),
                    k(l, f),
                    k(n, g),
                    k(g, v),
                    k(g, b),
                    k(g, w),
                    k(g, x),
                    k(g, M),
                    k(g, _),
                    k(n, P),
                    k(P, I),
                    k(P, A),
                    k(P, D),
                    k(P, R),
                    k(P, B),
                    k(P, F),
                    k(n, N),
                    k(N, L),
                    k(N, q),
                    k(N, H),
                    k(N, W),
                    k(N, Z),
                    k(N, j),
                    k(n, G);
            },
            p: t,
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    class q$ extends Pt {
        constructor(t) {
            super(), _t(this, t, null, O$, o, {});
        }
    }
    const H$ = {
            SECONDS_A_MINUTE: 60,
            SECONDS_A_HOUR: 3600,
            SECONDS_A_DAY: 86400,
            SECONDS_A_WEEK: 604800,
            MILLISECONDS_A_SECOND: 1e3,
            MILLISECONDS_A_MINUTE: 6e4,
            MILLISECONDS_A_HOUR: 36e5,
            MILLISECONDS_A_DAY: 864e5,
            MILLISECONDS_A_WEEK: 6048e5,
            MS: "millisecond",
            S: "second",
            MIN: "minute",
            H: "hour",
            D: "day",
            W: "week",
            M: "month",
            Q: "quarter",
            Y: "year",
            DATE: "date",
            FORMAT_DEFAULT: "YYYY-MM-DDTHH:mm:ssZ",
            INVALID_DATE_STRING: "Invalid Date",
            REGEX_PARSE: /^(\d{4})-?(\d{1,2})-?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d{1,3})?$/,
            REGEX_FORMAT: /\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g
        },
        W$ = (t, e, s) => {
            const i = String(t);
            return !i || i.length >= e
                ? t
                : `${Array(e + 1 - i.length).join(s)}${t}`;
        },
        Z$ = {
            s: W$,
            z: t => {
                const e = -t.utcOffset(),
                    s = Math.abs(e),
                    i = Math.floor(s / 60),
                    n = s % 60;
                return `${e <= 0 ? "+" : "-"}${W$(i, 2, "0")}:${W$(n, 2, "0")}`;
            },
            m: (t, e) => {
                const s = 12 * (e.year() - t.year()) + (e.month() - t.month()),
                    i = t.clone().add(s, H$.M),
                    n = e - i < 0,
                    a = t.clone().add(s + (n ? -1 : 1), H$.M);
                return Number(-(s + (e - i) / (n ? i - a : a - i)) || 0);
            },
            a: t => (t < 0 ? Math.ceil(t) || 0 : Math.floor(t)),
            p: t => {
                return (
                    {
                        M: H$.M,
                        y: H$.Y,
                        w: H$.W,
                        d: H$.D,
                        h: H$.H,
                        m: H$.MIN,
                        s: H$.S,
                        ms: H$.MS,
                        Q: H$.Q
                    }[t] ||
                    String(t || "")
                        .toLowerCase()
                        .replace(/s$/, "")
                );
            },
            u: t => void 0 === t
        },
        j$ = {
            name: "en",
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
            ),
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
            )
        };
    let G$ = "en";
    const V$ = {};
    V$[G$] = j$;
    const Y$ = t => t instanceof tS,
        J$ = (t, e, s) => {
            let i;
            if (!t) return G$;
            if ("string" == typeof t)
                V$[t] && (i = t), e && ((V$[t] = e), (i = t));
            else {
                const { name: e } = t;
                (V$[e] = t), (i = e);
            }
            return s || (G$ = i), i;
        },
        X$ = (t, e, s) => {
            if (Y$(t)) return t.clone();
            const i = e
                ? "string" == typeof e
                    ? { format: e, pl: s }
                    : e
                : {};
            return (i.date = t), new tS(i);
        },
        Q$ = Z$;
    (Q$.l = J$),
        (Q$.i = Y$),
        (Q$.w = (t, e) =>
            X$(t, { locale: e.$L, utc: e.$u, $offset: e.$offset }));
    const K$ = t => {
        const { date: e, utc: s } = t;
        if (null === e) return new Date(NaN);
        if (Q$.u(e)) return new Date();
        if (e instanceof Date) return new Date(e);
        if ("string" == typeof e && !/Z$/i.test(e)) {
            const t = e.match(H$.REGEX_PARSE);
            if (t)
                return s
                    ? new Date(
                          Date.UTC(
                              t[1],
                              t[2] - 1,
                              t[3] || 1,
                              t[4] || 0,
                              t[5] || 0,
                              t[6] || 0,
                              t[7] || 0
                          )
                      )
                    : new Date(
                          t[1],
                          t[2] - 1,
                          t[3] || 1,
                          t[4] || 0,
                          t[5] || 0,
                          t[6] || 0,
                          t[7] || 0
                      );
        }
        return new Date(e);
    };
    class tS {
        constructor(t) {
            (this.$L = this.$L || J$(t.locale, null, !0)), this.parse(t);
        }
        parse(t) {
            (this.$d = K$(t)), this.init();
        }
        init() {
            const { $d: t } = this;
            (this.$y = t.getFullYear()),
                (this.$M = t.getMonth()),
                (this.$D = t.getDate()),
                (this.$W = t.getDay()),
                (this.$H = t.getHours()),
                (this.$m = t.getMinutes()),
                (this.$s = t.getSeconds()),
                (this.$ms = t.getMilliseconds());
        }
        $utils() {
            return Q$;
        }
        isValid() {
            return !(this.$d.toString() === H$.INVALID_DATE_STRING);
        }
        isSame(t, e) {
            const s = X$(t);
            return this.startOf(e) <= s && s <= this.endOf(e);
        }
        isAfter(t, e) {
            return X$(t) < this.startOf(e);
        }
        isBefore(t, e) {
            return this.endOf(e) < X$(t);
        }
        $g(t, e, s) {
            return Q$.u(t) ? this[e] : this.set(s, t);
        }
        year(t) {
            return this.$g(t, "$y", H$.Y);
        }
        month(t) {
            return this.$g(t, "$M", H$.M);
        }
        day(t) {
            return this.$g(t, "$W", H$.D);
        }
        date(t) {
            return this.$g(t, "$D", H$.DATE);
        }
        hour(t) {
            return this.$g(t, "$H", H$.H);
        }
        minute(t) {
            return this.$g(t, "$m", H$.MIN);
        }
        second(t) {
            return this.$g(t, "$s", H$.S);
        }
        millisecond(t) {
            return this.$g(t, "$ms", H$.MS);
        }
        unix() {
            return Math.floor(this.valueOf() / 1e3);
        }
        valueOf() {
            return this.$d.getTime();
        }
        startOf(t, e) {
            const s = !!Q$.u(e) || e,
                i = Q$.p(t),
                n = (t, e) => {
                    const i = Q$.w(
                        this.$u
                            ? Date.UTC(this.$y, e, t)
                            : new Date(this.$y, e, t),
                        this
                    );
                    return s ? i : i.endOf(H$.D);
                },
                a = (t, e) => {
                    return Q$.w(
                        this.toDate()[t].apply(
                            this.toDate(),
                            (s ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e)
                        ),
                        this
                    );
                },
                { $W: r, $M: o, $D: l } = this,
                c = `set${this.$u ? "UTC" : ""}`;
            switch (i) {
                case H$.Y:
                    return s ? n(1, 0) : n(31, 11);
                case H$.M:
                    return s ? n(1, o) : n(0, o + 1);
                case H$.W: {
                    const t = this.$locale().weekStart || 0,
                        e = (r < t ? r + 7 : r) - t;
                    return n(s ? l - e : l + (6 - e), o);
                }
                case H$.D:
                case H$.DATE:
                    return a(`${c}Hours`, 0);
                case H$.H:
                    return a(`${c}Minutes`, 1);
                case H$.MIN:
                    return a(`${c}Seconds`, 2);
                case H$.S:
                    return a(`${c}Milliseconds`, 3);
                default:
                    return this.clone();
            }
        }
        endOf(t) {
            return this.startOf(t, !1);
        }
        $set(t, e) {
            const s = Q$.p(t),
                i = `set${this.$u ? "UTC" : ""}`,
                n = {
                    [H$.D]: `${i}Date`,
                    [H$.DATE]: `${i}Date`,
                    [H$.M]: `${i}Month`,
                    [H$.Y]: `${i}FullYear`,
                    [H$.H]: `${i}Hours`,
                    [H$.MIN]: `${i}Minutes`,
                    [H$.S]: `${i}Seconds`,
                    [H$.MS]: `${i}Milliseconds`
                }[s],
                a = s === H$.D ? this.$D + (e - this.$W) : e;
            if (s === H$.M || s === H$.Y) {
                const t = this.clone().set(H$.DATE, 1);
                t.$d[n](a),
                    t.init(),
                    (this.$d = t
                        .set(H$.DATE, Math.min(this.$D, t.daysInMonth()))
                        .toDate());
            } else n && this.$d[n](a);
            return this.init(), this;
        }
        set(t, e) {
            return this.clone().$set(t, e);
        }
        get(t) {
            return this[Q$.p(t)]();
        }
        add(t, e) {
            t = Number(t);
            const s = Q$.p(e),
                i = e => {
                    const s = X$(this);
                    return Q$.w(s.date(s.date() + Math.round(e * t)), this);
                };
            if (s === H$.M) return this.set(H$.M, this.$M + t);
            if (s === H$.Y) return this.set(H$.Y, this.$y + t);
            if (s === H$.D) return i(1);
            if (s === H$.W) return i(7);
            const n =
                    {
                        [H$.MIN]: H$.MILLISECONDS_A_MINUTE,
                        [H$.H]: H$.MILLISECONDS_A_HOUR,
                        [H$.S]: H$.MILLISECONDS_A_SECOND
                    }[s] || 1,
                a = this.$d.getTime() + t * n;
            return Q$.w(a, this);
        }
        subtract(t, e) {
            return this.add(-1 * t, e);
        }
        format(t) {
            if (!this.isValid()) return H$.INVALID_DATE_STRING;
            const e = t || H$.FORMAT_DEFAULT,
                s = Q$.z(this),
                i = this.$locale(),
                { $H: n, $m: a, $M: r } = this,
                { weekdays: o, months: l, meridiem: c } = i,
                h = (t, s, i, n) =>
                    (t && (t[s] || t(this, e))) || i[s].substr(0, n),
                d = t => Q$.s(n % 12 || 12, t, "0"),
                u =
                    c ||
                    ((t, e, s) => {
                        const i = t < 12 ? "AM" : "PM";
                        return s ? i.toLowerCase() : i;
                    }),
                m = {
                    YY: String(this.$y).slice(-2),
                    YYYY: this.$y,
                    M: r + 1,
                    MM: Q$.s(r + 1, 2, "0"),
                    MMM: h(i.monthsShort, r, l, 3),
                    MMMM: l[r] || l(this, e),
                    D: this.$D,
                    DD: Q$.s(this.$D, 2, "0"),
                    d: String(this.$W),
                    dd: h(i.weekdaysMin, this.$W, o, 2),
                    ddd: h(i.weekdaysShort, this.$W, o, 3),
                    dddd: o[this.$W],
                    H: String(n),
                    HH: Q$.s(n, 2, "0"),
                    h: d(1),
                    hh: d(2),
                    a: u(n, a, !0),
                    A: u(n, a, !1),
                    m: String(a),
                    mm: Q$.s(a, 2, "0"),
                    s: String(this.$s),
                    ss: Q$.s(this.$s, 2, "0"),
                    SSS: Q$.s(this.$ms, 3, "0"),
                    Z: s
                };
            return e.replace(
                H$.REGEX_FORMAT,
                (t, e) => e || m[t] || s.replace(":", "")
            );
        }
        utcOffset() {
            return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }
        diff(t, e, s) {
            const i = Q$.p(e),
                n = X$(t),
                a =
                    (n.utcOffset() - this.utcOffset()) *
                    H$.MILLISECONDS_A_MINUTE,
                r = this - n;
            let o = Q$.m(this, n);
            return (
                (o =
                    {
                        [H$.Y]: o / 12,
                        [H$.M]: o,
                        [H$.Q]: o / 3,
                        [H$.W]: (r - a) / H$.MILLISECONDS_A_WEEK,
                        [H$.D]: (r - a) / H$.MILLISECONDS_A_DAY,
                        [H$.H]: r / H$.MILLISECONDS_A_HOUR,
                        [H$.MIN]: r / H$.MILLISECONDS_A_MINUTE,
                        [H$.S]: r / H$.MILLISECONDS_A_SECOND
                    }[i] || r),
                s ? o : Q$.a(o)
            );
        }
        daysInMonth() {
            return this.endOf(H$.M).$D;
        }
        $locale() {
            return V$[this.$L];
        }
        locale(t, e) {
            if (!t) return this.$L;
            const s = this.clone();
            return (s.$L = J$(t, e, !0)), s;
        }
        clone() {
            return Q$.w(this.$d, this);
        }
        toDate() {
            return new Date(this.valueOf());
        }
        toJSON() {
            return this.isValid() ? this.toISOString() : null;
        }
        toISOString() {
            return this.$d.toISOString();
        }
        toString() {
            return this.$d.toUTCString();
        }
    }
    function eS(t, e, s) {
        const i = t.slice();
        return (i[13] = e[s]), (i[15] = s), i;
    }
    function sS(e) {
        let s;
        return {
            c() {
                s = C("Not active");
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function iS(t) {
        let e,
            s,
            i,
            n,
            a = X$(t[1].subscribed_until).format("MMM DD, YYYY HH:mm") + "";
        return {
            c() {
                (e = E("img")),
                    (i = T()),
                    (n = C(a)),
                    U(e, "class", "svgicon"),
                    e.src !== (s = "/assets/ui/icons/check.svg?v=35201089") &&
                        U(e, "src", "/assets/ui/icons/check.svg?v=35201089");
            },
            m(t, s) {
                $(t, e, s), $(t, i, s), $(t, n, s);
            },
            p(t, e) {
                2 & e &&
                    a !==
                        (a =
                            X$(t[1].subscribed_until).format(
                                "MMM DD, YYYY HH:mm"
                            ) + "") &&
                    z(n, a);
            },
            d(t) {
                t && S(e), t && S(i), t && S(n);
            }
        };
    }
    function nS(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o = t[13].name + "";
        const l = new Ey({ props: { amount: t[13].price } });
        function c(...e) {
            return t[9](t[15], ...e);
        }
        return {
            c() {
                (e = E("btn")),
                    (s = C(o)),
                    (i = T()),
                    Et(l.$$.fragment),
                    U(
                        e,
                        "class",
                        (n =
                            "btn black navbtn " +
                            (t[5] == t[15] ? "active" : "") +
                            " big")
                    ),
                    (r = P(e, "click", function () {
                        c.apply(this, arguments);
                    }));
            },
            m(t, n) {
                $(t, e, n), k(e, s), k(e, i), Ct(l, e, null), (a = !0);
            },
            p(s, i) {
                (t = s),
                    (!a ||
                        (32 & i &&
                            n !==
                                (n =
                                    "btn black navbtn " +
                                    (t[5] == t[15] ? "active" : "") +
                                    " big"))) &&
                        U(e, "class", n);
            },
            i(t) {
                a || (vt(l.$$.fragment, t), (a = !0));
            },
            o(t) {
                yt(l.$$.fragment, t), (a = !1);
            },
            d(t) {
                t && S(e), Tt(l), r();
            }
        };
    }
    function aS(e) {
        let s;
        return {
            c() {
                ((s = E("div")).innerHTML =
                    '<p class="fadeIn textsub">Elixir time added. Thank you for your support. Please re-log any active characters.</p>'),
                    U(s, "class", "fadeIn card marg-top");
            },
            m(t, e) {
                $(t, s, e);
            },
            p: t,
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function rS(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d,
            u,
            m,
            p,
            f,
            g,
            v,
            y,
            b,
            w,
            x,
            M = t[6] ? "Gift" : "Add",
            I = t[8].description + "",
            A = t[6] ? "someone" : "your account",
            R = t[6]
                ? "Send Elixir Gift"
                : t[1].subscribed_until
                ? "Extend Elixir"
                : "Activate Elixir";
        const B = new Ey({ props: { amount: t[8].price } }),
            F = [lS, oS],
            N = [];
        function L(t, e) {
            return t[6] ? 1 : 0;
        }
        (m = L(t)), (p = N[m] = F[m](t));
        let O = "addsubscription" == t[0] && t[2] && cS(t),
            q = t[1].storepoints < t[8].price && hS();
        return {
            c() {
                (e = E("div")),
                    (s = E("div")),
                    (i = C(M)),
                    (n = T()),
                    (a = E("span")),
                    (r = C(I)),
                    (o = C(" of ")),
                    ((l = E("span")).textContent = "Elixir"),
                    (c = C(" to ")),
                    (h = C(A)),
                    (d = C(" for ")),
                    Et(B.$$.fragment),
                    (u = C(".")),
                    p.c(),
                    (f = _()),
                    O && O.c(),
                    (g = E("div")),
                    (v = E("div")),
                    (y = C(R)),
                    q && q.c(),
                    U(a, "class", "bold textwhite"),
                    U(l, "class", "textsub"),
                    U(s, "class", "textgrey"),
                    U(
                        v,
                        "class",
                        (b =
                            "btn grey formatted " +
                            ("addsubscription" == t[3] ||
                            t[1].storepoints < t[8].price
                                ? "disabled"
                                : ""))
                    ),
                    U(g, "class", "subnav"),
                    U(e, "class", "fadeIn card marg-top"),
                    D(e, "padding", "18px"),
                    (x = P(v, "click", function () {
                        t[12].apply(this, arguments);
                    }));
            },
            m(t, p) {
                $(t, e, p),
                    k(e, s),
                    k(s, i),
                    k(s, n),
                    k(s, a),
                    k(a, r),
                    k(s, o),
                    k(s, l),
                    k(s, c),
                    k(s, h),
                    k(s, d),
                    Ct(B, s, null),
                    k(s, u),
                    N[m].m(e, null),
                    k(e, f),
                    O && O.m(e, null),
                    k(e, g),
                    k(g, v),
                    k(v, y),
                    q && q.m(e, null),
                    (w = !0);
            },
            p(s, n) {
                (t = s),
                    (!w || 64 & n) &&
                        M !== (M = t[6] ? "Gift" : "Add") &&
                        z(i, M),
                    (!w || 256 & n) &&
                        I !== (I = t[8].description + "") &&
                        z(r, I),
                    (!w || 64 & n) &&
                        A !== (A = t[6] ? "someone" : "your account") &&
                        z(h, A);
                const a = {};
                256 & n && (a.amount = t[8].price), B.$set(a);
                let o = m;
                (m = L(t)) === o
                    ? N[m].p(t, n)
                    : (ft(),
                      yt(N[o], 1, 1, () => {
                          N[o] = null;
                      }),
                      gt(),
                      (p = N[m]) || (p = N[m] = F[m](t)).c(),
                      vt(p, 1),
                      p.m(e, f)),
                    "addsubscription" == t[0] && t[2]
                        ? O
                            ? O.p(t, n)
                            : ((O = cS(t)).c(), O.m(e, g))
                        : O && (O.d(1), (O = null)),
                    (!w || 66 & n) &&
                        R !==
                            (R = t[6]
                                ? "Send Elixir Gift"
                                : t[1].subscribed_until
                                ? "Extend Elixir"
                                : "Activate Elixir") &&
                        z(y, R),
                    (!w ||
                        (266 & n &&
                            b !==
                                (b =
                                    "btn grey formatted " +
                                    ("addsubscription" == t[3] ||
                                    t[1].storepoints < t[8].price
                                        ? "disabled"
                                        : "")))) &&
                        U(v, "class", b),
                    t[1].storepoints < t[8].price
                        ? q || ((q = hS()).c(), q.m(e, null))
                        : q && (q.d(1), (q = null));
            },
            i(t) {
                w || (vt(B.$$.fragment, t), vt(p), (w = !0));
            },
            o(t) {
                yt(B.$$.fragment, t), yt(p), (w = !1);
            },
            d(t) {
                t && S(e), Tt(B), N[m].d(), O && O.d(), q && q.d(), x();
            }
        };
    }
    function oS(t) {
        let e, s, i;
        function n(e) {
            t[11].call(null, e);
        }
        let a = {};
        void 0 !== t[7] && (a.name = t[7]);
        const r = new Jk({ props: a });
        return (
            tt.push(() => Mt(r, "name", n)),
            {
                c() {
                    (e = E("div")), Et(r.$$.fragment), U(e, "class", "subnav");
                },
                m(t, s) {
                    $(t, e, s), Ct(r, e, null), (i = !0);
                },
                p(t, e) {
                    const i = {};
                    !s &&
                        128 & e &&
                        ((s = !0), (i.name = t[7]), lt(() => (s = !1))),
                        r.$set(i);
                },
                i(t) {
                    i || (vt(r.$$.fragment, t), (i = !0));
                },
                o(t) {
                    yt(r.$$.fragment, t), (i = !1);
                },
                d(t) {
                    t && S(e), Tt(r);
                }
            }
        );
    }
    function lS(e) {
        let s,
            i,
            n,
            a,
            r,
            o =
                X$(e[1].subscribed_until || void 0)
                    .add(e[8].days, "day")
                    .format("MMM DD, YYYY HH:mm") + "";
        return {
            c() {
                (s = E("p")),
                    (i = C("Enables Elixir until ")),
                    (n = E("span")),
                    (a = C(o)),
                    (r = C(".")),
                    U(n, "class", "textwhite"),
                    U(s, "class", "bold textsub");
            },
            m(t, e) {
                $(t, s, e), k(s, i), k(s, n), k(n, a), k(s, r);
            },
            p(t, e) {
                258 & e &&
                    o !==
                        (o =
                            X$(t[1].subscribed_until || void 0)
                                .add(t[8].days, "day")
                                .format("MMM DD, YYYY HH:mm") + "") &&
                    z(a, o);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s);
            }
        };
    }
    function cS(t) {
        let e, s;
        return {
            c() {
                (e = E("p")), (s = C(t[2])), U(e, "class", "fadeIn textred");
            },
            m(t, i) {
                $(t, e, i), k(e, s);
            },
            p(t, e) {
                4 & e && z(s, t[2]);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function hS(t) {
        let e;
        return {
            c() {
                (e = E("p")).innerHTML =
                    '<small>You do not have enough Hordes Points to do this. <a class="textprimary" href="/store">Buy Hordes Points</a></small>';
            },
            m(t, s) {
                $(t, e, s);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function dS(t) {
        let e, s, i, n, a, r, o, l, c, h, d, u, m, p, f, g, v;
        const y = new q$({});
        function b(t, e) {
            return t[1].subscribed_until ? iS : sS;
        }
        let w = b(t),
            x = w(t);
        const _ = new Ey({ props: { amount: t[1].storepoints } });
        let I = nx,
            z = [];
        for (let e = 0; e < I.length; e += 1) z[e] = nS(eS(t, I, e));
        const A = t =>
                yt(z[t], 1, 1, () => {
                    z[t] = null;
                }),
            D = [rS, aS],
            R = [];
        function B(t, e) {
            return void 0 !== t[5] ? 0 : "addsubscription" == t[0] ? 1 : -1;
        }
        return (
            ~(p = B(t)) && (f = R[p] = D[p](t)),
            {
                c() {
                    (e = E("div")),
                        Et(y.$$.fragment),
                        ((s = E("small")).textContent = "Elixir"),
                        (i = E("div")),
                        x.c(),
                        ((a = E("small")).textContent = "Hordes Points"),
                        (r = E("div")),
                        Et(_.$$.fragment),
                        (o = T()),
                        ((l = E("a")).textContent = "(Buy Hordes Points)"),
                        ((c = E("p")).textContent =
                            "Support Hordes development for a low cost. Unlock additional bag slots, store more items in your stash, make use of enhanced merchant features and many more perks (TBA)."),
                        (h = E("div"));
                    for (let t = 0; t < z.length; t += 1) z[t].c();
                    (d = E("btn")),
                        (u = C("Send Gift")),
                        f && f.c(),
                        U(s, "class", "textgrey"),
                        U(
                            i,
                            "class",
                            (n =
                                "cardinfo " +
                                (t[1].subscribed_until
                                    ? "textsub"
                                    : "textgrey"))
                        ),
                        U(a, "class", "textgrey"),
                        U(l, "class", "textwhite"),
                        U(l, "href", "/store"),
                        U(r, "class", "cardinfo"),
                        U(c, "class", "textgrey"),
                        U(
                            d,
                            "class",
                            (m =
                                "btn navbtn " +
                                (t[6] ? "active white" : "") +
                                " big")
                        ),
                        U(h, "class", "subnav"),
                        U(e, "class", "card"),
                        (v = P(d, "click", function () {
                            t[10].apply(this, arguments);
                        }));
                },
                m(t, n) {
                    $(t, e, n),
                        Ct(y, e, null),
                        k(e, s),
                        k(e, i),
                        x.m(i, null),
                        k(e, a),
                        k(e, r),
                        Ct(_, r, null),
                        k(r, o),
                        k(r, l),
                        k(e, c),
                        k(e, h);
                    for (let t = 0; t < z.length; t += 1) z[t].m(h, null);
                    k(h, d), k(d, u), ~p && R[p].m(e, null), (g = !0);
                },
                p(s, [a]) {
                    w === (w = b((t = s))) && x
                        ? x.p(t, a)
                        : (x.d(1), (x = w(t)) && (x.c(), x.m(i, null))),
                        (!g ||
                            (2 & a &&
                                n !==
                                    (n =
                                        "cardinfo " +
                                        (t[1].subscribed_until
                                            ? "textsub"
                                            : "textgrey")))) &&
                            U(i, "class", n);
                    const r = {};
                    if (
                        (2 & a && (r.amount = t[1].storepoints),
                        _.$set(r),
                        32 & a)
                    ) {
                        let e;
                        for (I = nx, e = 0; e < I.length; e += 1) {
                            const s = eS(t, I, e);
                            z[e]
                                ? (z[e].p(s, a), vt(z[e], 1))
                                : ((z[e] = nS(s)),
                                  z[e].c(),
                                  vt(z[e], 1),
                                  z[e].m(h, d));
                        }
                        for (ft(), e = I.length; e < z.length; e += 1) A(e);
                        gt();
                    }
                    (!g ||
                        (64 & a &&
                            m !==
                                (m =
                                    "btn navbtn " +
                                    (t[6] ? "active white" : "") +
                                    " big"))) &&
                        U(d, "class", m);
                    let o = p;
                    (p = B(t)) === o
                        ? ~p && R[p].p(t, a)
                        : (f &&
                              (ft(),
                              yt(R[o], 1, 1, () => {
                                  R[o] = null;
                              }),
                              gt()),
                          ~p
                              ? ((f = R[p]) || (f = R[p] = D[p](t)).c(),
                                vt(f, 1),
                                f.m(e, null))
                              : (f = null));
                },
                i(t) {
                    if (!g) {
                        vt(y.$$.fragment, t), vt(_.$$.fragment, t);
                        for (let t = 0; t < I.length; t += 1) vt(z[t]);
                        vt(f), (g = !0);
                    }
                },
                o(t) {
                    yt(y.$$.fragment, t),
                        yt(_.$$.fragment, t),
                        (z = z.filter(Boolean));
                    for (let t = 0; t < z.length; t += 1) yt(z[t]);
                    yt(f), (g = !1);
                },
                d(t) {
                    t && S(e),
                        Tt(y),
                        x.d(),
                        Tt(_),
                        M(z, t),
                        ~p && R[p].d(),
                        v();
                }
            }
        );
    }
    function uS(t, e, s) {
        let i,
            n,
            a = !1,
            { user: r } = e,
            { flash: o } = e,
            { flashmsg: l } = e,
            { action: c } = e,
            { apiCall: h } = e;
        let d;
        return (
            (t.$set = t => {
                "user" in t && s(1, (r = t.user)),
                    "flash" in t && s(0, (o = t.flash)),
                    "flashmsg" in t && s(2, (l = t.flashmsg)),
                    "action" in t && s(3, (c = t.action)),
                    "apiCall" in t && s(4, (h = t.apiCall));
            }),
            (t.$$.update = () => {
                32 & t.$$.dirty && s(8, (d = nx[i]));
            }),
            [
                o,
                r,
                l,
                c,
                h,
                i,
                a,
                n,
                d,
                (t, e) => s(5, (i = t)),
                t => s(6, (a = !a)),
                function (t) {
                    s(7, (n = t));
                },
                t =>
                    h(
                        "addsubscription",
                        "/api/account/addsubscription",
                        { value: i, gift: a ? n : void 0 },
                        !0,
                        t => {
                            "ok" == t.result &&
                                (s(5, (i = void 0)),
                                s(0, (o = "addsubscription")));
                        }
                    )
            ]
        );
    }
    (X$.prototype = tS.prototype),
        (X$.extend = (t, e) => (t(e, tS, X$), X$)),
        (X$.locale = J$),
        (X$.isDayjs = Y$),
        (X$.unix = t => X$(1e3 * t)),
        (X$.en = V$[G$]),
        (X$.Ls = V$);
    class mS extends Pt {
        constructor(t) {
            super(),
                _t(this, t, uS, dS, o, {
                    user: 1,
                    flash: 0,
                    flashmsg: 2,
                    action: 3,
                    apiCall: 4
                });
        }
    }
    function pS(t) {
        let e, s, i;
        const n = new og({
            props: {
                title: "Store / Elixir",
                icon: "gem",
                $$slots: { default: [gS] },
                $$scope: { ctx: t }
            }
        });
        return (
            n.$on("close", function () {
                t[7].apply(this, arguments);
            }),
            {
                c() {
                    (e = E("div")),
                        (s = E("div")),
                        Et(n.$$.fragment),
                        U(s, "class", "uiscaled"),
                        U(e, "class", "absCentered container svelte-1fl1zyr");
                },
                m(t, a) {
                    $(t, e, a), k(e, s), Ct(n, s, null), (i = !0);
                },
                p(e, s) {
                    t = e;
                    const i = {};
                    302 & s && (i.$$scope = { dirty: s, ctx: t }), n.$set(i);
                },
                i(t) {
                    i || (vt(n.$$.fragment, t), (i = !0));
                },
                o(t) {
                    yt(n.$$.fragment, t), (i = !1);
                },
                d(t) {
                    t && S(e), Tt(n);
                }
            }
        );
    }
    function fS(t) {
        let e;
        const s = new mS({
            props: {
                user: t[5],
                flash: t[1],
                flashmsg: t[2],
                action: t[3],
                apiCall: t[0]
            }
        });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            p(t, e) {
                const i = {};
                32 & e && (i.user = t[5]),
                    2 & e && (i.flash = t[1]),
                    4 & e && (i.flashmsg = t[2]),
                    8 & e && (i.action = t[3]),
                    s.$set(i);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function gS(t) {
        let e,
            s,
            i = t[5] && fS(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, s) {
                t[5]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = fS(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function vS(t) {
        let e,
            s,
            i = t[4] && pS(t);
        return {
            c() {
                i && i.c(), (e = _());
            },
            m(t, n) {
                i && i.m(t, n), $(t, e, n), (s = !0);
            },
            p(t, [s]) {
                t[4]
                    ? i
                        ? (i.p(t, s), vt(i, 1))
                        : ((i = pS(t)).c(), vt(i, 1), i.m(e.parentNode, e))
                    : i &&
                      (ft(),
                      yt(i, 1, 1, () => {
                          i = null;
                      }),
                      gt());
            },
            i(t) {
                s || (vt(i), (s = !0));
            },
            o(t) {
                yt(i), (s = !1);
            },
            d(t) {
                i && i.d(t), t && S(e);
            }
        };
    }
    function yS(t, e, s) {
        let i, n;
        h(t, Ye, t => s(4, (i = t))), h(t, N$, t => s(5, (n = t)));
        let a = void 0,
            r = void 0,
            o = void 0;
        return (
            (t.$$.update = () => {
                16 & t.$$.dirty && i && L$();
            }),
            [
                async (t, e, i, n, l) => {
                    s(3, (o = t));
                    const c = await Lk(e, i);
                    s(3, (o = void 0)),
                        "ok" === c.result
                            ? s(1, (a = void 0))
                            : (s(1, (a = t)), s(2, (r = c.result))),
                        n && L$(),
                        l && l(c);
                },
                a,
                r,
                o,
                i,
                n,
                void 0,
                t => f(Ye, (i = !1))
            ]
        );
    }
    class bS extends Pt {
        constructor(t) {
            super(), _t(this, t, yS, vS, o, { apiCall: 0 });
        }
        get apiCall() {
            return this.$$.ctx[0];
        }
    }
    function wS(e) {
        let s, i, n, a, r, o, l, c;
        return {
            c() {
                (s = E("div")),
                    (i = E("h3")),
                    (n = C("Using AdBlock? Buy ")),
                    ((a = E("span")).innerHTML =
                        '<span class="textwhite">Hordes</span>  <img class="svgicon texticon" src="/assets/ui/icons/gem.svg?v=35201089">  Elixir'),
                    (r = C(" to hide this window and support development.")),
                    (o = E("ins")),
                    ((l = E("script")).textContent =
                        "(adsbygoogle = window.adsbygoogle || []).push({});"),
                    U(a, "class", "btn textsub"),
                    U(i, "class", "textgrey blocktext svelte-svpjti"),
                    U(o, "class", "adsbygoogle"),
                    D(o, "display", "inline-block"),
                    D(o, "width", "728px"),
                    D(o, "height", "90px"),
                    U(o, "data-ad-client", "ca-pub-6128207871826113"),
                    U(o, "data-ad-slot", "2385450998"),
                    U(s, "class", "container panel-black svelte-svpjti"),
                    (c = P(a, "click", function () {
                        e[1].apply(this, arguments);
                    }));
            },
            m(t, e) {
                $(t, s, e),
                    k(s, i),
                    k(i, n),
                    k(i, a),
                    k(i, r),
                    k(s, o),
                    k(s, l);
            },
            p(t, [s]) {
                e = t;
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), c();
            }
        };
    }
    function xS(t, e, s) {
        let i;
        h(t, Ye, t => s(0, (i = t)));
        return [i, t => f(Ye, (i = !0))];
    }
    class kS extends Pt {
        constructor(t) {
            super(), _t(this, t, xS, wS, o, {});
        }
    }
    function $S(t, e, s) {
        const i = t.slice();
        return (i[4] = e[s]), i;
    }
    function SS(t) {
        let e,
            s,
            i,
            n,
            a,
            r = Lg(t[4].viewers) + "",
            o = Lg(t[4].followers) + "";
        return {
            c() {
                (e = E("div")),
                    (s = E("span")),
                    (i = C(r)),
                    (n = T()),
                    (a = C(o)),
                    U(s, "class", "textgreen"),
                    U(e, "class", "bold viewcount textbox svelte-13wcf6i");
            },
            m(t, r) {
                $(t, e, r), k(e, s), k(s, i), k(e, n), k(e, a);
            },
            p(t, e) {
                2 & e && r !== (r = Lg(t[4].viewers) + "") && z(i, r),
                    2 & e && o !== (o = Lg(t[4].followers) + "") && z(a, o);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function MS(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l = t[4].name + "",
            c = (t[4].viewers || t[4].followers) && SS(t);
        return {
            c() {
                (e = E("a")),
                    (s = E("div")),
                    c && c.c(),
                    (i = E("div")),
                    (n = C(l)),
                    U(i, "class", "name textbox svelte-13wcf6i"),
                    U(s, "class", "border black preview svelte-13wcf6i"),
                    U(
                        s,
                        "style",
                        (a =
                            "background-image:url(" +
                            (t[4].preview || "") +
                            "); " +
                            (t[0] ? "margin-top:2px;" : ""))
                    ),
                    U(e, "class", "fadeIn stream svelte-13wcf6i"),
                    U(e, "target", "_blank"),
                    U(e, "rel", "noopener noreferrer"),
                    U(e, "href", (r = t[4].url)),
                    U(e, "style", (o = t[0] ? "" : "width:calc(100%/6);"));
            },
            m(t, a) {
                $(t, e, a), k(e, s), c && c.m(s, null), k(s, i), k(i, n);
            },
            p(t, h) {
                t[4].viewers || t[4].followers
                    ? c
                        ? c.p(t, h)
                        : ((c = SS(t)).c(), c.m(s, i))
                    : c && (c.d(1), (c = null)),
                    2 & h && l !== (l = t[4].name + "") && z(n, l),
                    3 & h &&
                        a !==
                            (a =
                                "background-image:url(" +
                                (t[4].preview || "") +
                                "); " +
                                (t[0] ? "margin-top:2px;" : "")) &&
                        U(s, "style", a),
                    2 & h && r !== (r = t[4].url) && U(e, "href", r),
                    1 & h &&
                        o !== (o = t[0] ? "" : "width:calc(100%/6);") &&
                        U(e, "style", o);
            },
            d(t) {
                t && S(e), c && c.d();
            }
        };
    }
    function ES(e) {
        let s,
            i,
            n = e[1],
            a = [];
        for (let t = 0; t < n.length; t += 1) a[t] = MS($S(e, n, t));
        return {
            c() {
                s = E("div");
                for (let t = 0; t < a.length; t += 1) a[t].c();
                U(
                    s,
                    "style",
                    (i =
                        "pointer-events: all; " +
                        (e[0]
                            ? "float:right; clear:right; width:150px;"
                            : "display: flex; justify-content: center;"))
                );
            },
            m(t, e) {
                $(t, s, e);
                for (let t = 0; t < a.length; t += 1) a[t].m(s, null);
            },
            p(t, [e]) {
                if (3 & e) {
                    let i;
                    for (n = t[1], i = 0; i < n.length; i += 1) {
                        const r = $S(t, n, i);
                        a[i]
                            ? a[i].p(r, e)
                            : ((a[i] = MS(r)), a[i].c(), a[i].m(s, null));
                    }
                    for (; i < a.length; i += 1) a[i].d(1);
                    a.length = n.length;
                }
                1 & e &&
                    i !==
                        (i =
                            "pointer-events: all; " +
                            (t[0]
                                ? "float:right; clear:right; width:150px;"
                                : "display: flex; justify-content: center;")) &&
                    U(s, "style", i);
            },
            i: t,
            o: t,
            d(t) {
                t && S(s), M(a, t);
            }
        };
    }
    function CS(t, e, s) {
        let i,
            { vertical: n = !1 } = e,
            a = [];
        n && a.push({ name: "Loading streams..." });
        const r = async () => {
            (i = setTimeout(r, 1e4)),
                s(1, (a = await Lk("/api/twitch/streams", { max: 6 }))),
                n &&
                    0 === a.length &&
                    a.push({ name: "No streams, refreshing..." });
        };
        return (
            V(r),
            J(t => {
                i && clearTimeout(i);
            }),
            (t.$set = t => {
                "vertical" in t && s(0, (n = t.vertical));
            }),
            [n, a]
        );
    }
    class TS extends Pt {
        constructor(t) {
            super(), _t(this, t, CS, ES, o, { vertical: 0 });
        }
    }
    function _S(t) {
        let e,
            s,
            i,
            n,
            a,
            r,
            o,
            l,
            c,
            h,
            d = t[1][1] + "",
            u = t[1][0] + "",
            m = t[1][2] + "";
        return {
            c() {
                (e = E("small")),
                    (s = E("div")),
                    (i = C(d)),
                    (n = C(" fps")),
                    (a = E("div")),
                    (r = C(u)),
                    (o = C(" ms")),
                    (l = E("div")),
                    (c = C(m)),
                    (h = C(" KBs")),
                    U(s, "class", "textgreen"),
                    U(a, "class", "textcyan"),
                    U(l, "class", "textorange"),
                    U(e, "class", "marg-top bar btn black grey svelte-1apx3f3");
            },
            m(t, d) {
                $(t, e, d),
                    k(e, s),
                    k(s, i),
                    k(s, n),
                    k(e, a),
                    k(a, r),
                    k(a, o),
                    k(e, l),
                    k(l, c),
                    k(l, h);
            },
            p(t, e) {
                2 & e && d !== (d = t[1][1] + "") && z(i, d),
                    2 & e && u !== (u = t[1][0] + "") && z(r, u),
                    2 & e && m !== (m = t[1][2] + "") && z(c, m);
            },
            d(t) {
                t && S(e);
            }
        };
    }
    function PS(e) {
        let s,
            i = e[0] && _S(e);
        return {
            c() {
                i && i.c(), (s = _());
            },
            m(t, e) {
                i && i.m(t, e), $(t, s, e);
            },
            p(t, [e]) {
                t[0]
                    ? i
                        ? i.p(t, e)
                        : ((i = _S(t)).c(), i.m(s.parentNode, s))
                    : i && (i.d(1), (i = null));
            },
            i: t,
            o: t,
            d(t) {
                i && i.d(t), t && S(s);
            }
        };
    }
    function US(t, e, s) {
        let i, n;
        return (
            h(t, vs, t => s(0, (i = t))), h(t, oe, t => s(1, (n = t))), [i, n]
        );
    }
    class IS extends Pt {
        constructor(t) {
            super(), _t(this, t, US, PS, o, {});
        }
    }
    let zS = void 0;
    const AS = {},
        DS = t => (
            void 0 === zS && (zS = getComputedStyle(document.body)),
            void 0 !== AS[t] ? AS[t] : (AS[t] = zS.getPropertyValue("--" + t))
        ),
        RS = document.createElement("canvas"),
        BS = RS.getContext("2d"),
        FS = document.createElement("img");
    let NS = !1;
    const LS = {
            player: "#fff",
            monster: "#D53434",
            pvp: DS("pvp"),
            friendly: DS("health"),
            party: DS("party")
        },
        OS = t => {
            const e = RS.parentElement.parentElement.parentElement,
                s = Math.min(e.offsetWidth, e.offsetHeight);
            let i = Math.round(
                t ? 0.8 * s : Math.max(150, Math.min(200, 0.2 * s))
            );
            i % 2 != 0 && (i += 1),
                (GS = (RS.width = i) / 2),
                (jS = (RS.height = i) / 2);
        };
    let qS = 0;
    const HS = (t, e, s, i, n, a) => {
        if (!vi.mapShowMonsters && 1 === s) return;
        const r = VS(t, e);
        if (!(r[0] < 1 || r[1] < 1 || r[0] >= RS.width || r[1] >= RS.height))
            if (0 === s) {
                if (NS && n && Wn.smoothtime % 1 > 0.5) return;
                (BS.fillStyle =
                    0 === i
                        ? a
                            ? LS.player
                            : n
                            ? LS.party
                            : LS.friendly
                        : LS.pvp),
                    BS.fillRect(...r, 5, 5);
            } else
                (BS.fillStyle = i > 0 ? LS.monster : LS.friendly),
                    BS.fillRect(...r, 3, 3);
    };
    let WS = 0,
        ZS = 0,
        jS = 0,
        GS = 0;
    const VS = (t, e) => [
        Math.round((t / Wn.bounds) * (NS ? RS.width : FS.width) - WS),
        Math.round((e / Wn.bounds) * (NS ? RS.height : FS.height) - ZS)
    ];
    var YS = Object.freeze({
        __proto__: null,
        canvas: RS,
        init: () => {
            oo.map.onPress(() => {
                OS((NS = !NS));
            });
        },
        changeCanvas: OS,
        postTick: t => {
            qS++,
                !FS.complete ||
                    !Wn.player ||
                    (vi.mapLowQuality && qS % 10 != 0) ||
                    (NS
                        ? ((WS = ZS = 0),
                          BS.drawImage(FS, 0, 0, RS.width, RS.height))
                        : ((WS = (FS.width * Wn.player.wU[0]) / Wn.bounds - GS),
                          (ZS = (FS.height * Wn.player.wU[2]) / Wn.bounds - jS),
                          BS.drawImage(FS, -Math.round(WS), -Math.round(ZS))),
                    Wn.entities.array.forEach(t => {
                        t.stats &&
                            t.stats.alive &&
                            HS(
                                t.wU[0],
                                t.wU[2],
                                t.constructor.type,
                                Wn.player.hostility(t),
                                t.party > 0 && t.party === Wn.player.party,
                                t === Wn.player
                            );
                    }),
                    Wn.party.forEach(t => {
                        t.wU &&
                            !Wn.entity(t.id) &&
                            HS(t.wU[0], t.wU[1], 0, 0, Wn.player.party, !1);
                    }));
        },
        onWorldEnter: t => {
            FS.src = (t => `/assets/ui/maps/${t}.${$r}?v=35201089`)(t.id);
        },
        onWorldDestroy: t => {}
    });
    function JS(e) {
        let s;
        return {
            c() {
                U(
                    (s = E("div")),
                    "class",
                    "marg-top container panel-black svelte-hiyby7"
                );
            },
            m(t, i) {
                $(t, s, i), e[1](s);
            },
            p: t,
            i: t,
            o: t,
            d(t) {
                t && S(s), e[1](null);
            }
        };
    }
    function XS(t, e, s) {
        let i;
        return (
            V(() => {
                i.appendChild(RS), OS(!1);
            }),
            [
                i,
                function (t) {
                    tt[t ? "unshift" : "push"](() => {
                        s(0, (i = t));
                    });
                }
            ]
        );
    }
    class QS extends Pt {
        constructor(t) {
            super(), _t(this, t, XS, JS, o, {});
        }
    }
    function KS(t) {
        let e;
        const s = new kS({});
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function tM(t) {
        let e;
        const s = new TS({ props: { vertical: !0 } });
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function eM(t) {
        let e, s, i, n, a, r, o, l;
        const c = new Fb({}),
            h = new Ud({});
        let d =
            t[0] &&
            !t[0].subscribed_until &&
            (t[1] || t[2] || t[3] || t[4] || t[5]) &&
            KS();
        const u = new Nk({}),
            m = new Nd({}),
            p = new Zb({}),
            f = new vg({}),
            g = new Tk({}),
            v = new sg({}),
            y = new wb({}),
            b = new zb({}),
            w = new Jb({}),
            x = new Cw({}),
            M = new wk({}),
            C = new Nw({}),
            T = new tx({}),
            P = new fx({}),
            I = new Ex({}),
            z = new tk({}),
            A = new A$({}),
            D = new bS({}),
            R = new sw({}),
            B = new QS({}),
            F = new IS({}),
            N = new aw({});
        let L = t[6] && tM();
        const O = new cv({}),
            q = new lb({}),
            H = new F$({}),
            W = new Ik({});
        return {
            c() {
                Et(c.$$.fragment),
                    (e = E("div")),
                    Et(h.$$.fragment),
                    (s = E("div")),
                    d && d.c(),
                    (i = _()),
                    Et(u.$$.fragment),
                    Et(m.$$.fragment),
                    Et(p.$$.fragment),
                    Et(f.$$.fragment),
                    Et(g.$$.fragment),
                    Et(v.$$.fragment),
                    Et(y.$$.fragment),
                    Et(b.$$.fragment),
                    Et(w.$$.fragment),
                    Et(x.$$.fragment),
                    Et(M.$$.fragment),
                    Et(C.$$.fragment),
                    Et(T.$$.fragment),
                    Et(P.$$.fragment),
                    Et(I.$$.fragment),
                    Et(z.$$.fragment),
                    Et(A.$$.fragment),
                    Et(D.$$.fragment),
                    (n = E("div")),
                    Et(R.$$.fragment),
                    Et(B.$$.fragment),
                    Et(F.$$.fragment),
                    Et(N.$$.fragment),
                    L && L.c(),
                    (a = E("div")),
                    (r = E("div")),
                    (o = E("div")),
                    Et(O.$$.fragment),
                    Et(q.$$.fragment),
                    Et(H.$$.fragment),
                    Et(W.$$.fragment),
                    U(n, "class", "l-corner-ur uiscaled"),
                    U(s, "class", "container svelte-1j9lddf"),
                    U(o, "class", "actionbarcontainer svelte-1j9lddf"),
                    U(r, "class", "uiscaled"),
                    U(a, "class", "container svelte-1j9lddf"),
                    U(e, "class", "l-ui layout svelte-1j9lddf");
            },
            m(t, S) {
                Ct(c, t, S),
                    $(t, e, S),
                    Ct(h, e, null),
                    k(e, s),
                    d && d.m(s, null),
                    k(s, i),
                    Ct(u, s, null),
                    Ct(m, s, null),
                    Ct(p, s, null),
                    Ct(f, s, null),
                    Ct(g, s, null),
                    Ct(v, s, null),
                    Ct(y, s, null),
                    Ct(b, s, null),
                    Ct(w, s, null),
                    Ct(x, s, null),
                    Ct(M, s, null),
                    Ct(C, s, null),
                    Ct(T, s, null),
                    Ct(P, s, null),
                    Ct(I, s, null),
                    Ct(z, s, null),
                    Ct(A, s, null),
                    Ct(D, s, null),
                    k(s, n),
                    Ct(R, n, null),
                    Ct(B, n, null),
                    Ct(F, n, null),
                    Ct(N, n, null),
                    L && L.m(n, null),
                    k(e, a),
                    k(a, r),
                    k(r, o),
                    Ct(O, o, null),
                    Ct(q, o, null),
                    Ct(H, a, null),
                    Ct(W, e, null),
                    (l = !0);
            },
            p(t, [e]) {
                t[0] &&
                !t[0].subscribed_until &&
                (t[1] || t[2] || t[3] || t[4] || t[5])
                    ? d
                        ? vt(d, 1)
                        : ((d = KS()).c(), vt(d, 1), d.m(s, i))
                    : d &&
                      (ft(),
                      yt(d, 1, 1, () => {
                          d = null;
                      }),
                      gt()),
                    t[6]
                        ? L
                            ? vt(L, 1)
                            : ((L = tM()).c(), vt(L, 1), L.m(n, null))
                        : L &&
                          (ft(),
                          yt(L, 1, 1, () => {
                              L = null;
                          }),
                          gt());
            },
            i(t) {
                l ||
                    (vt(c.$$.fragment, t),
                    vt(h.$$.fragment, t),
                    vt(d),
                    vt(u.$$.fragment, t),
                    vt(m.$$.fragment, t),
                    vt(p.$$.fragment, t),
                    vt(f.$$.fragment, t),
                    vt(g.$$.fragment, t),
                    vt(v.$$.fragment, t),
                    vt(y.$$.fragment, t),
                    vt(b.$$.fragment, t),
                    vt(w.$$.fragment, t),
                    vt(x.$$.fragment, t),
                    vt(M.$$.fragment, t),
                    vt(C.$$.fragment, t),
                    vt(T.$$.fragment, t),
                    vt(P.$$.fragment, t),
                    vt(I.$$.fragment, t),
                    vt(z.$$.fragment, t),
                    vt(A.$$.fragment, t),
                    vt(D.$$.fragment, t),
                    vt(R.$$.fragment, t),
                    vt(B.$$.fragment, t),
                    vt(F.$$.fragment, t),
                    vt(N.$$.fragment, t),
                    vt(L),
                    vt(O.$$.fragment, t),
                    vt(q.$$.fragment, t),
                    vt(H.$$.fragment, t),
                    vt(W.$$.fragment, t),
                    (l = !0));
            },
            o(t) {
                yt(c.$$.fragment, t),
                    yt(h.$$.fragment, t),
                    yt(d),
                    yt(u.$$.fragment, t),
                    yt(m.$$.fragment, t),
                    yt(p.$$.fragment, t),
                    yt(f.$$.fragment, t),
                    yt(g.$$.fragment, t),
                    yt(v.$$.fragment, t),
                    yt(y.$$.fragment, t),
                    yt(b.$$.fragment, t),
                    yt(w.$$.fragment, t),
                    yt(x.$$.fragment, t),
                    yt(M.$$.fragment, t),
                    yt(C.$$.fragment, t),
                    yt(T.$$.fragment, t),
                    yt(P.$$.fragment, t),
                    yt(I.$$.fragment, t),
                    yt(z.$$.fragment, t),
                    yt(A.$$.fragment, t),
                    yt(D.$$.fragment, t),
                    yt(R.$$.fragment, t),
                    yt(B.$$.fragment, t),
                    yt(F.$$.fragment, t),
                    yt(N.$$.fragment, t),
                    yt(L),
                    yt(O.$$.fragment, t),
                    yt(q.$$.fragment, t),
                    yt(H.$$.fragment, t),
                    yt(W.$$.fragment, t),
                    (l = !1);
            },
            d(t) {
                Tt(c, t),
                    t && S(e),
                    Tt(h),
                    d && d.d(),
                    Tt(u),
                    Tt(m),
                    Tt(p),
                    Tt(f),
                    Tt(g),
                    Tt(v),
                    Tt(y),
                    Tt(b),
                    Tt(w),
                    Tt(x),
                    Tt(M),
                    Tt(C),
                    Tt(T),
                    Tt(P),
                    Tt(I),
                    Tt(z),
                    Tt(A),
                    Tt(D),
                    Tt(R),
                    Tt(B),
                    Tt(F),
                    Tt(N),
                    L && L.d(),
                    Tt(O),
                    Tt(q),
                    Tt(H),
                    Tt(W);
            }
        };
    }
    function sM(t, e, s) {
        let i, n, a, r, o, l, c;
        return (
            h(t, $e, t => s(0, (i = t))),
            h(t, me, t => s(1, (n = t))),
            h(t, ce, t => s(2, (a = t))),
            h(t, ve, t => s(3, (r = t))),
            h(t, ge, t => s(4, (o = t))),
            h(t, pe, t => s(5, (l = t))),
            h(t, Ve, t => s(6, (c = t))),
            L$(t => {
                t &&
                    t.subscribed_until &&
                    ix("sub", "Hordes Elixir active $gt", !0);
            }),
            [i, n, a, r, o, l, c]
        );
    }
    class iM extends Pt {
        constructor(t) {
            super(), _t(this, t, sM, eM, o, {});
        }
    }
    function nM(t) {
        let e;
        const s = new iM({});
        return {
            c() {
                Et(s.$$.fragment);
            },
            m(t, i) {
                Ct(s, t, i), (e = !0);
            },
            i(t) {
                e || (vt(s.$$.fragment, t), (e = !0));
            },
            o(t) {
                yt(s.$$.fragment, t), (e = !1);
            },
            d(t) {
                Tt(s, t);
            }
        };
    }
    function aM(t) {
        let e, s;
        const i = new Sd({ props: { active: t[0] } });
        let n = "play" == t[1] && t[2] && !t[0] && t[3] && nM();
        const a = new Cd({});
        return {
            c() {
                Et(i.$$.fragment), n && n.c(), (e = _()), Et(a.$$.fragment);
            },
            m(t, r) {
                Ct(i, t, r), n && n.m(t, r), $(t, e, r), Ct(a, t, r), (s = !0);
            },
            p(t, [s]) {
                const a = {};
                1 & s && (a.active = t[0]),
                    i.$set(a),
                    "play" == t[1] && t[2] && !t[0] && t[3]
                        ? n
                            ? vt(n, 1)
                            : ((n = nM()).c(), vt(n, 1), n.m(e.parentNode, e))
                        : n &&
                          (ft(),
                          yt(n, 1, 1, () => {
                              n = null;
                          }),
                          gt());
            },
            i(t) {
                s ||
                    (vt(i.$$.fragment, t),
                    vt(n),
                    vt(a.$$.fragment, t),
                    (s = !0));
            },
            o(t) {
                yt(i.$$.fragment, t), yt(n), yt(a.$$.fragment, t), (s = !1);
            },
            d(t) {
                Tt(i, t), n && n.d(t), t && S(e), Tt(a, t);
            }
        };
    }
    function rM(t, e, s) {
        let i, n, a, r;
        return (
            h(t, Ht, t => s(0, (i = t))),
            h(t, Wt, t => s(1, (n = t))),
            h(t, Lt, t => s(2, (a = t))),
            h(t, ae, t => s(3, (r = t))),
            [i, n, a, r]
        );
    }
    class oM extends Pt {
        constructor(t) {
            super(), _t(this, t, rM, aM, o, {});
        }
    }
    let lM;
    const cM = (
            t,
            e,
            s = 1,
            i = 1,
            n = 1,
            a = 1,
            r = 0,
            o = 0,
            l = 0.5,
            c = 0.5
        ) => {
            lM.globalAlpha = vi.nameplateShowTransparency ? s : 1;
            const h = t.width * i,
                d = t.height * i,
                u = Math.round(h * n),
                m = Math.round(d * a);
            return 0 === u || 0 === m
                ? u
                : (lM.drawImage(
                      t,
                      0,
                      0,
                      Math.round(t.width * n),
                      Math.round(t.height * a),
                      Math.round(e[0] - h * l + r * i),
                      Math.round(e[1] - d * c + o * i),
                      u,
                      m
                  ),
                  u);
        },
        hM = (t, e, s, i, n, a = 0, r = 0, o = 0.5, l = 0.5) =>
            cM(fM(e, s), t, i, n, 1, 1, a, r, o, l),
        dM = (t, e, s = !1) => (
            s ? ((e[0] = t[0]), (e[1] = t[1])) : Ii(e, t, Nn.kX),
            !!(
                s ||
                (e[2] < 1 && e[0] > -1 && e[0] < 1 && e[1] > -1 && e[1] < 1)
            ) &&
                ((e[0] = Math.round(
                    (0.5 * e[0] + 0.5) * qn.canvas2dElement.width
                )),
                (e[1] = Math.round(
                    (-0.5 * e[1] + 0.5) * qn.canvas2dElement.height
                )),
                e)
        ),
        uM = (t, e, s) => {
            (t.font = "bold " + e + "px hordes"),
                (t.shadowColor = "#000"),
                (t.shadowOffsetX = 2),
                (t.shadowOffsetY = -1),
                (t.fillStyle = s);
        },
        mM = {
            name: { fill: DS("name"), size: 18 },
            enemy: { fill: DS("enemy"), size: 18 },
            pvp: { fill: DS("pvp"), size: 18 },
            nameSmall: { fill: DS("name"), size: 14 },
            enemySmall: { fill: DS("enemy"), size: 14 },
            pvpSmall: { fill: DS("pvp"), size: 14 },
            chatGlobal: { fill: DS("global"), size: 14, wrap: 150 },
            chatClan: { fill: DS("clan"), size: 14, wrap: 150 },
            chatParty: { fill: DS("party"), size: 14, wrap: 150 },
            lev0: { fill: "#919191", size: 18 },
            lev1: { fill: DS("name"), size: 18 },
            lev2: { fill: "#EEA303", size: 18 },
            lev3: { fill: DS("enemy"), size: 18 },
            clan: { fill: DS("clan"), size: 18 },
            faction0: { fill: DS("f0"), size: 18 },
            faction1: { fill: DS("f1"), size: 18 },
            faction0Small: { fill: DS("f0"), size: 14 },
            faction1Small: { fill: DS("f1"), size: 14 },
            phys: { fill: DS("name"), size: 28 },
            spell: { fill: DS("spell"), size: 35 },
            heal: { fill: DS("health"), size: 28 },
            mana: { fill: DS("mana"), size: 22 },
            exp: { fill: DS("exp"), size: 28 },
            fame: { fill: DS("fame"), size: 28 },
            gold: { fill: "#EEDDA3", size: 16 },
            misc: { fill: "#A6EBFA", size: 16 },
            book: { fill: "#749DEF", size: 20 },
            rune: { fill: "#DC9A4D", size: 20 },
            itemgrey: { fill: "#747474", size: 16 },
            common: { fill: "#dddddd", size: 20 },
            uncommon: { fill: DS("green"), size: 20 },
            rare: { fill: DS("blue"), size: 20 },
            epic: { fill: DS("purp"), size: 20 },
            pheal: { fill: DS("health"), size: 22 },
            pdmg: { fill: DS("enemy"), size: 22 }
        },
        pM = {},
        fM = (t, { fill: e, size: s, wrap: i = 0 }) => {
            const n = t + e + s;
            if (pM[n]) return pM[n];
            const a = document.createElement("canvas"),
                r = a.getContext("2d");
            return (
                (r.font = "bold " + s + "px hordes"),
                i > 0
                    ? vM(a, r, t, 0, 0, i, s, e)
                    : ((a.width =
                          Math.max(1, Math.ceil(r.measureText(t).width)) + 5),
                      (a.height = Math.ceil(1.2 * s + 5)),
                      uM(r, s, e),
                      r.fillText(t, 0, a.height - 6)),
                (pM[n] = a),
                a
            );
        },
        gM = (t, e, s, i, n, a, r) => {
            t ||
                (((t = document.createElement("canvas")).width = s),
                (t.height = i));
            const o = t.getContext("2d");
            return (
                (o.fillStyle = e),
                o.beginPath(),
                o.moveTo(n + r, a),
                o.arcTo(n + s, a, n + s, a + i, r),
                o.arcTo(n + s, a + i, n, a + i, r),
                o.arcTo(n, a + i, n, a, r),
                o.arcTo(n, a, n + s, a, r),
                o.closePath(),
                o.fill(),
                t
            );
        },
        vM = (t, e, s, i, n, a, r, o) => {
            const l = s.split(" "),
                c = [];
            let h = 0,
                d = "";
            for (let t = 0; t < l.length; ++t) {
                const s = d + l[t] + " ",
                    i = e.measureText(s);
                i.width > a
                    ? (c.push(d), (d = l[t] + " "))
                    : ((h = Math.max(h, i.width)), (d = s));
            }
            c.push(d),
                (t.width = Math.ceil(h + 5)),
                (t.height = Math.ceil(c.length * r + 10)),
                gM(t, "#00000099", t.width, t.height, 0, 0, 5),
                uM(e, r, o);
            for (let t = 0; t < c.length; ++t)
                e.fillText(c[t], i + 5, (t + 1) * r + 3);
        },
        yM = [],
        bM = (t, e, s, i, n = !1) => {
            xM(
                t,
                n,
                3 === s,
                n || 3 !== s,
                0 === s ? "Miss" : e + (1 === s ? "🛡️" : ""),
                n ? mM.pdmg : 1 === i ? mM.spell : mM.phys,
                3.5,
                -0.3
            );
        },
        wM = (t, e, s, i = !1) => {
            xM(t, i, 3 === s, i || 3 !== s, e, i ? mM.pheal : mM.heal, 3, 0);
        },
        xM = (t, e = !1, s = !1, i = !1, n, a, r, o) => {
            e ||
                ((t[1] += r), (t[0] += Dr(-0.5, 0.5)), (t[2] += Dr(-0.5, 0.5))),
                yM.push({
                    wU: t,
                    flat: e,
                    crit: s,
                    float: i,
                    text: n,
                    style: a,
                    time: o
                });
        },
        kM = new Set(),
        $M = (t, e, s) => {
            for (let i = s.length - 1; i >= 0; i--) {
                const n = s[i];
                (n == e || Ti(e.wU, n.wU) < 25) &&
                    (t.push(n), $i(t.wU, t.wU, n.wU), s.splice(i, 1));
            }
        },
        SM = (t, e) => {
            wi(t.hudPos, t.visualPosition || t.wU),
                dM(t.hudPos, t.hudPos) && t.hudPos[2] < 0.997 && e.push(t);
        },
        MM = [];
    let EM, CM;
    const TM = (t, e) => {
            let s = t.transform && t.transform.cDist;
            if (s > vi.nameplateViewRange) return;
            s ? (s /= 70) : (s = 0);
            const i = t.party > 0 && t.party === Wn.player.party,
                n = t.id === Wn.player.target,
                a = void 0 !== t.faction ? Wn.player.hostility(t) : 0,
                r = t.id === Mg;
            if (3 !== t.constructor.type && t.stats && t.stats.alive) {
                if (!vi.nameplateShowMonsers && 1 === t.constructor.type)
                    return;
                const e = n ? 1 : 0.7 * Math.max(0.1, Math.min(1, 1 - s)),
                    o = n || i ? 1 : Math.min(0.8, r ? 0.9 : 0.75 * e + 0.2),
                    l = Math.round(10 * e),
                    c = MM[l - 1],
                    h = void 0 !== t.skills.timedSkill;
                if (
                    (t !== Wn.player &&
                        n &&
                        cM(
                            h ? CM : EM,
                            t.hudPos,
                            0.8,
                            1,
                            1,
                            h ? 2 : 1,
                            0,
                            h ? 4 : 0
                        ),
                    h)
                ) {
                    const e = c[0].height - 3,
                        s = na(
                            t.skills.timedCast.fraction(Wn.smoothtime),
                            0,
                            1
                        );
                    cM(c[0], t.hudPos, o, 1, 1, 1, 0, e),
                        s > 0 && cM(c[6], t.hudPos, o, 1, s, 1, 0, e);
                }
                if (
                    t !== Wn.player &&
                    (cM(c[0], t.hudPos, o, 1, 1, h ? 2 : 1),
                    cM(
                        i
                            ? c[3]
                            : 0 === a
                            ? c[1]
                            : a > 1
                            ? t.canCombatInteract(Wn.player)
                                ? c[4]
                                : c[5]
                            : c[2],
                        t.hudPos,
                        o,
                        1,
                        t.stats.getResource(6) / t.stats.getStat(6),
                        1
                    ),
                    t.clan &&
                        hM(
                            Pn(
                                ta,
                                t.hudPos[0] - c[0].width / 2 + 2,
                                t.hudPos[1]
                            ),
                            t.clan,
                            t.clan == Wn.player.clan
                                ? mM.clan
                                : 0 === t.faction
                                ? mM.faction0
                                : mM.faction1,
                            o,
                            1,
                            0,
                            0,
                            1
                        ),
                    t.level)
                ) {
                    let e = mM.lev1;
                    a > 0 &&
                        (t.level - Wn.player.level > 4
                            ? (e = mM.lev3)
                            : t.level - Wn.player.level > 1
                            ? (e = mM.lev2)
                            : t.level - Wn.player.level < -5 && (e = mM.lev0)),
                        hM(
                            Pn(
                                ta,
                                t.hudPos[0] + c[0].width / 2 + 3,
                                t.hudPos[1]
                            ),
                            t.level,
                            e,
                            o,
                            1,
                            0,
                            0,
                            0
                        );
                }
            }
            if (t === Wn.player || n || t.faction < 2 || r) {
                const e =
                    3 === t.constructor.type &&
                    r &&
                    !t.canBePickedUpBy(Wn.player)
                        ? 0.5
                        : n || 3 === t.constructor.type
                        ? 1
                        : r
                        ? 0.9
                        : 0.7 * Math.max(0.1, Math.min(1, 1 - s));
                let i;
                3 === t.constructor.type
                    ? (i = t.partyTimeoutCheck(Wn.player)
                          ? mM[t.color]
                          : mM.itemgrey)
                    : 0 === a
                    ? (i = n ? mM.name : mM.nameSmall)
                    : 1 === a
                    ? (i = n ? mM.enemy : mM.enemySmall)
                    : 2 === a && (i = n ? mM.pvp : mM.pvpSmall);
                const o = n ? -18 : -13,
                    l = hM(
                        t.hudPos,
                        t.name,
                        i,
                        e,
                        1,
                        t == Wn.player && t.clan ? 5 * t.clan.length : 0,
                        o
                    );
                t.clan &&
                    t == Wn.player &&
                    hM(
                        Pn(ta, t.hudPos[0] - l / 2 + 2, t.hudPos[1]),
                        t.clan,
                        0 === t.faction
                            ? n
                                ? mM.faction0
                                : mM.faction0Small
                            : n
                            ? mM.faction1
                            : mM.faction1Small,
                        e,
                        1,
                        5 * t.clan.length,
                        o,
                        1
                    );
            }
            t.speechText &&
                hM(
                    t.hudPos,
                    t.speechText,
                    t.speechStyle,
                    1,
                    1,
                    0,
                    n ? -30 : -20,
                    0.5,
                    1
                );
        },
        _M = t => {
            kM.clear();
            let e = (() => {
                const t = [];
                return (
                    Wn.entities.array.forEach((e, s) => {
                        (e.stats && !e.stats.alive) ||
                            !e.transform.visible ||
                            (e.id !== Wn.player.target &&
                                e.transform.cDist &&
                                e.transform.cDist > 60) ||
                            (3 === e.constructor.type && e.id !== Mg) ||
                            (wi(e.hudPos, e.visualPosition || e.wU),
                            (e.hudPos[1] +=
                                0.7 +
                                (e.transform.getTopAbsolute
                                    ? e.transform.getTopAbsolute()
                                    : 0)),
                            dM(e.hudPos, e.hudPos) &&
                                (e === Wn.player &&
                                    ((e.hudPos[0] = Math.round(
                                        0.5 * qn.canvas2dElement.width
                                    )),
                                    (e.hudPos[1] = Math.round(
                                        0.5 * qn.canvas2dElement.height
                                    ))),
                                t.push(e)));
                    }),
                    t.sort((t, e) => e.hudPos[2] - t.hudPos[2])
                );
            })();
            Dg(e),
                (e = e.sort((t, e) =>
                    t.id === Wn.player.target || t.id === Mg
                        ? 1
                        : e.id === Wn.player.target || e.id === Mg
                        ? -1
                        : e.hudPos[2] - t.hudPos[2]
                )),
                xi(Kn, 0, 0, 0),
                e.forEach(TM);
        };
    const PM = [
        Object.freeze({
            __proto__: null,
            init: () => {
                ((lM = qn.canvas2dContext).font = "bold 18px hordes"),
                    lM.fillText("Hordes", 0, 0),
                    (() => {
                        for (let t = 1; t <= 10; ++t) {
                            const e = [],
                                s = (t + 3) / 13,
                                i = Math.ceil(90 * s),
                                n = Math.max(10, Math.ceil(12 * s)),
                                a = Math.max(1, Math.ceil(3 * s)),
                                r = i - 6,
                                o = n - 6;
                            e.push(gM(null, DS("panel"), i, n, 0, 0, a)),
                                gM(e[0], DS("grey"), r, o, 3, 3, 1),
                                e.push(gM(null, DS("health"), r, o, 0, 0, 1)),
                                e.push(gM(null, DS("enemy"), r, o, 0, 0, 1)),
                                e.push(gM(null, DS("party"), r, o, 0, 0, 1)),
                                e.push(gM(null, DS("pvp"), r, o, 0, 0, 1)),
                                e.push(gM(null, "#555555", r, o, 0, 0, 1)),
                                e.push(gM(null, DS("spell"), r, o, 0, 0, 1)),
                                MM.push(e);
                        }
                        (EM = gM(null, "#ffffff", 94, 16, 0, 0, 4)),
                            (CM = gM(null, "#ffffff", 94, 25, 0, 0, 4));
                    })();
            },
            postTick: t => {
                oo.shift.down
                    ? (t => {
                          let e = [];
                          Wn.entities.array.forEach(t => {
                              !t.transform.visible ||
                                  3 !== t.constructor.type ||
                                  t.quality < vi.itemQualityFilter ||
                                  SM(t, e);
                          }),
                              kM.forEach(t => {
                                  t.uiTimeout < Wn.time
                                      ? kM.delete(t)
                                      : SM(t, e);
                              }),
                              (e = e.sort((t, e) => e.id - t.id));
                          const s = new Set();
                          for (; e.length; ) {
                              const t = e[0],
                                  i = [];
                              (i.wU = [0, 0, 0]),
                                  $M(i, t, e),
                                  Mi(i.wU, i.wU, 1 / i.length),
                                  xi(
                                      i.wU,
                                      Math.round(i.wU[0]),
                                      Math.round(i.wU[1]),
                                      Math.round(i.wU[2])
                                  ),
                                  dM(i.wU, i.wU)
                                      ? s.add(
                                            i.sort(
                                                (t, e) =>
                                                    t.hudPos[2] - e.hudPos[2]
                                            )
                                        )
                                      : s.delete(i);
                          }
                          let i = 0;
                          Array.from(s)
                              .sort((t, e) => e.wU[2] - t.wU[2])
                              .forEach(t => {
                                  const e = (t.length / 5) * 100;
                                  let s = 0,
                                      n = 0;
                                  t.forEach((a, r) => {
                                      a.hudTextImg ||
                                          (a.hudTextImg = fM(
                                              a.name,
                                              mM[a.color]
                                          ));
                                      const o = a.hudTextImg.width,
                                          l =
                                              Math.round(
                                                  t.wU[0] + n - 0.5 * e
                                              ) - 2,
                                          c = Math.round(t.wU[1] - 20 * s) - 8;
                                      if (0 === a.uiTimeout) {
                                          const t = a.canBePickedUpBy(
                                                  Wn.player
                                              ),
                                              e = a.partyTimeoutCheck(
                                                  Wn.player
                                              );
                                          t &&
                                          !(
                                              ao[0] > l + o ||
                                              ao[1] > c + 20 ||
                                              ao[0] < l ||
                                              ao[1] < c
                                          )
                                              ? ((i = a.id),
                                                (lM.globalAlpha = 1))
                                              : (lM.globalAlpha = t
                                                    ? 0.4
                                                    : 0.1),
                                              (lM.fillStyle = "#000000"),
                                              lM.beginPath(),
                                              lM.rect(l, c, o, 20),
                                              lM.fill(),
                                              hM(
                                                  Pn(ta, l + 2, c + 8),
                                                  a.name,
                                                  e ? mM[a.color] : mM.itemgrey,
                                                  t ? 1 : 0.8,
                                                  1,
                                                  0,
                                                  0,
                                                  0
                                              );
                                      }
                                      (n += o + 3) > e && (s++, (n = 0));
                                  });
                              }),
                              i !== Mg && Ug(i);
                      })()
                    : _M(),
                    (t => {
                        for (let e = 0; e < yM.length; e++) {
                            const s = yM[e];
                            if (((s.time += t), s.time > 2)) yM.splice(e--, 1);
                            else if (s.time > 0) {
                                s.float && (s.wU[1] += s.flat ? 0.15 * t : t);
                                const e = dM(s.wU, Gn, s.flat);
                                e &&
                                    hM(
                                        e,
                                        s.text,
                                        s.style,
                                        Math.min(
                                            1,
                                            6 - s.time * (s.crit ? 2 : 3)
                                        ),
                                        s.crit
                                            ? 1.8 +
                                                  6 *
                                                      Math.max(
                                                          0,
                                                          0.5 - 3 * s.time
                                                      )
                                            : 1
                                    );
                            }
                        }
                    })(t);
            }
        }),
        Rg,
        Eb,
        YS,
        Of,
        rd
    ];
    new (class extends Pt {
        constructor(t) {
            super(), _t(this, t, rM, aM, o, {});
        }
    })({ target: document.querySelector("body") });
    let UM = !1;
    const IM = t => {
            PM.forEach(e => {
                e.onWorldEnter && e.onWorldEnter(t);
            }),
                (UM = !0);
        },
        zM = t => {
            UM &&
                PM.forEach(e => {
                    e.onWorldDestroy && e.onWorldDestroy(t);
                }),
                (UM = !1);
        },
        AM = {};
    let DM;
    const RM = t => {
        DM = t;
    };
    let BM;
    const FM = t => {
            BM = t;
        },
        NM = (t, e, s) => {
            ((e = e || {}).invisible = e.invisible || !1),
                (e.receiveShadow =
                    void 0 === e.receiveShadow || e.receiveShadow),
                (e.throwShadow = void 0 === e.throwShadow || e.throwShadow);
            const i = (t => {
                let e = 0;
                for (let s = 0, i = t.length; s < i; s++)
                    e = Math.imul(31, e) + t.charCodeAt(s);
                return 2147483647 & e;
            })(t);
            AM[i] = {
                name: t,
                geometry: BM + "/" + (s || t + ".ho"),
                texture: DM,
                meta: e
            };
        };
    RM("atlas1"),
        FM("city_vg"),
        NM("city_vg_column", { coll: [tp, 3.59, 8.08, 3.59] }),
        NM("city_vg_gate01"),
        NM("city_vg_house01", { coll: [tp, 12, 15.6, 10.8] }),
        NM("city_vg_house_stone_red_roof", { coll: [tp, 12, 15.6, 10.8] }),
        NM("city_vg_house_small", { coll: [tp, 12.2, 12.2, 10.7] }),
        NM("city_vg_house_barn_small", { coll: [tp, 12.2, 12.2, 10.7] }),
        NM("city_vg_house_extra_overhang_01", { coll: [tp, 3.5, 5, 3.5] }),
        NM("city_vg_house_tower_01"),
        NM("city_vg_house_extra_connection_01", { coll: [tp, 8.5, 5, 3.5] }),
        NM("city_vg_plaza_round"),
        NM("city_vg_plaza_square"),
        NM("city_vg_plaza_star"),
        NM("city_vg_tower01", { coll: [tp, 9.34, 26.06, 9.34] }),
        NM("city_vg_tower02"),
        NM("city_vg_tower04", { coll: [Km, 1.7, 6] }),
        NM("city_vg_tower_round_base01", { coll: [Km, 4, 5] }),
        NM("city_vg_tower_round_top01", { coll: [Km, 3, 2] }),
        NM("city_vg_wall01", { coll: [tp, 13.2, 7.78, 2.45] }),
        NM("city_vg_wall_01_broken", { coll: [tp, 2.2, 2.2, 1] }),
        NM("city_vg_door"),
        NM("city_vg_bridge_01", { coll: [tp, 8, 3, 17] }),
        NM("vg_cart_01", { coll: [tp, 11.5, 10.5, 6.5] }),
        FM("city_bloodlust"),
        NM("city_bloodlust_wall_01"),
        NM("city_bloodlust_building_main_house", { coll: [Km, 14.5, 10] }),
        FM("city_vg/deco"),
        NM("city_vg_deco_bench_01", { coll: [tp, 1, 0.05, 0.5] }),
        NM("city_vg_deco_bush_double_01", { coll: [tp, 1, 1, 2] }),
        NM("city_vg_deco_fence_stone_01", { coll: [tp, 2.5, 1.3, 0.4] }),
        NM("city_vg_deco_fountain_01", { coll: [Km, 6.3, 9] }),
        NM("city_vg_deco_tree_medium_01", { coll: [tp, 0.2, 1.5, 0.2] }),
        NM("city_vg_deco_well_square_roof_01", { coll: [tp, 1, 1.5, 1] }),
        NM("city_vg_deco_lamp"),
        FM("foliage"),
        NM("foliage_fern_01"),
        NM("foliage_palm_tree_01", { coll: [Km, 0.3, 5] }),
        FM("misc"),
        NM("misc_barrel_01", { coll: [Km, 0.3, 0.6] }),
        NM("misc_crate_01", { coll: [tp, 0.7, 0.7, 0.7] }),
        NM("misc_campfire_1", { coll: [Km, 0.6, 1] }),
        NM("misc_fence_01", { coll: [tp, 3, 1.8, 0.5] }),
        NM("misc_anvil", { coll: [tp, 2.15, 1.18, 1] }),
        NM("misc_boat_small_01", { coll: [tp, 5.5, 2, 2.5] }),
        NM("misc_mine_entrance", { coll: [tp, 4, 7, 4] }),
        NM("misc_pier_01", { coll: [tp, 3.1, 0.8, 3.1] }),
        NM("misc_tent_01", { coll: [tp, 5, 4.5, 3.8] }),
        NM("misc_platform", { coll: [tp, 8.9, 6.45, 8.3] }),
        NM("misc_lookout", { coll: [tp, 4, 6, 4] }),
        NM("misc_bridge_big", { coll: [tp, 15, 40, 8] }),
        NM("misc_cart_01", { coll: [tp, 8.8, 5.3, 5.3] }),
        NM("misc_stone_rock_slab_quarry_01", { coll: [tp, 8.8, 8.8, 8.8] }),
        NM("misc_quarry_crane_01", { coll: [tp, 6.14, 16.5, 19.5] }),
        NM("misc_ladder_wood", { coll: [tp, 1.8, 5.2, 1.8] }),
        NM("misc_foliage_tree_dead", { coll: [Km, 2.6, 7.7] }),
        NM("misc_market_stand"),
        NM("misc_house_wood_01", { coll: [tp, 5, 5.5, 5.2] }),
        NM("misc_building_desert_house_hut_adobe_tall", {
            coll: [tp, 8.35, 11.55, 8.35]
        }),
        NM("misc_building_desert_house_hut_adobe_small", {
            coll: [tp, 8.35, 6.35, 10.85]
        }),
        NM("misc_foliage_desert_cactus_big", { coll: [Km, 0.8, 2.75] }),
        NM("misc_foliage_desert_cactus_small", { coll: [Km, 1.35, 1.25] }),
        NM("misc_fortification_wood_details_01", { coll: [tp, 2.75, 1.55, 1] }),
        NM("misc_fortification_wood_wall_01", { coll: [tp, 12.5, 6.8, 6.6] }),
        NM("misc_fortification_wood_tower_01", { coll: [tp, 8, 10.7, 8] }),
        NM("misc_fortification_wood_bridge_01", { coll: [tp, 8.7, 1, 4.4] }),
        NM("misc_flag_vg_01", { double: !0, coll: [tp, 0.6, 1.6, 0.15] }),
        NM("misc_flag_vg_02", { double: !0 }),
        NM("misc_flag_bl_01", { double: !0, coll: [tp, 0.6, 1.6, 0.15] }),
        NM("misc_flag_bl_02", { double: !0 }),
        NM("misc_palisade_01", { coll: [tp, 7.8, 7, 1.5] }),
        NM("misc_palisade_solo", { coll: [tp, 1.2, 6.4, 1.2] }),
        NM("misc_wood_wall_01", { coll: [tp, 6.4, 5.5, 2.5] }),
        NM("misc_grave_stone_01", { coll: [tp, 0.5, 1.2, 0.8] }),
        NM("misc_grave_stone_02", { coll: [tp, 0.5, 1.2, 0.8] }),
        NM("misc_grave_wood_01", { coll: [tp, 0.5, 1.2, 0.8] }),
        NM("misc_graveyard_coffin_01", { coll: [tp, 2.13, 1.63, 3.5] }),
        NM("misc_graveyard_coffin_open_01", { coll: [tp, 2.13, 1.63, 3.5] }),
        NM("misc_statue_cyclops", { coll: [Km, 5, 20] }),
        NM("misc_cage_01", { coll: [tp, 2.6, 4, 2.6] }),
        NM("misc_sign", { coll: [tp, 1.8, 1.5, 0.5] }),
        NM("misc_ruins_big_dome_01", { coll: [Km, 20.5, 8.39] }),
        NM("misc_ruins_big_dome_01_broken", { coll: [Km, 20.5, 11.9] }),
        NM("misc_ruins_big_tower_01", { coll: [tp, 8.77, 18.08, 8.77] }),
        NM("misc_ruins_big_tower_broken_01", { coll: [tp, 8.77, 13.1, 8.77] }),
        NM("misc_ruins_big_wall_01", { coll: [tp, 15.46, 13.64, 4.68] }),
        NM("misc_ruins_big_wall_broken_01", { coll: [tp, 13.79, 13.64, 4.68] }),
        NM("misc_ruins_column_01", { coll: [tp, 1.5, 5.3, 1.5] }),
        NM("misc_ruins_column_broken_01", { coll: [tp, 1.5, 2.25, 1.5] }),
        NM("misc_ruins_slab_01", { coll: [tp, 5.7, 2.1, 1.9] }),
        NM("misc_ruins_slab_small_01", { coll: [tp, 1.51, 1.1, 1.5] }),
        NM("misc_ruins_stone_01", { coll: [tp, 8.77, 18.08, 8.77] }),
        NM("misc_tool_pickaxe"),
        NM("misc_tool_axe"),
        NM("misc_tool_axe_double"),
        NM("misc_tool_hammer"),
        NM("misc_tool_hoe"),
        NM("misc_tool_shovel"),
        NM("misc_hay_bale", { coll: [tp, 4.2, 3.7, 3.7] }),
        NM("misc_hay_pile", { coll: [Km, 2, 2] }),
        NM("misc_hay_bundle", { coll: [Km, 2, 3] }),
        NM("misc_bones_big", { coll: [Km, 0.7, 3] }),
        NM("misc_bones_skull"),
        NM("misc_artifacts_monolith_dek_01", {
            effect: { ...Ru.mystical01, offset: [0, 0, 0] },
            coll: [tp, 3.74, 5.28, 3.6]
        }),
        NM(
            "misc_campfire_lit",
            {
                throwShadow: !1,
                effect: { ...Ru.campfire, offset: [0, 0.4, 0] },
                coll: [Km, 0.7, 0.5]
            },
            "misc_campfire_1.ho"
        ),
        NM("misc_lantern", { throwShadow: !1 }),
        RM("rocks1"),
        FM("rocks"),
        NM("rock_01", { qt: 10, coll: [Km, 0.8, 0.7] }),
        NM("rock_02", { qt: 10, coll: [Km, 0.4, 0.5] }),
        NM("rock_stone_boulder_small_01", { qt: 50, coll: [Km, 4, 8] }),
        NM("rock_stone_boulder_medium_01", { qt: 50, coll: [Km, 6, 13] }),
        NM("rock_stone_tall_medium_01", { qt: 50, coll: [Km, 5.2, 21.66] }),
        RM("props/bush01.png"),
        FM("foliage"),
        NM("foliage_bush_01"),
        RM("props/tree1.png"),
        FM("foliage"),
        NM("foliage_tree_huge", { receiveShadow: !1, coll: [Km, 9.64, 60] }),
        NM("foliage_tree_01", { receiveShadow: !1, coll: [Km, 4.1, 30] }),
        NM("foliage_tree_02", { receiveShadow: !1, coll: [Km, 1, 10] }),
        NM("foliage_tree_06", { receiveShadow: !1, coll: [Km, 2, 18] }),
        RM("props/pine_tree.png"),
        FM("foliage"),
        NM("foliage_pine_tree", {
            double: !0,
            receiveShadow: !0,
            coll: [Km, 2, 40]
        }),
        RM("atlas1"),
        FM("foliage"),
        NM("foliage_tree_stump", { coll: [Km, 0.7, 1.5] }),
        NM("foliage_tree_trunk_01", { coll: [tp, 6, 1, 1] }),
        RM("atlas1"),
        FM("primitives"),
        NM("primitive_cube_1"),
        NM(
            "environmental_ocean",
            { invisible: !0, throwShadow: !1, effect: { ...Ru.oceanAmbience } },
            "primitive_cube_1.ho"
        ),
        NM(
            "environmental_city",
            { invisible: !0, throwShadow: !1, effect: { ...Ru.cityAmbience } },
            "primitive_cube_1.ho"
        ),
        NM(
            "environmental_mystic",
            {
                invisible: !0,
                throwShadow: !1,
                effect: { ...Ru.mysticAmbience }
            },
            "primitive_cube_1.ho"
        ),
        NM(
            "environmental_evil",
            { invisible: !0, throwShadow: !1, effect: { ...Ru.evilAmbience } },
            "primitive_cube_1.ho"
        ),
        (AM.error = {
            geometry: "engine/error.ho",
            texture: "engine/error.jpg",
            meta: {}
        });
    class LM {
        constructor(t) {
            (this.id = 0),
                (this.wU = [0, 0, 0]),
                (this.rot = new dn()),
                (this.scale = 1);
        }
        onUpdate(t, e, s) {
            this.shape && (t.remove(this.shape), this.shape.onRemove());
            const i = AM[this.id] && AM[this.id].meta.coll;
            i &&
                ((this.shape = new i[0](
                    this,
                    s,
                    this.rot[1],
                    $i([0, 0, 0], e, this.wU),
                    i[1] ? i[1] * this.scale : 0,
                    i[2] ? i[2] * this.scale : 0,
                    i[3] ? i[3] * this.scale : 0
                )),
                t.add(this.shape));
        }
        onRemove(t) {
            this.shape && (t && t.remove(this.shape), this.shape.onRemove());
        }
    }
    class OM extends LM {
        constructor(t) {
            super(t || {});
        }
        onUpdate(t, e, s) {
            super.onUpdate(t, e, s);
            const i = AM[this.id] || AM.error;
            this.mesh ||
                ((this.mesh = nc({
                    geo: i.geometry,
                    tex: i.texture,
                    program: i.meta.qt
                        ? vl.multimeshTileable
                        : vl.multimeshTextured,
                    ts: i.meta.throwShadow,
                    rs: i.meta.receiveShadow,
                    cull: i.meta.double ? 0 : void 0,
                    visible: !i.meta.invisible
                })),
                i.meta.qt && (this.mesh.data.qt = this.scale * i.meta.qt)),
                $i(this.mesh.position, e, this.wU),
                this.mesh.rotation.set(this.rot[0], this.rot[1], this.rot[2]),
                ki(this.mesh.scale, this.scale),
                this.mesh.updateMatrix(),
                this.mesh.updateMatrixWorld(!0),
                (this.mesh.data.multi.needsUpdate = !0),
                i.meta.effect &&
                    void 0 === this.effect &&
                    ((this.effect = cc(i.meta.effect, this.effect)),
                    (this.effect.data.origin = [0, 0, 0]),
                    void 0 !== i.meta.effect.offset &&
                        wi(this.effect.data.origin, i.meta.effect.offset),
                    wi(this.effect.position, this.effect.data.origin),
                    this.effect.setParent(this.mesh),
                    this.effect.updateMatrix(),
                    this.effect.updateMatrixWorld(!0));
        }
        onRemove(t) {
            super.onRemove(t),
                this.effect &&
                    (this.effect.setParent(null),
                    (this.effect.data.remove = !0)),
                this.mesh &&
                    (this.mesh.data.multi.remove(this.mesh),
                    (this.mesh = void 0));
        }
        onHide() {
            this.effect &&
                ((this.effect.data.remove = !0), (this.effect = void 0));
        }
    }
    class qM {
        constructor(t) {
            (this.id = t.id),
                (this.origin = [64 * t.x, 0, 64 * t.z]),
                (this.center = $i([0, 0, 0], this.origin, [32, 0, 32])),
                (this.deserialized = !1),
                (this.props = {}),
                (this.intHeights = []),
                (this.normals = []),
                (this.steepness = []),
                (this.left = void 0),
                (this.right = void 0),
                (this.front = void 0),
                (this.back = void 0),
                (this.frontRight = void 0),
                (this.backLeft = void 0);
        }
        tickDelta() {}
        tickFixed() {}
        deserialize(t) {
            this.parse(er.chunk.decode(t));
        }
        parse(t) {
            if (((this.data = t), 0 == this.normals.length))
                for (let t = 0, e = 8192; t < e; ++t)
                    this.normals[t] = [0, 0, 0];
            this.unpackIntHeights(),
                this.unpackProps(),
                (this.deserialized = !0);
        }
        getIndex(t, e, s) {
            return t + (s ? 64 : 65) * e;
        }
        getIndexFromWorld(t, e, s) {
            return (
                (t -= this.origin[0]),
                (e -= this.origin[2]),
                this.getIndex(t, e, s)
            );
        }
        getHeight(t, e) {
            const s = t % 1,
                i = e % 1;
            if (0 === s && 0 === i)
                return 0.030517578125 * this.intHeights[t + 65 * e];
            {
                const n = Math.floor(t),
                    a = Math.floor(e),
                    r = s + i < 1,
                    o = r ? -(s - 1 + i) : -(i - 1),
                    l = r ? i : -(s - 1);
                return (
                    0.030517578125 *
                    (o * this.intHeights[n + 65 * a + (r ? 0 : 1)] +
                        l * this.intHeights[n + 65 * (a + 1)] +
                        (1 - o - l) *
                            this.intHeights[n + 1 + 65 * (a + (r ? 0 : 1))])
                );
            }
        }
        getHeightFromWorld(t, e) {
            return (
                (t -= this.origin[0]),
                (e -= this.origin[2]),
                this.getHeight(t, e)
            );
        }
        getTriangleIndex(t, e) {
            let s = 2 * Math.floor(t) + 64 * Math.floor(e) * 2;
            return (t % 1) + (e % 1) > 1 && s++, s;
        }
        getNormal(t, e) {
            return this.normals[this.getTriangleIndex(t, e)];
        }
        getSteepness(t, e) {
            return this.steepness[this.getTriangleIndex(t, e)];
        }
        updateTriangles(t = !1) {
            for (let e = 0; e < 64; ++e)
                for (let s = 0; s < 64; ++s) {
                    if (t && s > 1 && e > 1 && e < 63 && s < 63) continue;
                    const i = 2 * s + 64 * e * 2;
                    let n = this.normals[i];
                    xi(Jn, s, this.getHeight(s, e), e),
                        xi(Xn, s, this.getHeight(s, e + 1), e + 1),
                        xi(Qn, s + 1, this.getHeight(s + 1, e), e),
                        ca(n, Jn, Xn, Qn),
                        (this.steepness[i] = 1 - Pi(n, Zn)),
                        (n = this.normals[i + 1]),
                        xi(Jn, s + 1, this.getHeight(s + 1, e), e),
                        xi(Qn, s + 1, this.getHeight(s + 1, e + 1), e + 1),
                        ca(n, Jn, Xn, Qn),
                        (this.steepness[i + 1] = 1 - Pi(n, Zn));
                }
        }
        unpackIntHeights() {
            for (let t = 0; t < 65; ++t)
                for (let e = 0; e < 65; ++e) {
                    const s = e + 65 * t;
                    if (64 == e || 64 == t) {
                        const i = this.getNeighborChunk(e, t);
                        i && i.deserialized
                            ? (this.intHeights[s] =
                                  i.intHeights[(e % 64) + (t % 64) * 65])
                            : (this.intHeights[s] = this.intHeights[
                                  64 == e ? s - 1 : e + 65 * (t - 1)
                              ]);
                    } else
                        this.intHeights[s] =
                            0 == e
                                ? this.data.terrain.readUInt16BE(65 * t)
                                : this.intHeights[s - 1] +
                                  (this.data.terrain.readUInt8(65 * t + 1 + e) -
                                      127);
                }
            this.updateTriangles();
        }
        getNeighborChunk(t, e) {
            return t < 64 ? this.front : e < 64 ? this.right : this.frontRight;
        }
        getWorldFromLocal(t) {
            return [t[0] + this.origin[0], t[1], t[2] + this.origin[2]];
        }
        unpackProps() {
            const t = {};
            for (let e = 0, s = this.data.props.length; e < s; ++e) {
                const s = this.data.props[e];
                null == this.props[s.id] && (this.props[s.id] = []),
                    void 0 === t[s.id] && (t[s.id] = 0);
                const i = Xc(this, this.props[s.id][t[s.id]] || new OM(), s);
                i.onUpdate(Wn.grids.props, this.origin, Wn.bounds),
                    (this.props[s.id][t[s.id]] = i),
                    t[s.id]++;
            }
            for (const e in this.props) {
                const s = t[e] || 0;
                if (this.props[e] && s < this.props[e].length) {
                    for (let t = s; t < this.props[e].length; ++t)
                        this.props[e][t].onRemove(Wn.grids.props);
                    this.props[e].splice(s);
                }
            }
        }
        destroy() {
            (this.left = void 0),
                (this.right = void 0),
                (this.front = void 0),
                (this.back = void 0),
                (this.frontRight = void 0),
                (this.backLeft = void 0);
            for (const t in this.props)
                this.props[t].forEach(t => t.onRemove());
        }
    }
    const HM = 0,
        WM = t => ((t + 1) >>> 1) - 1,
        ZM = t => 1 + (t << 1),
        jM = t => (t + 1) << 1;
    const GM = new (class {
        constructor(t = (t, e) => t > e) {
            (this._heap = []), (this._comparator = t);
        }
        size() {
            return this._heap.length;
        }
        isEmpty() {
            return 0 == this.size();
        }
        peek() {
            return this._heap[HM];
        }
        push(...t) {
            return (
                t.forEach(t => {
                    this._heap.push(t), this._siftUp();
                }),
                this.size()
            );
        }
        pop() {
            const t = this.peek(),
                e = this.size() - 1;
            return (
                e > HM && this._swap(HM, e),
                this._heap.pop(),
                this._siftDown(),
                t
            );
        }
        replace(t) {
            const e = this.peek();
            return (this._heap[HM] = t), this._siftDown(), e;
        }
        _greater(t, e) {
            return this._comparator(this._heap[t], this._heap[e]);
        }
        _swap(t, e) {
            [this._heap[t], this._heap[e]] = [this._heap[e], this._heap[t]];
        }
        _siftUp() {
            let t = this.size() - 1;
            for (; t > HM && this._greater(t, WM(t)); )
                this._swap(t, WM(t)), (t = WM(t));
        }
        _siftDown() {
            let t = HM;
            for (
                ;
                (ZM(t) < this.size() && this._greater(ZM(t), t)) ||
                (jM(t) < this.size() && this._greater(jM(t), t));

            ) {
                const e =
                    jM(t) < this.size() && this._greater(jM(t), ZM(t))
                        ? jM(t)
                        : ZM(t);
                this._swap(t, e), (t = e);
            }
        }
    })((t, e) => t.id > e.id);
    class VM extends qM {
        constructor(t) {
            super(t),
                (this.geometry = {}),
                (this.meshes = {}),
                (this.state = 0);
        }
        load() {
            this.state > 0 ||
                (GM.push(this),
                (this.state = 1),
                fetch(`worlddata/${Wn.id}/${this.id}` + "?v=35201089", {
                    cache: "default"
                }).then(t => {
                    t.arrayBuffer().then(t => {
                        (this.loaded = Na(t)), GM.peek().queueLoad();
                    });
                }));
        }
        queueLoad() {
            if (this.loaded) {
                (this.state = 2),
                    this.deserialize(this.loaded),
                    this.meshes.terrain.updateMatrix(),
                    this.meshes.terrain.updateMatrixWorld(),
                    (this.loaded = void 0),
                    GM.pop();
                const t = GM.peek();
                t
                    ? t.queueLoad()
                    : Wn.unsetLoading &&
                      (Ht.set(!1),
                      (Wn.unsetLoading = !1),
                      Ft.set({
                          type: "Yu",
                          text: Wn.id.replace("_", " "),
                          time: 5e3
                      }),
                      IM(Wn));
            }
        }
        isInRange(t) {
            return !(t.player && Ci(t.player.wU, this.center) - 32 > Dh);
        }
        tickDelta(t, e, s) {
            if ((super.tickDelta(t, e, s), this.isInRange(s))) {
                if (this.state < 1) this.load();
                else if (
                    this.state >= 2 &&
                    null == this.meshes.terrain.parent
                ) {
                    for (const t in this.props)
                        this.props[t].forEach(t =>
                            t.onUpdate(s.grids.props, this.origin, s.bounds)
                        );
                    this.meshes.terrain.setParent(zh);
                }
            } else if (this.state >= 2 && null !== this.meshes.terrain.parent) {
                for (const t in this.props)
                    this.props[t].forEach(t => t.onHide());
                this.meshes.terrain.setParent(null);
            }
        }
        parse(t) {
            vi.detailprops ||
                (t.props = t.props.filter(t => AM[t.id].meta.coll)),
                super.parse(t, vi.detailprops),
                this.rebuild({
                    heightmap: !0,
                    texture: !0,
                    foliage: !0,
                    props: !0,
                    water: !0
                });
            const e = {
                heightmap: !0,
                triangles: !0,
                texture: !0,
                foliage: !1,
                water: !0,
                seams: !0,
                props: !1
            };
            this.left && this.left.state > 1 && this.left.rebuild(e),
                this.back && this.back.state > 1 && this.back.rebuild(e),
                this.backLeft &&
                    this.backLeft.state > 1 &&
                    this.backLeft.rebuild(e);
        }
        rebuild(
            t = {
                heightmap: !0,
                texture: !0,
                foliage: !0,
                intHeights: !1,
                props: !0,
                water: !0
            }
        ) {
            t.intHeights
                ? this.unpackIntHeights()
                : (t.heightmap || t.triangles) &&
                  (t.seams && this.updateHeightmapSeam(),
                  this.updateTriangles(t.seams)),
                t.unpackprops && this.unpackProps(),
                qh(this, t);
        }
        updateHeightmapSeam() {
            for (let t = 0; t < 65; ++t)
                for (let e = 64 == t ? 0 : 64; e < 65; ++e) {
                    const s = this.getNeighborChunk(e, t),
                        i = e + 65 * t;
                    s &&
                        s.deserialized &&
                        (this.intHeights[i] =
                            s.intHeights[(e % 64) + (t % 64) * 65]);
                }
        }
        destroy() {
            super.destroy(), Hh(this);
        }
        sendToServer() {
            storeChunk(this.id, Wn.id, this.serializedData);
        }
    }
    class YM {
        constructor(t, e) {
            (this.size = t),
                (this.div = e),
                (this.cellCount = e * e),
                (this.cellSize = t / e),
                (this.cells = []);
            for (let t = 0; t < this.cellCount; ++t) this.cells.push([]);
        }
        localize(t) {
            let e = !1;
            return (
                (e = t.gl != (t.gl = Math.floor(t.l / this.cellSize)) || e),
                (e = t.gr != (t.gr = Math.ceil(t.r / this.cellSize)) || e),
                (e = t.gu != (t.gu = Math.floor(t.u / this.cellSize)) || e),
                (e = t.gd != (t.gd = Math.ceil(t.d / this.cellSize)) || e)
            );
        }
        add(t) {
            this.localize(t);
            for (let e = t.gu; e < t.gd; ++e)
                for (let s = t.gl; s < t.gr; ++s)
                    this.cells[e * this.div + s].push(t);
        }
        update(t) {
            const e = t.gl,
                s = t.gr,
                i = t.gu,
                n = t.gd;
            if (this.localize(t))
                for (let a = Math.min(i, t.gu); a < Math.max(n, t.gd); ++a)
                    for (
                        let i = Math.min(e, t.gl);
                        i < Math.max(s, t.gr);
                        ++i
                    ) {
                        const e =
                                a >= t.gu && a < t.gd && i >= t.gl && i < t.gr,
                            s = this.cells[a * this.div + i],
                            n = s.indexOf(t);
                        !e && n >= 0 ? s.splice(n, 1) : e && n < 0 && s.push(t);
                    }
        }
        remove(t) {
            for (let e = t.gu; e < t.gd; ++e)
                for (let s = t.gl; s < t.gr; ++s) {
                    const i = e * this.div + s,
                        n = this.cells[i].indexOf(t);
                    n >= 0 && this.cells[i].splice(n, 1);
                }
        }
        query(t) {
            const e = Math.floor(t.l / this.cellSize),
                s = Math.ceil(t.r / this.cellSize),
                i = Math.floor(t.u / this.cellSize),
                n = Math.ceil(t.d / this.cellSize),
                a = [];
            for (let r = i; r < n; ++r)
                for (let i = e; i < s; ++i) {
                    const e = this.cells[r * this.div + i];
                    for (let s = 0, i = e.length; s < i; ++s) {
                        const i = e[s];
                        i != t && kf(t, i) && a.indexOf(i) < 0 && a.push(i);
                    }
                }
            return a;
        }
    }
    class JM extends Qu {
        constructor(t) {
            super({ Za: Pu.blacksteel, colEyes: Pu.fireorange, ...t }),
                (this.eyes.position[1] += 0.1),
                (this.kilt = this.mesh(this.chest, null, Pu.leather)),
                xi(this.kilt.scale, 1.1, 0.6, 0.4),
                (this.kilt.position[1] = -0.5),
                (this.kilt.position[2] = 0.35),
                (this.hammer = this.mesh(this.hands[0], null, Pu.woodbrown)),
                xi(this.hammer.scale, 0.25, 0.25, 1.2),
                (this.hammerhead = this.mesh(this.hammer, null, Pu.darksteel)),
                this.setShoulders(Pu.greysteel);
        }
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                (this.hands[0].position[2] -= 0.1),
                (this.hands[0].rotation[1] -= 0.4),
                (this.hands[0].rotation[0] += 0.9),
                this.hands[0].rotation.onChange();
        }
    }
    class XM extends Cf {
        constructor(t) {
            super({ size: 1.2, name: "Blacksmith", ...t });
        }
        static get type() {
            return 6;
        }
    }
    class QM extends XM {
        constructor(t) {
            super({ ...t, ...Wh.npcs.blacksmith });
        }
        remakeTransform() {
            super.remakeTransform(),
                (this.transform = new JM({ entity: this }));
        }
    }
    class KM extends Qu {
        constructor(t) {
            super({ Za: Pu.paleskin, ...t }),
                (this.robe = this.mesh(
                    this.chest,
                    "character/robe.ho",
                    Pu.magicblue
                )),
                xi(this.robe.scale, 1.2, 1.2, 1.2),
                this.robe.rotation.set(0, 0, 0),
                xi(this.robe.position, 0, -0.9, 0.05);
        }
        tickFixed() {}
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                this.hands.forEach((t, e) => {
                    if (!t.visible) return;
                    const s = this.cycle(1.3);
                    t.rotation.set(0.78, 0, e ? 0.2 * s : 0.2 * -s),
                        xi(t.position, e ? 0.2 : -0.2, -0.4, 0.6);
                });
        }
    }
    class tE extends Cf {
        constructor(t) {
            super({ size: 1.2, name: "Conjurer", ...t });
        }
        static get type() {
            return 2;
        }
    }
    class eE extends tE {
        constructor(t) {
            super({ ...t, ...Wh.npcs.conjurer });
        }
        interact(t) {
            const e = Na.from(t.splice(1)).toString().split("#");
            "" !== e[0]
                ? this.setDialogue(
                      this.interactions[0].text,
                      Array.from(e, t => {
                          const e = t.split("~");
                          return (
                              this.interactions[0].choices[0].replace(
                                  "$1",
                                  e[0]
                              ) + (e[1] > 0 ? ` (Lv. ${e[1]}+)` : "")
                          );
                      })
                  )
                : this.setDialogue(this.interactions[0].text, []),
                super.interact(t);
        }
        remakeTransform() {
            super.remakeTransform(),
                (this.transform = new KM({ entity: this }));
        }
    }
    class sE extends rp {
        constructor(t) {
            super(t),
                (this.partytimeout = 0),
                (this.party = 0),
                (this.type = ""),
                (this.tier = 0),
                (this.quality = 0);
        }
        async init(t) {
            await super.init(t);
        }
        static get type() {
            return 3;
        }
        partyTimeoutCheck(t) {
            return (
                0 === this.party ||
                t.id === this.party ||
                t.party === this.party ||
                Wn.time > this.partytimeout
            );
        }
        canBePickedUpBy(t) {
            return this.partyTimeoutCheck(t) && t.squaredDistance(this.wU) < 30;
        }
    }
    class iE extends sE {
        constructor(t) {
            super(t),
                (this.transform = nc({
                    geo: "drop/drop.ho",
                    tex: "items.png",
                    program: vl.drop,
                    ts: !1,
                    rs: !1,
                    dynamic: !1
                })),
                this.transform.rotation.reorder("ZXY"),
                (this.transform.data.multi.needsUpdate = !1),
                (this.size = 0.7),
                (this.transform.visible = !1),
                (this.uiTimeout = 0),
                (this.dirty = !1),
                (this.hasInfo = !1),
                (this.hasPos = !1),
                (this.hasRot = !1),
                (this.color = "misc");
        }
        postDelta(t, e, s) {
            if (
                this.transform.visible &&
                this.dirty &&
                s.getChunkFromWorld(this.wU[0], this.wU[2]).deserialized
            ) {
                (this.wU[1] =
                    this.getWorldYBody(s, this.wU[0], this.wU[2]) +
                    0.1 * Math.random() +
                    0.1),
                    (this.transform.position[0] = this.wU[0]),
                    (this.transform.position[1] = this.wU[1]),
                    (this.transform.position[2] = this.wU[2]),
                    xi(Gn, 0, 1, 0);
                const t = s.getNormal(this.wU[0], this.wU[2]);
                sa.fromVectors(Gn, t),
                    this.transform.rotation.fromQuaternion(sa),
                    (this.transform.rotation[1] = this.rot),
                    this.transform.rotation.onChange(),
                    (this.transform.matrixAutoUpdate = !0),
                    this.transform.updateMatrixWorld(!0),
                    (this.transform.data.multi.needsUpdate = !0),
                    (this.dirty = !1);
            }
        }
        setXZPos(t) {
            this.hasPos ||
                ((this.hasPos = !0), super.setXZPos(t), (this.dirty = !0));
        }
        setRot(t) {
            this.hasRot ||
                ((this.hasRot = !0), super.setRot(t), (this.dirty = !0));
        }
        setDropInfo(t, e, s, i, n) {
            let a, r;
            (this.hasInfo = !0),
                (this.party = i),
                (this.partytimeout = n),
                (this.type = Or[t]),
                (this.tier = e),
                (this.quality = s),
                "gold" == this.type
                    ? ((this.name = this.tier + "c"),
                      (this.size = 0.4),
                      (a = "gold"),
                      (this.color = "gold"),
                      (this.quality = 100))
                    : ((a = this.type + this.tier),
                      (r = If[a]) && (this.name = jh(this.type, this.tier)),
                      "misc" !== this.type &&
                      "rune" !== this.type &&
                      "book" !== this.type
                          ? ((this.color = Au(s)[1]),
                            vi.itemQualityPercent &&
                                (this.name += ` ${this.quality}%`))
                          : ((this.color = this.type), (this.quality = 100)));
            const o = (r && r.art) || a;
            (this.transform.data.MW = Er[o]),
                xi(this.transform.scale, 20 * Er[o][0], 1, 20 * Er[o][1]),
                (this.transform.data.Pw = [6.1 * Math.random(), 0, 0, 0]),
                (this.dirty = !0),
                (this.transform.visible = !0);
        }
        onRemove() {
            this.transform.data.multi.remove(this.transform),
                this.transform.setParent(null),
                oo.shift.down &&
                    (kM.add(this),
                    (this.uiTimeout = 5 * Math.round(Wn.time / 5) + 10));
        }
    }
    const nE = {
        0: {
            size: 3,
            name: "King",
            stationary: !0,
            nodespawn: !0,
            exp: 2,
            aggroRange: 35,
            statfactor: { 0: 20, 10: 20, 11: 20, 1: 200, 15: 4 },
            skills: [0, 3]
        },
        1: {
            size: 2,
            name: "Warden",
            stationary: !0,
            nodespawn: !0,
            exp: 2,
            aggroRange: 35,
            statfactor: { 10: 20, 11: 20, 0: 20, 1: 100, 15: 5 },
            skills: [0, 2, 3, 33]
        },
        2: { size: 0.9, name: "Grub", height: 0.8, skills: [0] },
        3: { size: 1.1, exp: 1.1, name: "Skeleton", skills: [0] },
        4: { size: 1.2, exp: 1.1, name: "Zombie", skills: [0] },
        5: { size: 1, exp: 1.1, name: "Crawler", height: 0.8, skills: [0] },
        6: {
            size: 1,
            exp: 1.1,
            name: "Skeleton Archer",
            statfactor: { 10: 0.35, 11: 0.35 },
            skills: [5]
        },
        7: {
            size: 1,
            exp: 2,
            name: "Golem",
            height: 2.8,
            statfactor: { 10: 2, 11: 2, 6: 1.5, 15: 0.6 },
            skills: [0]
        },
        8: {
            size: 1,
            exp: 1.5,
            name: "Warrior",
            statfactor: { 6: 1.5, 15: 1.2 },
            skills: [0]
        },
        9: {
            size: 1,
            exp: 1,
            name: "Archer",
            statfactor: { 6: 0.8, 11: 0.35, 10: 0.35, 15: 1.2 },
            skills: [5]
        },
        10: {
            size: 1.3,
            exp: 2,
            name: "Warrior",
            statfactor: { 6: 3, 15: 1.3 },
            skills: [0]
        },
        11: { size: 1, exp: 0, height: 2.7, statfactor: { 6: 100, 8: 100 } }
    };
    class aE extends Mf {
        constructor(t) {
            super({ size: 1, name: "Training Dummy", ...t }),
                (this.static = !0),
                (this.class = 5),
                (this.behavior = nE[11]),
                (this.height = this.behavior.height);
        }
        static get type() {
            return 7;
        }
    }
    class rE extends Ju {
        constructor(t) {
            super(t),
                (this.block = this.mesh(this, null, Pu.woodbrown)),
                xi(this.block.scale, 0.3, 3, 0.3),
                xi(this.block.position, 0, -0.5, 0),
                (this.chest = this.mesh(this, null, Pu.woodbrown2)),
                xi(this.chest.scale, 1, 2, 1),
                xi(this.chest.position, 0, 0.9, 0),
                (this.arms = this.mesh(this, null, Pu.woodbrown)),
                xi(this.arms.scale, 3, 0.3, 0.3),
                xi(this.arms.position, 0, 1.1, 0);
        }
        tickFixed(t, e, s) {
            this.tickPushBack(t, e, s);
        }
        tickParts(t, e, s) {
            this.rotation.set(
                2 * -this.pushBack[1],
                this.entity.rot,
                2 * this.pushBack[0]
            );
        }
    }
    class oE extends aE {
        constructor(t) {
            super({ ...t }), this.remakeTransform();
        }
        remakeTransform() {
            super.remakeTransform(),
                (this.transform = new rE({ entity: this }));
        }
    }
    class lE {
        constructor(t) {
            (this.entity = t),
                (this.slots = new Map()),
                (this.gold = 0),
                this.setSize(0);
        }
        tickFixed(t, e, s) {}
        setSize(t) {
            this.size = t;
        }
        setGold(t) {
            this.gold = t;
        }
        setItem(t, e) {
            const s = new jx(e);
            return this.slots.set(t, s), s;
        }
        removeItem(t) {
            const e = this.slots.get(t);
            return this.slots.delete(t), e;
        }
        async hydrateItems() {
            const t = [],
                e = [];
            if (
                (this.slots.forEach((s, i) => {
                    s.dirty && ((s.dirty = !1), t.push(s.dbid), e.push(i));
                }),
                t.length)
            ) {
                const s = await this.fetchData(t);
                this.compareData(s, e, 0), this.postHydrate(e);
            }
        }
        hydrate(t) {
            this.slots.has(t.slot)
                ? this.slots.get(t.slot).hydrate(t)
                : console.error("received hydration of unknown item");
        }
        postHydrate(t) {}
        compareData(t, e, s) {
            t.forEach(t => {
                null !== t.slot &&
                    (this.hydrate(t), (e = e.filter(e => e !== t.slot)));
            }),
                e.forEach(t => this.removeItem(t, s));
        }
        findFirstItemOfType(t, e) {
            for (const s of this.slots)
                if (s[1].type == t && s[1].tier == e) return s[1];
        }
        findFirstSlotOfType(t, e) {
            for (const s of this.slots)
                if (s[1].type == t && s[1].tier == e) return s[0];
        }
        findByDbid(t) {
            for (const e of this.slots) if (e[1] && e[1].dbid === t) return e;
            throw "Item not found";
        }
    }
    let cE = void 0;
    class hE extends lE {
        constructor(t) {
            super(t), (this.dirty = !1);
        }
        tickFixed(t, e, s) {
            super.tickFixed(t, e, s),
                this.dirty && (this.hydrateItems(), (this.dirty = !1));
        }
        setGold(t, e, s) {
            super.setGold(t), Zx(t, e, s), Jt.set(t);
        }
        setItem(t, e, s) {
            (super.setItem(t, e).reason = s), (this.dirty = !0);
        }
        removeItem(t, e) {
            Wx(super.removeItem(t), e),
                cE[t].set(void 0),
                (this.dirty = !0),
                this.updateInventoryCounts();
        }
        hydrate(t) {
            (t.store = cE[t.slot]), super.hydrate(t);
        }
        postHydrate(t) {
            super.postHydrate(t), this.updateInventoryCounts();
        }
        updateInventoryCounts() {
            const t = {};
            this.slots.forEach(e => {
                const s = e.type + e.tier;
                t[s] = (t[s] || 0) + (e.stacks ? e.stacks : 1);
            }),
                Kt.set(t);
        }
        async fetchData(t) {
            const e = await fetch("/api/item/get", {
                    method: "POST",
                    body: JSON.stringify({ ids: t })
                }),
                s = await e.json();
            if (!s.fail) return s;
            console.error(s);
        }
        setSize(t) {
            super.setSize(t),
                Qt.update(t => {
                    for (let e = 109; e >= 0; --e)
                        e >= 101
                            ? t[e] || (t[e] = It(void 0))
                            : e >= this.size
                            ? t[e] && delete t[e]
                            : t[e] || (t[e] = It(void 0));
                    return (cE = t), t;
                });
        }
    }
    class dE extends Qu {
        constructor(t) {
            super({
                Za: t.colPrim || Pu.archergreen,
                colEyes: t.colPrim && Pu.fireorange,
                ...t
            }),
                !1 !== t.quiver &&
                    ((this.quiver = this.mesh(
                        this.chest,
                        null,
                        t.colPrim || Pu.leather
                    )),
                    xi(this.quiver.scale, 0.27, 0.5, 0.27),
                    xi(this.quiver.position, 0, -0.15, -0.7),
                    this.quiver.rotation.set(-0.15, 0, -0.4),
                    (this.quiverTop = this.mesh(
                        this.quiver,
                        null,
                        t.colSec || Pu.linen
                    )),
                    xi(this.quiverTop.scale, 1.2, 0.8, 1.2),
                    xi(this.quiverTop.position, 0, 0.8, 0)),
                (this.bow = this.mesh(
                    this.hands[1],
                    "character/bow.ho",
                    t.colSec || Pu.woodbrown
                )),
                this.bow.rotation.set(0),
                (this.bow.position[2] = -0.1),
                this.setShoulders(t.colSec || Pu.woodbrown, 0.8),
                this.hands.forEach(e =>
                    this.changeMeshBaseColor(e, t.colPrim || Pu.leather)
                ),
                (this.capeswing = !1);
        }
        tickParts(t, e, s) {
            if (
                (super.tickParts(t, e, s),
                this.hands[1].visible &&
                    (this.hands[1].rotation.set(
                        0.2,
                        1.7 + 0.15 * this.cycleSin,
                        0.4
                    ),
                    xi(
                        this.hands[1].position,
                        0.1 + 0.2 * this.cycleSin,
                        -0.3,
                        0.9
                    ),
                    this.entity.target > 0 &&
                        ((this.hands[1].position[0] = 0.2),
                        (this.hands[1].position[1] += 0.15),
                        (this.hands[1].position[2] += 0.1),
                        (this.hands[1].rotation[0] += 0.2),
                        (this.hands[1].rotation[1] = 1.8),
                        (this.hands[1].rotation[2] -= 0.2),
                        this.hands[1].rotation.onChange()),
                    this.currentAnim))
            )
                switch (this.currentAnim.id) {
                    case 5: {
                        this.sheathe(!1);
                        const t = la.easeOutQuad(
                            na(2 * this.currentAnim.time, 0, 1)
                        );
                        this.hands[1].rotation.set(1, 2, 0.3),
                            xi(this.hands[1].position, 0.2, 0, 0.8 + 0.8 * t),
                            xi(
                                this.hands[0].position,
                                -0.1 - 0.6 * Math.sin(2 * t),
                                0.1 * t,
                                0.8 - 0.8 * t
                            ),
                            xi(this.chest.position, 0, 0.6 - 0.2 * t, 0),
                            this.chest.rotation.set(
                                0.2 - 0.2 * t,
                                0.3 * t - 0.4,
                                0
                            );
                        break;
                    }
                    case 7: {
                        this.sheathe(!1);
                        const t = la.easeOutFlick(
                            na(2 * (this.currentAnim.fract - 0.5), 0, 1)
                        );
                        this.hands[1].rotation.set(1, 2, 0.3 + 0.1 * t),
                            xi(this.hands[1].position, 0.2, 0.3 * t, 1.6),
                            xi(this.hands[0].position, -0.7, 0.1, 0.7 * -t),
                            xi(this.chest.position, 0, 0.4, 0),
                            this.chest.rotation.set(0, -0.1, 0);
                        break;
                    }
                    case 8: {
                        this.sheathe(!1);
                        const t = la.easeOutQuad(
                            na(2 * this.currentAnim.fract, 0, 1)
                        );
                        xi(
                            this.hands[0].position,
                            -0.5 - 0.3 * t,
                            0.3 * t - 0.3,
                            0.6 * Math.sin(6.28 * t)
                        ),
                            this.hands[1].rotation.set(0.2 + 0.5 * t, 2, 0.3),
                            xi(
                                this.hands[1].position,
                                0.2,
                                0.3 * t - 0.4,
                                0.8 + 0.8 * t
                            ),
                            (this.chest.rotation[1] = 0),
                            (this.chest.rotation[0] = 0.2 * t - 0.2),
                            this.chest.rotation.onChange();
                    }
                }
            !this.walking &&
                this.legs[0].visible &&
                ((this.legs[0].position[2] -= 0.3),
                (this.legs[1].position[2] += 0.1));
        }
    }
    class uE extends Mf {
        constructor(t) {
            super({ size: 0.9, ...t }),
                (this.exp = 0),
                (this.party = 0),
                (this.partyRole = 0),
                (this.fame = 0),
                (this.fameRank = 0),
                (this.clan = void 0),
                (this.clanRole = 0),
                (this.latencyPositionHistory = new Map());
        }
        static get type() {
            return 0;
        }
        tickFixed(t, e, s) {
            this.tickVerticalMovement(t),
                this.tickTerrainMovement(t),
                super.tickFixed(t, e, s),
                this.tickPropCollisions(),
                this.clampWorldPos(),
                this.updateShape();
        }
        tickVerticalMovement(t) {
            this.onGround
                ? (this.stats.alive && this.jump && this.speed > 0
                      ? (this.vel[1] <= 0 && (this.vel[1] = 9),
                        (this.onGround = !1))
                      : (this.vel[1] = -27 * t),
                  this.horizontalSteer(1))
                : (this.vel[1] = Math.max(-20, this.vel[1] - 27 * t));
        }
        tickTerrainMovement(t) {
            const e = Wn.clampV3(Ei(Gn, this.wU, this.vel, t));
            let s = Wn.getNormal(e[0], e[2]);
            const i = Wn.getSteepness(e[0], e[2]),
                n = this.getWorldYBody(Wn, e[0], e[2]);
            if (n >= e[1] || (this.onGround && i < 0.35 && e[1] - n < 0.05)) {
                e[1] = n;
                let a = this.onGround;
                if (
                    ((this.onGround = i < 0.35),
                    (a = !this.onGround && a),
                    !this.onGround)
                ) {
                    a && (((s = wi(Gn, s))[1] = 0), _i(s, s));
                    const i = Pi(this.vel, s),
                        n = Mi(Gn, s, i);
                    Si(this.vel, this.vel, n), Ei(e, this.wU, this.vel, t);
                }
            } else
                (this.onGround = !1),
                    Math.abs(this.vel[0]) < 1 &&
                        Math.abs(this.vel[2]) < 1 &&
                        this.horizontalSteer(0.5);
            wi(this.wU, e);
        }
        tickPropCollisions() {
            const t = Wn.grids.props.query(this.shape);
            for (let e = 0, s = !0; s && e < 3; ++e) {
                s = !1;
                for (let e = 0; e < t.length; ++e) {
                    const i = $f(this.shape, t[e], !1);
                    if (0 != i[0] || i[1] != [0] || 0 != i[2]) {
                        $i(this.wU, this.wU, i),
                            i[1] > 0 &&
                                ((this.onGround = !0), (this.onProp = !0)),
                            _i(i, i);
                        const t = Pi(this.vel, i),
                            e = Mi(Gn, i, t);
                        Si(this.vel, this.vel, e), this.shape.aabb(), (s = !0);
                    }
                }
            }
        }
        setExp(t) {
            this.exp = t;
        }
        setParty(t, e) {
            (this.party = t), (this.partyRole = e);
        }
        setFame(t) {
            return (
                t !== this.fame &&
                ((this.fame = t), (this.fameRank = rk(t)), !0)
            );
        }
        setClan(t, e = 0) {
            (this.clan = t), (this.clanRole = e);
        }
        getNearbyPartyMembers(t) {
            const e = [];
            return (
                this.stats.alive && e.push(this),
                this.party > 0 &&
                    Wn.entities.type[0].forEach(s => {
                        if (
                            s.party == this.party &&
                            s != this &&
                            s.stats.alive
                        ) {
                            Ti(t, s.wU) < 1e3 && e.push(s);
                        }
                    }),
                e
            );
        }
        calculatePartyItemFind(t) {
            let e = 0;
            return (
                t.forEach(t => {
                    e += t.stats.getStat(18);
                }),
                e / Math.max(1, t.length) / 100
            );
        }
        canCombatInteract(t) {
            return (
                !Wn.mode.pvpprotect ||
                this.hostility(t) < 2 ||
                0 !== t.constructor.type ||
                Math.abs(this.level - t.level) <=
                    5 +
                        Math.max(
                            this.skills.pvpBoundModifier,
                            t.skills.pvpBoundModifier
                        )
            );
        }
        recordLatencyPosition(t) {
            let e;
            this.latencyPositionHistory.forEach((s, i) => {
                i < t - 100 && ((e = s), this.latencyPositionHistory.delete(i));
            }),
                va((e = e || [-0, -0]), this.wU),
                this.latencyPositionHistory.set(t, e);
        }
        getClosestLatencyPosition(t) {
            let e,
                s = 1 / 0;
            return (
                this.latencyPositionHistory.forEach((i, n) => {
                    const a = (function (t, e) {
                        const s = e[0] - t[0],
                            i = e[1] - t[1];
                        return s * s + i * i;
                    })(t, i);
                    a < s && ((s = a), (e = i));
                }),
                e
            );
        }
        reconciliateLatencyPosition(t) {
            const e = this.getClosestLatencyPosition(t);
            if (void 0 !== e) {
                const s = Un(ta, e, t),
                    i = An(s);
                i > 0.5 * this.speed &&
                    i < 10 &&
                    ((s[0] *= 0.3),
                    (s[1] *= 0.3),
                    this.latencyPositionHistory.forEach(t => {
                        (t[0] -= s[0]), (t[1] -= s[1]);
                    }),
                    (this.wU[0] -= s[0]),
                    (this.wU[2] -= s[1]));
            }
            return e;
        }
    }
    class mE extends Qu {
        constructor(t) {
            super({ Za: Pu.mageblue, ...t }),
                (this.staff = this.mesh(this.chest, null, Pu.woodbrown)),
                xi(this.staff.scale, 0.2, 2, 0.2),
                xi(this.staff.position, 0, 0, -0.6),
                this.staff.rotation.set(0, 0, 0.4),
                (this.staffhead = this.mesh(this.staff, null, Pu.linen)),
                xi(this.staffhead.scale, 1.2, 0.6, 1.2),
                xi(this.staffhead.position, 0, 0, 0),
                (this.staffhead.data.lod = 0.7),
                (this.brochure = this.mesh(this.chest, null, Pu.bone)),
                xi(this.brochure.position, 0, 0.4, 0.54),
                this.brochure.rotation.set(0, 0, 0.78),
                xi(this.brochure.scale, 0.3, 0.3, 0.05),
                (this.staffhead.data.lod = 0.5),
                this.setShoulders(Pu.leather),
                (this.capeswing = !1);
        }
    }
    class pE extends Qu {
        constructor(t) {
            super({ Za: Pu.shamanblue, ...t }),
                (this.back = this.mesh(this.chest, null, Pu.bone)),
                xi(this.back.scale, 1, 1, 0.2),
                xi(this.back.position, 0, 0.1, -0.6),
                this.back.rotation.set(0, 0, 0.25 * Math.PI),
                (this.kilt = this.mesh(this.chest, null, Pu.bone)),
                xi(this.kilt.scale, 0.5, 0.7, 0.1),
                (this.kilt.position[1] = -0.65),
                (this.kilt.position[2] = 0.5),
                (this.weapon = this.mesh(this.hands[0], null, Pu.woodbrown)),
                xi(this.weapon.scale, 0.25, 1, 0.25),
                (this.hammerhead = this.mesh(this.weapon, null, Pu.darksteel)),
                xi(this.hammerhead.scale, 1.6, 0.5, 2.6),
                xi(this.hammerhead.position, 0, 0.6, 0),
                (this.sheathedWeaponPos = [0, 0, -0.7]),
                (this.unsheathedWeaponPos = [0, 0, 0]),
                this.sheathe(!1),
                this.setShoulders(Pu.leather);
        }
        setCape(t, e) {
            super.setCape(t, e),
                void 0 !== this.cape &&
                    !1 !== t &&
                    xi(this.cape.position, 0, 0.2, -0.75);
        }
    }
    class fE extends Qu {
        constructor(t) {
            super({
                Za: t.Za || t.colPrim || Pu.warbrown,
                colEyes: t.colPrim && Pu.fireorange,
                ...t
            }),
                (this.weapon = this.mesh(
                    this.hands[0],
                    "character/sword.ho",
                    t.colSec || Pu.tealsteel
                )),
                (this.shield = this.mesh(
                    this.hands[1],
                    "character/shield.ho",
                    t.colSec || Pu.darksteel
                )),
                this.setShoulders(t.colSec || Pu.greysteel),
                (this.sheathedWeaponPos = [0, 0, -0.5]),
                (this.unsheathedWeaponPos = [0, 0.8, 0]),
                this.sheathe(!1);
        }
    }
    const gE = [
        fE,
        class extends Qu {
            constructor(t) {
                super({ Za: Pu.mageblue, ...t }),
                    (this.staff = this.mesh(this.chest, null, Pu.woodbrown)),
                    xi(this.staff.scale, 0.2, 2, 0.2),
                    xi(this.staff.position, 0, 0, -0.6),
                    this.staff.rotation.set(0, 0, 0.4),
                    (this.staffhead = this.mesh(this.staff, null, Pu.linen)),
                    xi(this.staffhead.scale, 1.2, 0.6, 1.2),
                    xi(this.staffhead.position, 0, 0, 0),
                    (this.staffhead.data.lod = 0.7),
                    (this.brochure = this.mesh(this.chest, null, Pu.bone)),
                    xi(this.brochure.position, 0, 0.4, 0.54),
                    this.brochure.rotation.set(0, 0, 0.78),
                    xi(this.brochure.scale, 0.3, 0.3, 0.05),
                    (this.staffhead.data.lod = 0.5),
                    this.setShoulders(Pu.leather),
                    (this.capeswing = !1);
            }
        },
        dE,
        class extends Qu {
            constructor(t) {
                super({ Za: Pu.shamanblue, ...t }),
                    (this.back = this.mesh(this.chest, null, Pu.bone)),
                    xi(this.back.scale, 1, 1, 0.2),
                    xi(this.back.position, 0, 0.1, -0.6),
                    this.back.rotation.set(0, 0, 0.25 * Math.PI),
                    (this.kilt = this.mesh(this.chest, null, Pu.bone)),
                    xi(this.kilt.scale, 0.5, 0.7, 0.1),
                    (this.kilt.position[1] = -0.65),
                    (this.kilt.position[2] = 0.5),
                    (this.weapon = this.mesh(
                        this.hands[0],
                        null,
                        Pu.woodbrown
                    )),
                    xi(this.weapon.scale, 0.25, 1, 0.25),
                    (this.hammerhead = this.mesh(
                        this.weapon,
                        null,
                        Pu.darksteel
                    )),
                    xi(this.hammerhead.scale, 1.6, 0.5, 2.6),
                    xi(this.hammerhead.position, 0, 0.6, 0),
                    (this.sheathedWeaponPos = [0, 0, -0.7]),
                    (this.unsheathedWeaponPos = [0, 0, 0]),
                    this.sheathe(!1),
                    this.setShoulders(Pu.leather);
            }
            setCape(t, e) {
                super.setCape(t, e),
                    void 0 !== this.cape &&
                        !1 !== t &&
                        xi(this.cape.position, 0, 0.2, -0.75);
            }
        }
    ];
    class vE extends uE {
        constructor(t) {
            super(t);
        }
        setClass(t) {
            t !== this.class && (super.setClass(t), this.remakeTransform());
        }
        remakeTransform(t) {
            super.remakeTransform(),
                (this.transform = new (t || gE[this.class])({ entity: this })),
                this.fame > 0 && this.setFame(this.fame, !0),
                this.level >= 10 && this.setLevel(this.level);
        }
        setFame(t, e) {
            if (super.setFame(t) || e) {
                if (!this.transform) return;
                this.fameRank < 1
                    ? (this.transform.setCrown(!1),
                      this.transform.setHeadgear(!1))
                    : (this.transform.setHeadgear(
                          Uu[Math.min(4, this.fameRank)]
                      ),
                      this.fameRank >= 5
                          ? this.transform.setCrown(Uu[this.fameRank % 5])
                          : this.transform.setCrown(!1));
            }
        }
        setLevel(t) {
            super.setLevel(t),
                this.transform &&
                    (t >= 15
                        ? this.transform.setCape(
                              0 === this.faction ? Pu.vanguard : Pu.bloodlust,
                              t >= 25 ? 1 : 0.5
                          )
                        : this.transform.setCape(!1));
        }
    }
    const yE = t => 1 + 0.21 * (t - 1);
    class bE extends vE {
        constructor(t) {
            super(t),
                Wn.setPlayer(this),
                (this.input = new Map()),
                (this.inputLast = new Map()),
                (this.parsedFirstInput = !1),
                (this.skills.isPlayer = !0),
                this.skills.clearSkillInfo(),
                (this.inventory = new hE(this)),
                (this.netSendTimer = new Al(0, 0.4)),
                (this.partyInfoUpdateTimer = new Al(0, 1)),
                (this.heartBeatTimer = new Al(0, 1)),
                (this.lastNetRot = 0),
                (this.torch = !1);
        }
        tickFixed(t, e, s) {
            super.tickFixed(t, e, s),
                this.inventory.tickFixed(t, e, s),
                this.serverInputTick++;
        }
        preFixed(t, e, s) {
            this.buffs.movementOverride.size ||
                (this.setSteer([
                    oo.left.down ? 1 : oo.right.down ? -1 : 0,
                    oo.fwd.down || (oo.lmb.down && oo.rmb.down)
                        ? 1
                        : oo.back.down
                        ? -1
                        : 0
                ]),
                this.setJump(oo.jump.down ? 1 : 0),
                (oo.turnright.down || oo.turnleft.down) &&
                    (ro[0] = ua(
                        ro[0] +
                            3 *
                                vi.mouseSensitivity *
                                t *
                                ((oo.turnleft.down ? 1 : 0) -
                                    (oo.turnright.down ? 1 : 0))
                    )),
                ((vi.lockedcamera && oo.lmb.down) ||
                    oo.rmb.down ||
                    oo.turnleft.down ||
                    oo.turnright.down) &&
                    this.setRot(ro[0]));
        }
        postFixed(t, e, s) {
            super.postFixed(t, e, s), this.recordLatencyPosition(s.tickId);
        }
        sendInput(t) {
            if (
                (this.input.set(
                    "steer",
                    Wc([this.steer[0] + 1, this.steer[1] + 1])
                ),
                this.input.set("jump", this.jump),
                this.netSendTimer.done(t) &&
                    this.input.set("rot", Oc(this.rot, ha)),
                (this.parsedFirstInput &&
                    this.compareDelta(this.input, this.inputLast, !1)) ||
                    (this.netSendTimer.passed(t) > 0.05 &&
                        Math.abs(this.rot - this.lastNetRot) > 0.05) ||
                    this.netSendTimer.done(t))
            ) {
                const e = tr.clientPlayerInput.packData({
                    steer: this.input.get("steer"),
                    jump: this.input.get("jump"),
                    rot: Oc(this.rot, ha),
                    wU: jc([this.wU[0], this.wU[2]], 768),
                    tickId: Wn.tickId
                });
                gd(e), (this.lastNetRot = this.rot), this.netSendTimer.reset(t);
            }
        }
        updateCharPanel() {
            (vi.charpanelOpen || vi.skillmenuOpen) &&
                this.statsDirty &&
                ((this.statsDirty = !1),
                we.update(t => {
                    return (
                        Array.from(this.stats.stat).forEach(
                            e => (t[e[0]] = e[1])
                        ),
                        t
                    );
                }));
        }
        updatePartyInfo(t) {
            if (this.partyInfoUpdateTimer.done(t)) {
                this.partyInfoUpdateTimer.reset(t);
                const e = this.getNearbyPartyMembers(this.wU),
                    s = yE(e.length);
                At.update(
                    t => (
                        (t.nearby = e.length),
                        (t.exprate = Math.round(100 * s)),
                        (t.itemfind = Math.round(
                            100 * s + 100 * this.calculatePartyItemFind(e)
                        )),
                        t
                    )
                );
            }
        }
        handleCamera(t) {
            if (
                ((Ln.rotation[0] = na(0.7 * ro[1], -1.5, 1.5)),
                !oo.lmb.down && (0 !== this.steer[0] || 0 !== this.steer[1]))
            ) {
                let e = fa(this.rot, ro[0]) * t * 2;
                0 !== e &&
                    (Math.abs(e) > 0.03 * t
                        ? ((e =
                              e > 0
                                  ? Math.max(e, 0.6 * t)
                                  : Math.min(e, -0.6 * t)),
                          (ro[0] -= e))
                        : (ro[0] = this.rot));
            }
            (Ln.rotation[1] = ro[0]),
                Ln.rotation.onChange(),
                Ln.updateMatrixWorld(),
                xi(Nn.position, 0, 1, -vi.cameraZoom),
                Nn.updateMatrixWorld(),
                (Ln.position[1] +=
                    Math.max(
                        0,
                        Wn.getHeight(
                            na(Nn.worldPosition[0], 0, Wn.bounds),
                            na(Nn.worldPosition[2], 0, Wn.bounds)
                        ) - Nn.worldPosition[1]
                    ) +
                    2 * Math.tan((Nn.fov * Math.PI) / 180 / 2) * Nn.near);
        }
        handleHeartbeat(t) {
            let e = this.stats.getResource(6) / (0.5 * this.stats.getStat(6));
            this.heartBeatTimer.done(t) &&
                e > 0 &&
                e < 1 &&
                ((e = (Math.max(0, Math.min(1, e)) + 0.5) / 1.5),
                Jr({ id: "ui/lowhpheart" }),
                this.heartBeatTimer.reset(t, e));
        }
        handleTorch(t) {
            Wn.daytime > 0.75 && Wn.daytime < 0.95 && this.stats.alive
                ? this.torch ||
                  ((this.torch = cc(Ru.torch)),
                  this.torch.setParent(Ln),
                  xi(this.torch.position, 0, 1, 0))
                : this.torch &&
                  ((this.torch.data.remove = !0),
                  this.torch.setParent(null),
                  (this.torch = void 0));
        }
        postDelta(t, e, s) {
            this.sendInput(e),
                this.updateCharPanel(),
                this.updatePartyInfo(e),
                super.postDelta(t, e, s),
                wi(
                    Ln.position,
                    this.mount ? this.mount.position : this.transform.position
                ),
                this.handleCamera(t),
                this.handleHeartbeat(e),
                this.handleTorch(e);
        }
        parseDelta(t, e, s) {
            if (this.buffs.movementOverride.size)
                return super.parseDelta(t, e, s);
            switch (t) {
                case sp.posXZ:
                    {
                        const i = Gc(e, 768);
                        this.reconciliateLatencyPosition(i);
                        (this.serverInputAccepted = 1),
                            super.parseDelta(t, e, s);
                    }
                    break;
                case sp.rot:
                    this.parsedFirstInput ||
                        (super.parseDelta(t, e, s),
                        (ro[0] = this.rot),
                        (this.parsedFirstInput = !0));
                    break;
                case sp.steer:
                    break;
                default:
                    super.parseDelta(t, e, s);
            }
        }
        updateTransformRotation(t) {
            this.stats.alive &&
                (this.buffs.movementOverride.size || !oo.rmb.down
                    ? (this.transform.rotation[1] = this.rot)
                    : (this.transform.rotation[1] = ro[0]),
                this.mount && this.updateMountRotation(t),
                this.transform.rotation.onChange());
        }
        setLevel(t) {
            super.setLevel(t), (this.uiFrameDirty = !0);
        }
        onRemove() {
            super.onRemove(), Wn.removePlayer(this);
        }
        setExp(t) {
            super.setExp(t),
                se.update(e => ((e.current = t), (e.max = su(this.level)), e));
        }
        setClan(t, e = 0) {
            super.setClan(t, e), ke.set(t);
        }
    }
    class wE extends Cf {
        constructor(t) {
            super({ size: 1.2, name: "Merchant", ...t });
        }
        static get type() {
            return 4;
        }
    }
    class xE extends Qu {
        constructor(t) {
            super({ Za: Pu.darkskin, ...t }),
                (this.robe = this.mesh(
                    this.chest,
                    "character/robe.ho",
                    Pu.linen
                )),
                xi(this.robe.scale, 1.2, 1.2, 1.2),
                this.robe.rotation.set(0, 0, 0),
                xi(this.robe.position, 0, -0.9, 0.05),
                (this.hat = this.mesh(this.chest, null, Pu.emerald)),
                xi(this.hat.position, 0, 0.6, 0),
                xi(this.hat.scale, 1.2, 0.6, 1.2),
                (this.brochure = this.mesh(this.chest, null, Pu.gold)),
                xi(this.brochure.position, 0, 0.55, 0.6),
                this.brochure.rotation.set(0, 0, 0.78),
                xi(this.brochure.scale, 0.3, 0.3, 0.2),
                (this.scroll = this.mesh(this.hands[0], null, Pu.paper)),
                xi(this.scroll.position, 0, 0, 0),
                xi(this.scroll.scale, 0.25, 0.25, 1.2);
        }
        tickFixed() {}
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                xi(this.hands[0].position, -0.8, -0.2, 0.7),
                this.hands[0].rotation.set(1.8 + 0.1 * this.cycleSin, 0, 0);
        }
    }
    class kE extends wE {
        constructor(t) {
            super({ ...t, ...Wh.npcs.merchant });
        }
        remakeTransform() {
            super.remakeTransform(),
                (this.transform = new xE({ entity: this }));
        }
    }
    class $E extends Mf {
        constructor(t) {
            const e = nE[t.spawn.meta[0] || 0];
            super({
                name: e.name,
                size: ((t.spawn.meta[5] || 100) / 100) * e.size,
                ...t
            }),
                (this.behavior = e),
                (this.stationary = this.behavior.stationary || !1),
                (this.yReach = 1e3),
                this.behavior.height && (this.height = this.behavior.height);
        }
        static get type() {
            return 1;
        }
        tickFixed(t, e, s) {
            this.horizontalSteer(1),
                super.tickFixed(t, e, s),
                this.stats.alive && Ei(this.wU, this.wU, this.vel, t),
                (this.wU[1] = this.getWorldYBody(s, this.wU[0], this.wU[2]));
        }
    }
    class SE extends Qu {
        constructor(t) {
            (t.colPrim = t.colPrim || Pu.emerald),
                (t.colSec = t.colSec || Pu.bone2),
                (t.sounds = Ku),
                super({ Za: t.colPrim, colEyes: Pu.evilred, ...t }),
                (this.head = this.chest),
                this.changeMeshBaseColor(this.head, t.colSec),
                (this.chest = this.mesh(this, null, t.colSec, null, t.shader)),
                (this.chest.data.lod = 3),
                xi(this.chest.scale, 3, 3, 1.5),
                this.head.setParent(this.chest),
                xi(this.head.scale, 0.4, 0.2, 0.6),
                xi(this.head.position, 0, 0.6, 0),
                this.hands.forEach(t => {
                    t.setParent(this.chest);
                }),
                this.legs.forEach(e => {
                    xi(e.scale, 0.7, 0.7, 0.7),
                        this.changeMeshBaseColor(e, t.colPrim);
                });
        }
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                this.hands.forEach(t => {
                    (t.position[1] *= 0.8),
                        (t.position[2] *= 0.8),
                        (t.position[1] += 0.5);
                }),
                this.legs.forEach((t, e) => {
                    (t.position[1] -= 1), (t.position[0] += e ? 0.4 : -0.4);
                }),
                xi(this.chest.scale, 1.8, 2, 1.8);
        }
        getTop() {
            return 4;
        }
    }
    class ME extends fE {
        constructor(t) {
            super({ Za: t.colPrim || Pu.warden, ...t }),
                this.setCrown(t.colSec || Pu.gold),
                this.setShoulders(t.colSec || Pu.gold, 1.1),
                this.setCape(t.colSec || Pu.gold, 0.7);
        }
    }
    const EE = {
        death: { id: "skeleton/death", rnd: 2 },
        hurt: { id: "skeleton/hurt", rnd: 2 },
        melee: { delay: 0.3, distance: 5, rnd: 3, id: "melee/sword" },
        aggro: { id: "skeleton/aggro", rnd: 1 },
        idle: { id: "skeleton/idle", rnd: 2 }
    };
    class CE extends fE {
        constructor(t) {
            (t.colPrim = t.colPrim || Pu.bone),
                (t.colSec = t.colSec || Pu.bone2),
                (t.sounds = EE),
                super({ Za: t.colPrim, colEyes: Pu.evilred, ...t }),
                this.setShoulders(t.colSec, 0.5),
                this.legs.forEach(e => {
                    xi(e.scale, 0.4, 0.4, 0.4),
                        this.changeMeshBaseColor(e, t.colSec);
                }),
                this.hands.forEach(e => this.changeMeshBaseColor(e, t.colSec)),
                this.removeMesh(this.shield, !0),
                (this.shield = void 0);
        }
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                (this.chest.rotation[0] +=
                    0.1 *
                        (Math.sin(1.8 * e) * Math.cos(12 * e) * 0.3 +
                            0.3 * Math.sin(1.4 * e)) -
                    0.2),
                (this.chest.rotation[1] +=
                    0.15 * (Math.sin(1.3 * e) + 0.6 * Math.sin(2.4 * e))),
                (this.chest.rotation[2] +=
                    0.2 * (Math.sin(0.2 * e) + 0.5 * Math.sin(1.9 * e))),
                this.chest.rotation.onChange(),
                this.hands.forEach(t => {
                    (t.rotation[0] +=
                        0.2 *
                        (Math.sin(2 * e) * Math.cos(9 * e) +
                            Math.sin(1.3 * e))),
                        (t.rotation[1] +=
                            0.3 *
                            (Math.sin(2 * e - 2) * Math.cos(7 * e) +
                                Math.sin(0.8 * e))),
                        t.rotation.onChange();
                }),
                this.legs.forEach((t, s) => {
                    (t.rotation[1] += 0.3 * Math.sin(0.2 * e - s)),
                        t.rotation.onChange(),
                        (t.position[0] += s ? 0.15 : -0.15);
                });
        }
    }
    class TE extends dE {
        constructor(t) {
            (t.colPrim = t.colPrim || Pu.bone),
                (t.colSec = t.colSec || Pu.bone2),
                (t.sounds = EE),
                super({ Za: t.colPrim, colEyes: Pu.evilred, quiver: !1, ...t }),
                this.setShoulders(t.colSec, 0.5),
                this.legs.forEach(e => {
                    xi(e.scale, 0.4, 0.4, 0.4),
                        this.changeMeshBaseColor(e, t.colSec);
                }),
                this.hands.forEach(e => this.changeMeshBaseColor(e, t.colSec));
        }
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                (this.chest.rotation[0] +=
                    0.1 *
                        (Math.sin(1.8 * e) * Math.cos(12 * e) * 0.3 +
                            0.3 * Math.sin(1.4 * e)) -
                    0.2),
                (this.chest.rotation[1] +=
                    0.15 * (Math.sin(1.3 * e) + 0.6 * Math.sin(2.4 * e))),
                (this.chest.rotation[2] +=
                    0.2 * (Math.sin(0.2 * e) + 0.5 * Math.sin(1.9 * e))),
                this.chest.rotation.onChange(),
                this.hands.forEach(t => {
                    t.visible &&
                        ((t.rotation[0] +=
                            0.2 *
                            (Math.sin(2 * e) * Math.cos(9 * e) +
                                Math.sin(1.3 * e))),
                        (t.rotation[1] +=
                            0.3 *
                            (Math.sin(2 * e - 2) * Math.cos(7 * e) +
                                Math.sin(0.8 * e))),
                        t.rotation.onChange());
                }),
                this.legs.forEach((t, s) => {
                    t.visible &&
                        ((t.rotation[1] += 0.3 * Math.sin(0.2 * e - s)),
                        t.rotation.onChange(),
                        (t.position[0] += s ? 0.15 : -0.15));
                });
        }
    }
    class _E extends fE {
        constructor(t) {
            super({ Za: Pu.warden, ...t }),
                this.setHeadgear(Pu.gold),
                this.setShoulders(Pu.gold, 1.1),
                this.setCape(Pu.darksteel, 0.5);
        }
    }
    const PE = [
        ME,
        class extends fE {
            constructor(t) {
                super({ Za: Pu.warden, ...t }),
                    this.setHeadgear(Pu.gold),
                    this.setShoulders(Pu.gold, 1.1),
                    this.setCape(Pu.darksteel, 0.5);
            }
        },
        hm,
        class extends fE {
            constructor(t) {
                (t.colPrim = t.colPrim || Pu.bone),
                    (t.colSec = t.colSec || Pu.bone2),
                    (t.sounds = EE),
                    super({ Za: t.colPrim, colEyes: Pu.evilred, ...t }),
                    this.setShoulders(t.colSec, 0.5),
                    this.legs.forEach(e => {
                        xi(e.scale, 0.4, 0.4, 0.4),
                            this.changeMeshBaseColor(e, t.colSec);
                    }),
                    this.hands.forEach(e =>
                        this.changeMeshBaseColor(e, t.colSec)
                    ),
                    this.removeMesh(this.shield, !0),
                    (this.shield = void 0);
            }
            tickParts(t, e, s) {
                super.tickParts(t, e, s),
                    (this.chest.rotation[0] +=
                        0.1 *
                            (Math.sin(1.8 * e) * Math.cos(12 * e) * 0.3 +
                                0.3 * Math.sin(1.4 * e)) -
                        0.2),
                    (this.chest.rotation[1] +=
                        0.15 * (Math.sin(1.3 * e) + 0.6 * Math.sin(2.4 * e))),
                    (this.chest.rotation[2] +=
                        0.2 * (Math.sin(0.2 * e) + 0.5 * Math.sin(1.9 * e))),
                    this.chest.rotation.onChange(),
                    this.hands.forEach(t => {
                        (t.rotation[0] +=
                            0.2 *
                            (Math.sin(2 * e) * Math.cos(9 * e) +
                                Math.sin(1.3 * e))),
                            (t.rotation[1] +=
                                0.3 *
                                (Math.sin(2 * e - 2) * Math.cos(7 * e) +
                                    Math.sin(0.8 * e))),
                            t.rotation.onChange();
                    }),
                    this.legs.forEach((t, s) => {
                        (t.rotation[1] += 0.3 * Math.sin(0.2 * e - s)),
                            t.rotation.onChange(),
                            (t.position[0] += s ? 0.15 : -0.15);
                    });
            }
        },
        tm,
        Rm,
        class extends dE {
            constructor(t) {
                (t.colPrim = t.colPrim || Pu.bone),
                    (t.colSec = t.colSec || Pu.bone2),
                    (t.sounds = EE),
                    super({
                        Za: t.colPrim,
                        colEyes: Pu.evilred,
                        quiver: !1,
                        ...t
                    }),
                    this.setShoulders(t.colSec, 0.5),
                    this.legs.forEach(e => {
                        xi(e.scale, 0.4, 0.4, 0.4),
                            this.changeMeshBaseColor(e, t.colSec);
                    }),
                    this.hands.forEach(e =>
                        this.changeMeshBaseColor(e, t.colSec)
                    );
            }
            tickParts(t, e, s) {
                super.tickParts(t, e, s),
                    (this.chest.rotation[0] +=
                        0.1 *
                            (Math.sin(1.8 * e) * Math.cos(12 * e) * 0.3 +
                                0.3 * Math.sin(1.4 * e)) -
                        0.2),
                    (this.chest.rotation[1] +=
                        0.15 * (Math.sin(1.3 * e) + 0.6 * Math.sin(2.4 * e))),
                    (this.chest.rotation[2] +=
                        0.2 * (Math.sin(0.2 * e) + 0.5 * Math.sin(1.9 * e))),
                    this.chest.rotation.onChange(),
                    this.hands.forEach(t => {
                        t.visible &&
                            ((t.rotation[0] +=
                                0.2 *
                                (Math.sin(2 * e) * Math.cos(9 * e) +
                                    Math.sin(1.3 * e))),
                            (t.rotation[1] +=
                                0.3 *
                                (Math.sin(2 * e - 2) * Math.cos(7 * e) +
                                    Math.sin(0.8 * e))),
                            t.rotation.onChange());
                    }),
                    this.legs.forEach((t, s) => {
                        t.visible &&
                            ((t.rotation[1] += 0.3 * Math.sin(0.2 * e - s)),
                            t.rotation.onChange(),
                            (t.position[0] += s ? 0.15 : -0.15));
                    });
            }
        },
        class extends Qu {
            constructor(t) {
                (t.colPrim = t.colPrim || Pu.emerald),
                    (t.colSec = t.colSec || Pu.bone2),
                    (t.sounds = Ku),
                    super({ Za: t.colPrim, colEyes: Pu.evilred, ...t }),
                    (this.head = this.chest),
                    this.changeMeshBaseColor(this.head, t.colSec),
                    (this.chest = this.mesh(
                        this,
                        null,
                        t.colSec,
                        null,
                        t.shader
                    )),
                    (this.chest.data.lod = 3),
                    xi(this.chest.scale, 3, 3, 1.5),
                    this.head.setParent(this.chest),
                    xi(this.head.scale, 0.4, 0.2, 0.6),
                    xi(this.head.position, 0, 0.6, 0),
                    this.hands.forEach(t => {
                        t.setParent(this.chest);
                    }),
                    this.legs.forEach(e => {
                        xi(e.scale, 0.7, 0.7, 0.7),
                            this.changeMeshBaseColor(e, t.colPrim);
                    });
            }
            tickParts(t, e, s) {
                super.tickParts(t, e, s),
                    this.hands.forEach(t => {
                        (t.position[1] *= 0.8),
                            (t.position[2] *= 0.8),
                            (t.position[1] += 0.5);
                    }),
                    this.legs.forEach((t, e) => {
                        (t.position[1] -= 1), (t.position[0] += e ? 0.4 : -0.4);
                    }),
                    xi(this.chest.scale, 1.8, 2, 1.8);
            }
            getTop() {
                return 4;
            }
        },
        fE,
        dE,
        ME
    ];
    class UE extends $E {
        constructor(t) {
            super(t), (this.spawn = t.spawn), this.remakeTransform();
        }
        remakeTransform(t, e) {
            super.remakeTransform(),
                (this.transform = t
                    ? new t({ ...e, entity: this })
                    : new (PE[this.spawn.meta[0] || 0] || PE[0])({
                          entity: this,
                          level: this.spawn.meta[1] || 0,
                          colPrim:
                              this.spawn.meta[2] && oa(this.spawn.meta[2], 0),
                          colSec:
                              this.spawn.meta[3] && oa(this.spawn.meta[3], 0)
                      }));
        }
    }
    class IE extends vE {
        constructor(t) {
            super(t);
        }
    }
    class zE extends Cf {
        constructor(t) {
            super({ size: 1.2, name: "Sage", ...t });
        }
        static get type() {
            return 9;
        }
    }
    class AE extends Qu {
        constructor(t) {
            super({ Za: Pu.paleskin, colEyes: Pu.teal, ...t }),
                (this.robe = this.mesh(
                    this.chest,
                    "character/robe.ho",
                    Pu.leather
                )),
                xi(this.robe.scale, 1.2, 1.2, 1.2),
                this.robe.rotation.set(0, 0, 0),
                xi(this.robe.position, 0, -0.9, 0.05),
                (this.scroll = this.mesh(this.hands[1], null, Pu.woodbrown)),
                xi(this.scroll.position, 0, 0, 0),
                xi(this.scroll.scale, 0.2, 0.2, 3),
                (this.orb = this.mesh(this.scroll, null, Pu.teal)),
                xi(this.orb.position, 0, 0, -0.5),
                xi(this.orb.scale, 2, 2, 0.1);
        }
        tickFixed() {}
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                this.orb.rotation.set(0, 0, 0.3 * e),
                xi(this.hands[1].position, 0.8, -0.2, 0.7),
                this.hands[1].rotation.set(1.8, 0, 0);
        }
    }
    class DE extends zE {
        constructor(t) {
            super({ ...t, ...Wh.npcs.sage });
        }
        interact(t) {
            (this.interactions[0].choices[0] = this.interactions[0].choices[0].replace(
                "$1",
                200 * Wn.player.level
            )),
                super.interact(t);
        }
        remakeTransform() {
            super.remakeTransform(),
                (this.transform = new AE({ entity: this }));
        }
    }
    class RE extends Cf {
        constructor(t) {
            super({ size: 1.5, name: "Stash", ...t }), (this.height = 0.6);
        }
        static get type() {
            return 5;
        }
    }
    class BE extends Ju {
        constructor(t) {
            super(t),
                (this.chest = this.mesh(this, null, Pu.woodbrown)),
                xi(this.chest.scale, 2, 1, 1),
                xi(this.chest.position, 0, 0, 0),
                (this.brochure = this.mesh(this, null, Pu.gold)),
                xi(this.brochure.position, 0, 0, 0.5),
                this.brochure.rotation.set(0, 0, 0.78),
                xi(this.brochure.scale, 0.3, 0.3, 0.2);
        }
        tickParts(t, e, s) {}
    }
    class FE extends RE {
        constructor(t) {
            super({ ...t, ...Wh.npcs.stash });
        }
        remakeTransform() {
            super.remakeTransform(),
                (this.transform = new BE({ entity: this }));
        }
    }
    class NE extends Qu {
        constructor(t) {
            super({ Za: Pu.richpurple, ...t }),
                (this.backpack = this.mesh(this.chest, null, Pu.leather)),
                xi(this.backpack.scale, 1.1, 0.8, 0.6),
                xi(this.backpack.position, 0, 0.2, -0.7),
                (this.scroll = this.mesh(this.hands[0], null, Pu.paper)),
                xi(this.scroll.position, -0.4, 0, 0),
                xi(this.scroll.scale, 0.8, 0.25, 1);
        }
        tickParts(t, e, s) {
            super.tickParts(t, e, s),
                (this.hands[0].position[2] += 0.6),
                (this.hands[0].rotation[1] += 2),
                (this.hands[0].rotation[0] += -1.9),
                this.hands[0].rotation.onChange();
        }
    }
    class LE extends Df {
        constructor(t) {
            super({ ...t, ...Wh.npcs.trader }),
                (this.hydratedItems = []),
                (this.itemStores = this.items.map((t, e) => {
                    const s = new jx(),
                        i = It();
                    return (
                        s.hydrate({
                            type: t.item.type,
                            tier: t.item.tier,
                            stacks: t.stacks,
                            store: i
                        }),
                        (s.traderslot = e),
                        this.hydratedItems.push(s),
                        i
                    );
                }));
        }
        remakeTransform() {
            super.remakeTransform(),
                (this.transform = new NE({ entity: this }));
        }
    }
    const OE = {
            Monster: class extends $E {
                constructor(t) {
                    super(t), (this.spawn = t.spawn), this.remakeTransform();
                }
                remakeTransform(t, e) {
                    super.remakeTransform(),
                        (this.transform = t
                            ? new t({ ...e, entity: this })
                            : new (PE[this.spawn.meta[0] || 0] || PE[0])({
                                  entity: this,
                                  level: this.spawn.meta[1] || 0,
                                  colPrim:
                                      this.spawn.meta[2] &&
                                      oa(this.spawn.meta[2], 0),
                                  colSec:
                                      this.spawn.meta[3] &&
                                      oa(this.spawn.meta[3], 0)
                              }));
                }
            },
            Player: vE,
            Conjurer: class extends tE {
                constructor(t) {
                    super({ ...t, ...Wh.npcs.conjurer });
                }
                interact(t) {
                    const e = Na.from(t.splice(1)).toString().split("#");
                    "" !== e[0]
                        ? this.setDialogue(
                              this.interactions[0].text,
                              Array.from(e, t => {
                                  const e = t.split("~");
                                  return (
                                      this.interactions[0].choices[0].replace(
                                          "$1",
                                          e[0]
                                      ) + (e[1] > 0 ? ` (Lv. ${e[1]}+)` : "")
                                  );
                              })
                          )
                        : this.setDialogue(this.interactions[0].text, []),
                        super.interact(t);
                }
                remakeTransform() {
                    super.remakeTransform(),
                        (this.transform = new KM({ entity: this }));
                }
            },
            Drop: class extends sE {
                constructor(t) {
                    super(t),
                        (this.transform = nc({
                            geo: "drop/drop.ho",
                            tex: "items.png",
                            program: vl.drop,
                            ts: !1,
                            rs: !1,
                            dynamic: !1
                        })),
                        this.transform.rotation.reorder("ZXY"),
                        (this.transform.data.multi.needsUpdate = !1),
                        (this.size = 0.7),
                        (this.transform.visible = !1),
                        (this.uiTimeout = 0),
                        (this.dirty = !1),
                        (this.hasInfo = !1),
                        (this.hasPos = !1),
                        (this.hasRot = !1),
                        (this.color = "misc");
                }
                postDelta(t, e, s) {
                    if (
                        this.transform.visible &&
                        this.dirty &&
                        s.getChunkFromWorld(this.wU[0], this.wU[2]).deserialized
                    ) {
                        (this.wU[1] =
                            this.getWorldYBody(s, this.wU[0], this.wU[2]) +
                            0.1 * Math.random() +
                            0.1),
                            (this.transform.position[0] = this.wU[0]),
                            (this.transform.position[1] = this.wU[1]),
                            (this.transform.position[2] = this.wU[2]),
                            xi(Gn, 0, 1, 0);
                        const t = s.getNormal(this.wU[0], this.wU[2]);
                        sa.fromVectors(Gn, t),
                            this.transform.rotation.fromQuaternion(sa),
                            (this.transform.rotation[1] = this.rot),
                            this.transform.rotation.onChange(),
                            (this.transform.matrixAutoUpdate = !0),
                            this.transform.updateMatrixWorld(!0),
                            (this.transform.data.multi.needsUpdate = !0),
                            (this.dirty = !1);
                    }
                }
                setXZPos(t) {
                    this.hasPos ||
                        ((this.hasPos = !0),
                        super.setXZPos(t),
                        (this.dirty = !0));
                }
                setRot(t) {
                    this.hasRot ||
                        ((this.hasRot = !0),
                        super.setRot(t),
                        (this.dirty = !0));
                }
                setDropInfo(t, e, s, i, n) {
                    let a, r;
                    (this.hasInfo = !0),
                        (this.party = i),
                        (this.partytimeout = n),
                        (this.type = Or[t]),
                        (this.tier = e),
                        (this.quality = s),
                        "gold" == this.type
                            ? ((this.name = this.tier + "c"),
                              (this.size = 0.4),
                              (a = "gold"),
                              (this.color = "gold"),
                              (this.quality = 100))
                            : ((a = this.type + this.tier),
                              (r = If[a]) &&
                                  (this.name = jh(this.type, this.tier)),
                              "misc" !== this.type &&
                              "rune" !== this.type &&
                              "book" !== this.type
                                  ? ((this.color = Au(s)[1]),
                                    vi.itemQualityPercent &&
                                        (this.name += ` ${this.quality}%`))
                                  : ((this.color = this.type),
                                    (this.quality = 100)));
                    const o = (r && r.art) || a;
                    (this.transform.data.MW = Er[o]),
                        xi(
                            this.transform.scale,
                            20 * Er[o][0],
                            1,
                            20 * Er[o][1]
                        ),
                        (this.transform.data.Pw = [
                            6.1 * Math.random(),
                            0,
                            0,
                            0
                        ]),
                        (this.dirty = !0),
                        (this.transform.visible = !0);
                }
                onRemove() {
                    this.transform.data.multi.remove(this.transform),
                        this.transform.setParent(null),
                        oo.shift.down &&
                            (kM.add(this),
                            (this.uiTimeout =
                                5 * Math.round(Wn.time / 5) + 10));
                }
            },
            Merchant: class extends wE {
                constructor(t) {
                    super({ ...t, ...Wh.npcs.merchant });
                }
                remakeTransform() {
                    super.remakeTransform(),
                        (this.transform = new xE({ entity: this }));
                }
            },
            Stash: class extends RE {
                constructor(t) {
                    super({ ...t, ...Wh.npcs.stash });
                }
                remakeTransform() {
                    super.remakeTransform(),
                        (this.transform = new BE({ entity: this }));
                }
            },
            Blacksmith: class extends XM {
                constructor(t) {
                    super({ ...t, ...Wh.npcs.blacksmith });
                }
                remakeTransform() {
                    super.remakeTransform(),
                        (this.transform = new JM({ entity: this }));
                }
            },
            Trader: class extends Df {
                constructor(t) {
                    super({ ...t, ...Wh.npcs.trader }),
                        (this.hydratedItems = []),
                        (this.itemStores = this.items.map((t, e) => {
                            const s = new jx(),
                                i = It();
                            return (
                                s.hydrate({
                                    type: t.item.type,
                                    tier: t.item.tier,
                                    stacks: t.stacks,
                                    store: i
                                }),
                                (s.traderslot = e),
                                this.hydratedItems.push(s),
                                i
                            );
                        }));
                }
                remakeTransform() {
                    super.remakeTransform(),
                        (this.transform = new NE({ entity: this }));
                }
            },
            Dummy: class extends aE {
                constructor(t) {
                    super({ ...t }), this.remakeTransform();
                }
                remakeTransform() {
                    super.remakeTransform(),
                        (this.transform = new rE({ entity: this }));
                }
            },
            Sage: class extends zE {
                constructor(t) {
                    super({ ...t, ...Wh.npcs.sage });
                }
                interact(t) {
                    (this.interactions[0].choices[0] = this.interactions[0].choices[0].replace(
                        "$1",
                        200 * Wn.player.level
                    )),
                        super.interact(t);
                }
                remakeTransform() {
                    super.remakeTransform(),
                        (this.transform = new AE({ entity: this }));
                }
            }
        },
        qE = {};
    for (const t in OE) qE[OE[t].type] = OE[t];
    const HE = (t, e) => (t == vE.type ? (e == Wn.playerId ? bE : IE) : qE[t]),
        WE = [-0, -1, -0];
    class ZE {
        constructor(t) {
            this.entities = { array: [], map: new Map(), type: {} };
            for (const t in OE) this.entities.type[OE[t].type] = [];
            (this.chunks = []),
                (this.time = 1e-7),
                (this.accum = 1e-6),
                (this.timestep = 1 / 60),
                (this.daytime = 0),
                (this.tickId = 0),
                (this.spawns = { array: [], map: new Map(), types: new Map() }),
                (this.grids = {}),
                (this.settingsCache = new Map());
        }
        load(t) {
            this.id = t;
        }
        setTime(t) {
            (this.tickId = t), (this.time = this.tickId * this.timestep);
        }
        tick(t) {
            (t = Math.min(t, 1)), (this.accum += t);
            let e = 0;
            for (; this.accum > this.timestep; )
                (this.accum -= this.timestep),
                    ++e,
                    this.setTime(this.tickId + 1),
                    this.tickFixed(this.timestep);
            1 !== e &&
                Math.abs(this.accum) < 0.1 * this.timestep &&
                (this.accum = 0),
                this.tickDelta(t, this.accum);
        }
        tickDelta(t, e) {
            const s = this.time + e;
            for (let e = 0, i = this.chunks.length; e < i; ++e)
                this.chunks[e].tickDelta(t, s, this);
            for (let e = this.entities.array.length - 1; e >= 0; --e)
                this.entities.array[e].preDelta(t, s, this),
                    this.entities.array[e].tickDelta(t, s, this),
                    this.entities.array[e].postDelta(t, s, this);
        }
        tickFixed(t) {
            this.daytime = (this.time / 600 + 0.9) % 1;
            for (let e = 0, s = this.chunks.length; e < s; ++e)
                this.chunks[e].tickFixed(t, this.time);
            for (let e = this.entities.array.length - 1; e >= 0; --e)
                this.entities.array[e].preFixed(t, this.time, this),
                    this.entities.array[e].tickFixed(t, this.time, this),
                    this.entities.array[e].postFixed(t, this.time, this);
        }
        createEntity(t, e, s) {
            ((s = s || {}).spawn = this.spawns.map.get(e)), (s.id = e);
            const i = new (HE(t, e))(s);
            return void 0 !== e && (i.id = e), this.addEntity(i);
        }
        addEntity(t) {
            if (void 0 !== t && void 0 !== t.constructor.type)
                if (this.entities.array.length >= 32766)
                    console.log(
                        "Error: tried addint entity but we already are at the maximum"
                    );
                else {
                    if (void 0 === t.id)
                        for (
                            ;
                            void 0 === t.id ||
                            !this.isEntityIdAllowed(t.id) ||
                            this.isEntityIdTaken(t.id);

                        )
                            t.id = Rr(1, 32766);
                    if (!this.isEntityInWorld(t) && !this.isEntityIdTaken(t.id))
                        return (
                            this.entities.array.push(t),
                            this.entities.map.set(t.id, t),
                            this.entities.type[t.constructor.type].push(t),
                            t
                        );
                    console.log("Error: Entity in world or entity id taken");
                }
            else
                console.log(
                    "Error: tried adding an entity of unknown type to the world"
                );
        }
        removeEntity(t) {
            if (void 0 === t) return !1;
            this.entities.map.delete(t.id);
            let e = this.entities.array.indexOf(t);
            return (
                e > -1 && this.entities.array.splice(e, 1),
                (e = this.entities.type[t.constructor.type].indexOf(t)) > -1 &&
                    this.entities.type[t.constructor.type].splice(e, 1),
                t.onRemove(),
                t
            );
        }
        isEntityIdTaken(t) {
            return this.entities.map.has(t);
        }
        isEntityIdAllowed(t) {
            return !0;
        }
        isEntityInWorld(t) {
            return this.entities.array.indexOf(t) >= 0;
        }
        entity(t) {
            return this.entities.map.get(t);
        }
        getEntityById(t) {
            return this.entities.map.get(t);
        }
        setNetAreaAABB(t, e, s) {
            (e -= e % 64),
                (s -= s % 64),
                (t.l = e - 64),
                (t.r = e + 128),
                (t.u = s - 64),
                (t.d = s + 128);
        }
        serialize() {
            return (
                (this.serializedData = er.world.encode(this.data)),
                this.serializedData
            );
        }
        getHeight(t, e) {
            (t = na(t, 0, this.bounds)), (e = na(e, 0, this.bounds));
            const s = this.chunks[
                Math.min(Math.floor(t / 64), this.chunkAmount - 1) +
                    Math.min(Math.floor(e / 64), this.chunkAmount - 1) *
                        this.chunkAmount
            ];
            return s.deserialized ? s.getHeight(t % 64, e % 64) : -0;
        }
        getNormal(t, e) {
            (t = na(t, 0, this.bounds)), (e = na(e, 0, this.bounds));
            const s = this.chunks[
                Math.min(Math.floor(t / 64), this.chunkAmount - 1) +
                    Math.min(Math.floor(e / 64), this.chunkAmount - 1) *
                        this.chunkAmount
            ];
            return s.deserialized ? s.getNormal(t % 64, e % 64) : WE;
        }
        getSteepness(t, e) {
            (t = na(t, 0, this.bounds)), (e = na(e, 0, this.bounds));
            const s = this.chunks[
                Math.min(Math.floor(t / 64), this.chunkAmount - 1) +
                    Math.min(Math.floor(e / 64), this.chunkAmount - 1) *
                        this.chunkAmount
            ];
            return s.deserialized ? s.getSteepness(t % 64, e % 64) : -0;
        }
        clampV3(t) {
            return (
                (t[0] = na(t[0], 0.01, this.bounds - 0.01)),
                (t[2] = na(t[2], 0.01, this.bounds - 0.01)),
                t
            );
        }
        deserialize({ serialized: t, isUpdate: e }) {
            this.parse({ deserialized: er.world.decode(t), isUpdate: e });
        }
        getChunkFromWorld(t, e) {
            return (
                (t = na(t, 0, this.bounds)),
                (e = na(e, 0, this.bounds)),
                (t = Math.min(Math.floor(t / 64), this.chunkAmount - 1)),
                (e = Math.min(Math.floor(e / 64), this.chunkAmount - 1)),
                this.chunks[t + e * this.chunkAmount]
            );
        }
        getChunk(t, e) {
            return (
                (t = na(t, 0, this.chunkAmount)),
                (e = na(e, 0, this.chunkAmount)),
                this.chunks[t + e * this.chunkAmount]
            );
        }
        getChunkUnsafe(t, e) {
            if (!(t >= this.chunkAmount || e >= this.chunkAmount))
                return this.chunks[t + e * this.chunkAmount];
        }
        setMode(t) {
            this.mode = Bg[t || "hZ"];
        }
        parse({ deserialized: t, isUpdate: e }) {
            if (
                (e || this.destroy(),
                (this.data = t),
                (this.deserialized = !0),
                this.settingsCache.clear(),
                this.setMode(this.getSetting("mode")),
                !e)
            ) {
                (this.chunkAmount = this.data.chunkAmount),
                    (this.bounds = 64 * this.chunkAmount),
                    (this.grids.props = new YM(this.bounds, 16)),
                    (this.grids.entities = new YM(
                        this.bounds,
                        32 * this.chunkAmount
                    )),
                    (this.chunks = []);
                for (let t = 0; t < this.chunkAmount; ++t)
                    for (let e = 0; e < this.chunkAmount; ++e)
                        this.chunks.push(
                            new VM({
                                id: e + t * this.chunkAmount,
                                x: e,
                                z: t,
                                world: this
                            })
                        );
                for (let t = 0; t < this.chunkAmount; ++t)
                    for (let e = 0; e < this.chunkAmount; ++e) {
                        const s = this.getChunkUnsafe(e, t);
                        (s.left = this.getChunkUnsafe(e - 1, t)),
                            (s.right = this.getChunkUnsafe(e + 1, t)),
                            (s.front = this.getChunkUnsafe(e, t + 1)),
                            (s.back = this.getChunkUnsafe(e, t - 1)),
                            (s.frontRight = this.getChunkUnsafe(e + 1, t + 1)),
                            (s.backLeft = this.getChunkUnsafe(e - 1, t - 1));
                    }
            }
            this.spawns.array.forEach(t => {
                t.entity > 0 && this.removeEntity(this.getEntityById(t.entity));
            }),
                this.spawns.types.forEach(t => t.clear()),
                (this.spawns.array.length = 0),
                this.spawns.map.clear(),
                this.spawns.types.set(2, new Map()),
                this.data.spawns.forEach((t, e) => {
                    const s = { entity: 0 };
                    Qc(s, t),
                        this.spawns.map.has(s.id)
                            ? console.error(
                                  `Duplicate spawn id ${s.id} - spawns must have unique id`
                              )
                            : (this.spawns.map.set(s.id, s),
                              this.spawns.types.has(s.class) ||
                                  this.spawns.types.set(s.class, new Map()),
                              this.spawns.types.get(s.class).set(s.id, s)),
                        (this.spawns.array[e] = s);
                });
        }
        getSetting(t) {
            if (!this.settingsCache.has(t)) {
                const e = this.data.settings.find(e => e.id === t);
                this.settingsCache.set(t, e ? e.value : void 0);
            }
            return this.settingsCache.get(t);
        }
        destroy() {
            this.deserialized && console.log("destroying world"),
                (this.deserialized = !1),
                this.chunks.forEach(t => {
                    t.destroy();
                }),
                (this.chunks = []);
            for (let t = this.entities.array.length - 1; t >= 0; t--)
                this.removeEntity(this.entities.array[t]);
            (this.grids.entities = void 0),
                (this.grids.props = void 0),
                (this.spawns.array.length = 0),
                this.spawns.map.clear(),
                this.spawns.types.clear(),
                (this.data = void 0);
        }
        getPlayerByName(t) {
            const e = t.toLowerCase();
            return this.entities.type[0].find(
                t => t.name && t.name.toLowerCase() === e
            );
        }
        getEntitiesInGrid(t, e, s = 100) {
            return (
                this.circle.update(t, e, s).aabb(),
                this.grids.entities.query(this.circle)
            );
        }
    }
    const jE = (t, e, s) => {
            Bt.update(i => (i.push({ title: t, text: e, choices: s }), i));
        },
        GE = {
            2: "On cooldown.",
            3: "Can only be cast on enemy.",
            4: "Can only be cast on ally.",
            5: "Not enough mana.",
            6: "Out of range.",
            10: "Target is dead.",
            7: "Can't do that during movement.",
            8: "Can't cast while busy.",
            9: "You are incapacitated.",
            11: "Can't do that in combat.",
            12: "Can't cast this right now.",
            13: "Level Yy is too big."
        },
        VE = new Map();
    window.createDialog = jE;
    VE.set(15, t => {
        if (
            (ix(
                "system",
                `You have learned ${Wh.items.book[t[0]].name} Lv. ${t[1] + 1}`,
                !0
            ),
            Lf(24, 100),
            0 === t[1] && ff.get(t[0]).autoSkillbar)
        ) {
            const e = vi.skillbarsettings[Wn.player.name].findIndex(
                t => -1 === t.id
            );
            e >= 0 && Me[e].update(e => ((e.id = t[0]), e));
        }
    })
        .set(14, t => {
            Wn.player.skills.add(t[0], Hc(t[2], 21600), Hc(t[3], 21600), t[1]);
        })
        .set(16, t => {
            Wn.player.skills.remove(t[0]);
        })
        .set(1, t => {
            Ft.set({ type: "error", text: GE[t[0]] });
        })
        .set(17, t => {
            Wn.player.setExp(t[1]);
            const e = Wn.entity(t[2]);
            e &&
                ((t, e) => {
                    xM(t, !1, !1, !0, `+${e} EXP`, mM.exp, 4, 0);
                })(wi([0, 0, 0], e.visualPosition), t[0]),
                vi.chat[0] &&
                    ix(
                        "exp",
                        `You gained ${t[0]} experience ${
                            e ? "from " + e.name : ""
                        }.\n      ${Wn.player.exp}/${su(Wn.player.level)}`,
                        !0
                    );
        })
        .set(18, t => {
            Wn.player.setExp(t[1]),
                ix(
                    "error",
                    `You have lost ${t[0]} experience. ${Wn.player.exp}/${su(
                        Wn.player.level
                    )}`,
                    !0
                );
        })
        .set(19, t => {
            Wn.player.setExp(t[0]);
        })
        .set(41, t => {
            const e = Wn.entity(t[1]);
            Jr({ id: "ui/fame", pitch: -1 }),
                e &&
                    ((t, e) => {
                        xM(t, !1, !1, !0, `+${e} Fame`, mM.fame, 5.5, 0);
                    })(wi([0, 0, 0], e.visualPosition), t[0]),
                vi.chat[11] &&
                    ix(
                        "fame",
                        `You gained ${t[0]} fame ${e ? "from " + e.name : ""}`,
                        !0
                    );
        })
        .set(42, t => {
            vi.chat[11] && ix("fame", `You have lost ${t[0]} fame.`, !0);
        })
        .set(20, t => {
            const e = Wn.getEntityById(t[0]);
            e && e.interact(t);
        })
        .set(21, t => {
            Nt.set(void 0);
        })
        .set(22, t => {
            const e = Na.from(t).toString();
            ix("system", e, !0);
        })
        .set(23, t => {
            const e = Na.from(t).toString();
            ix("error", e, !0);
        })
        .set(44, t => {
            const e = Na.from(t.slice(1)).toString();
            jE(Wh.ui.party.summon, Wh.ui.party.onSummon.replace("$1", e), [
                {
                    text: Wh.ui.accept,
                    nocombat: !0,
                    fun: () => {
                        Ld("summonaccept", e);
                    }
                },
                { text: Wh.ui.decline, fun: () => {} }
            ]);
        })
        .set(24, t => {
            const e = Na.from(t.slice(1)).toString();
            jE(Wh.ui.party.invite, Wh.ui.party.onInvite.replace("$1", e), [
                {
                    text: Wh.ui.accept,
                    fun: () => {
                        Ld("partyaccept", t[0] + "");
                    }
                },
                {
                    text: Wh.ui.decline,
                    fun: () => {
                        Ld("partydecline", t[0] + "");
                    }
                }
            ]);
        })
        .set(25, t => {
            const e = Na.from(t).toString();
            if (window.partyLink) {
                jE(
                    Wh.ui.party.link,
                    Wh.ui.party.onLink +
                        `<p><input readonly type="text" id='partylink' value='${e}'></p>`,
                    [
                        {
                            text: Wh.ui.party.copyLink,
                            fun: () => {
                                document.getElementById("partylink").select(),
                                    document.execCommand("copy");
                            }
                        },
                        { text: Wh.ui.close }
                    ]
                );
            } else {
                window.partyLink = e;
            }
        })
        .set(26, t => {
            Wn.player.inventory.setItem(t[0], t[1], t[2]);
        })
        .set(27, t => {
            Wn.player.inventory.removeItem(t[0], t[1]);
        })
        .set(28, t => {
            Wn.player.inventory.setGold(t[0], t[1], t[2]);
        })
        .set(29, t => {
            Xt.set(t[0]), Zx(t[0], t[1], 12);
        })
        .set(30, t => {
            ie.set(0 == t[0] ? void 0 : t[0] - 1);
        })
        .set(43, t => {
            ne.set(0 == t[0] ? void 0 : t[0] - 1);
        })
        .set(31, t => {
            ce.set(t[0]);
        })
        .set(32, t => {
            YE(t, he);
        })
        .set(33, t => {
            ue.update(t => !t), ix("inv", Wh.ui.merchant.auctioncancel, !0);
        })
        .set(34, t => {
            YE(t.slice(1), fe), pe.set({ gold: t[0] });
        })
        .set(35, t => {
            pe.set({ gold: t[0] });
        })
        .set(36, t => {
            pe.set(!1);
        })
        .set(37, t => {
            ge.set(!0), Lf(22, 100);
        })
        .set(38, t => {
            ge.set(!1);
        })
        .set(39, t => {
            ve.set(!0);
        })
        .set(40, t => {
            ve.set(!1);
        })
        .set(46, t => {
            const e = Wn.entity(t[0]);
            void 0 !== e && (e.party = 1);
        })
        .set(45, t => {
            const e = t[0];
            e < 1e3 && e > 0 && Ft.set({ type: "error", timer: 500, text: e }),
                e <= 5 && e > 0
                    ? Jr({ id: "ui/countdown", pitch: -1 })
                    : 0 === e
                    ? Jr({ id: "ui/battlestart", pitch: -1 })
                    : 1e3 === e
                    ? Jr({ id: "ui/victory", pitch: -1 })
                    : 2e3 === e && Jr({ id: "ui/loss", pitch: -1 });
        })
        .set(47, t => {
            Kh(t[0]);
        });
    const YE = (t, e) => {
            e.update(
                e => (
                    (e.length = 0),
                    t.forEach(t => {
                        e.push(new jx(t));
                    }),
                    e
                )
            );
        },
        JE = (t, e) => {
            Wn.player && VE.get(t)(e);
        },
        XE = new Map();
    XE.set(0, (t, e, s) => {
        Wn.removeEntity(t);
    })
        .set(24, (t, e, s) => {
            const i = Gc(2 * e[1], 768);
            t &&
                (xf([i[0], 1, i[1]], Wn.netArea)
                    ? t.forceNetPosition(i)
                    : Wn.removeEntity(t));
        })
        .set(1, (t, e, s) => {
            e[1] > 0 &&
                e[1] !== t.target &&
                t.transform &&
                t.transform.onAggro(),
                t === Wn.player &&
                    t.target !== e[1] &&
                    (Wn.entity(e[1])
                        ? (4 === vi.tutprogress &&
                              2 === Wn.entity(e[1]).faction &&
                              Lf(4, 100),
                          Jr({ id: "ui/target", pitch: -1 }))
                        : 0 === e[1] && Jr({ id: "ui/detarget", pitch: -1 })),
                t.setTarget(e[1]) &&
                    vi.chat[1] &&
                    ix("combat", `${KE(e[0])} changed target to ${KE(e[1])}.`);
        })
        .set(2, (t, e, s) => {
            for (let s = 1; s < e.length; s += 2)
                t.stats.setResource(e[s], e[s + 1]);
        })
        .set(5, (t, e, s) => {
            for (let s = 1; s < e.length; s += 2)
                t.stats.setResource(e[s], e[s + 1]);
        })
        .set(3, (t, e, s) => {
            for (let s = 1; s < e.length; s += 2)
                t.stats.setStat(e[s], e[s + 1]);
        })
        .set(4, (t, e, s) => {
            if (
                (t == Wn.player &&
                    (Lf(6, 100),
                    t.skills.cd(e[1], Wn.time, Hc(e[2], 21600)),
                    e[5] > 0 &&
                        t.skills.globalCd(Hc(e[4], 21600), Hc(e[5], 21600))),
                !s && t.transform)
            ) {
                const s = ff.get(e[1]);
                (s.castLen && t.transform.currentAnim) ||
                    !s.fx.animCast ||
                    t.transform.anim(s.fx.animCast),
                    s.fx.weaponRibbon &&
                        t.transform.weapon &&
                        Fl({
                            parent: t.transform.weapon,
                            ...s.fx.weaponRibbon
                        }),
                    s.fx.effectCast &&
                        s.fx.effectCast.forEach(e => {
                            cc(e, void 0, t.transform).data.creature = t;
                        }),
                    t.transform.onEffort();
            }
        })
        .set(20, (t, e, s) => {
            t.skills.startTimedCast(
                ff.get(e[1]),
                Hc(e[2], 21600),
                e[3],
                Hc(e[4], 21600)
            ),
                e[5] > 0 && t.skills.globalCd(Hc(e[2], 21600), Hc(e[5], 21600));
        })
        .set(21, (t, e, s) => {
            t.skills.interruptTimedCast(!0);
        })
        .set(22, (t, e, s) => {
            t.skills.finishTimedCast(Hc(e[1], 21600));
        })
        .set(6, (t, e, s) => {
            const i = Wn.getEntityById(e[3]),
                n = e[4];
            void 0 !== i && "Damage" === vi.dpsmeterMode && Mb(i, e[1]),
                t === Wn.player
                    ? vi.showIncomingDamage &&
                      bM([-0.2, -0.2, 0.5], e[1], n, e[5], !0)
                    : i === Wn.player &&
                      bM(wi([0, 0, 0], t.visualPosition), e[1], n, e[5]),
                n > 0 && t.stats.changeResource(6, -e[1]),
                e[6] > 0 &&
                    (t.stats.refreshCombatTimer(Wn.time, e[6]),
                    i && i.stats.refreshCombatTimer(Wn.time, e[6]));
            const a = ff.get(e[2]);
            if (!s && n > 0)
                if (1 !== n)
                    i &&
                        i.transform &&
                        t.transform &&
                        (a.fx.impactSound &&
                            Jr({
                                ...op(a.fx.impactSound, i),
                                transform: t.transform,
                                pitch: a.fx.impactSoundPitchCaster
                                    ? i.transform.getScaleFactor()
                                    : 1
                            }),
                        a.fx.effectDirImpact &&
                            a.fx.effectDirImpact.forEach(e => {
                                const s = cc(e);
                                (s.data.creature = t),
                                    Si(
                                        (s.data.dir = [0, 0, 0]),
                                        i.transform.position,
                                        t.transform.position
                                    ),
                                    _i(s.data.dir, s.data.dir),
                                    Ei(
                                        s.position,
                                        t.transform.position,
                                        s.data.dir,
                                        t.shape.radius
                                    ),
                                    s.updateMatrix(),
                                    s.updateMatrixWorld(!0);
                            }),
                        a.fx.effectTarget &&
                            a.fx.effectTarget.forEach(e => {
                                cc(e, void 0, t.transform).data.creature = t;
                            }),
                        t.transform.onHurt(e[1] / t.stats.getStat(6), n));
                else if (i && i.transform && t.transform) {
                    const e = cc(Ru.physBlock);
                    (e.data.creature = t),
                        Si(
                            (e.data.dir = [0, 0, 0]),
                            i.transform.position,
                            t.transform.position
                        ),
                        _i(e.data.dir, e.data.dir),
                        Ei(
                            e.position,
                            t.transform.position,
                            e.data.dir,
                            t.shape.radius
                        ),
                        e.updateMatrix(),
                        e.updateMatrixWorld(!0);
                }
        })
        .set(7, (t, e, s) => {
            const i = Wn.getEntityById(e[3]);
            void 0 !== i && "Healing" === vi.dpsmeterMode && Mb(i, e[1]),
                i && e[5] && i.stats.refreshCombatTimer(Wn.time, e[5]),
                t === Wn.player
                    ? vi.showIncomingHeal &&
                      wM([0.2, -0.2, 0.5], e[1], e[4], !0)
                    : i === Wn.player &&
                      wM(wi([0, 0, 0], t.visualPosition), e[1], e[4]),
                t.stats.changeResource(6, e[1]);
            const n = ff.get(e[2]);
            !s && i && i.transform && t.transform && tC(n, i, t);
        })
        .set(8, (t, e, s) => {
            t.stats.changeResource(7, e[1]);
            const i = Wn.getEntityById(e[3]);
            if (
                (t === Wn.player &&
                    vi.showIncomingHeal &&
                    ((t, e, s, i = !1) => {
                        xM(t, i, 3 === s, i || 3 !== s, e, mM.mana, 2, 0);
                    })([0.25, -0.2, 0.5], e[1], e[4], !0),
                t.transform)
            ) {
                cc(Ru.gainMana, void 0, t.transform).data.creature = t;
            }
            const n = ff.get(e[2]);
            !s && i && i.transform && t.transform && tC(n, i, t);
        })
        .set(9, (t, e, s) => {
            0 == e[1]
                ? t.stats.alive &&
                  (vi.chat[5] && ix("combat", `${KE(e[0])} died.`),
                  t.stats.die(),
                  t == Wn.player && Wn.mode.allowRespawn
                      ? jE(Wh.ui.death.death, Wh.ui.death.deathmsg, [
                            {
                                text: Wh.ui.death.respawn,
                                fun: () => {
                                    Ld("respawn", "");
                                }
                            }
                        ])
                      : t.id == Wn.player.target && Lf(7, 100))
                : t.stats.alive || t.stats.respawn();
        })
        .set(10, (t, e, s) => {
            t.setFaction(e[1]);
        })
        .set(13, (t, e, s) => {
            t.setLevel(e[1]);
        })
        .set(15, (t, e, s) => {
            t.setClass(e[1]);
        })
        .set(11, (t, e, s) => {
            t.setName(Na.from(e.slice(1)).toString());
        })
        .set(12, (t, e, s) => {
            t.setClan(
                e.length > 2 ? Na.from(e.slice(2)).toString() : void 0,
                e[1]
            );
        })
        .set(14, (t, e, s) => {
            if ((t.setLevel(e[1]), vi.chat[6])) {
                const s = `${t == Wn.player ? "You" : KE(e[0])} leveled up to ${
                    e[1]
                }!`;
                ix("lvlup", s),
                    t == Wn.player &&
                        (Lf(16, 100),
                        ff.forEach(t => {
                            t.class === Wn.player.class &&
                                t.minlevel === e[1] &&
                                (Lf(19, 100),
                                ((t, e, s = "") => {
                                    zt.update(
                                        i => (
                                            i.push({
                                                text: t,
                                                icon: e,
                                                css: s
                                            }),
                                            i
                                        )
                                    );
                                })(
                                    `<span class=textprimary><b class=textgreen>${
                                        Wh.items.book[t.id].name
                                    }</b><br>Skill book available at the Trader!</span>`,
                                    `skills/${t.id}.${$r}`,
                                    "border primary"
                                ));
                        }));
            }
            t.transform && cc(Ru.levelUp, void 0, t.transform);
        })
        .set(16, (t, e, s) => {
            t.buffs.setBuff(
                e[1],
                e[2],
                e[3],
                Hc(e[4], 21600),
                Hc(e[5], 21600),
                e[6],
                e[7],
                e.length > 8 ? e.slice(8) : void 0
            );
        })
        .set(17, (t, e, s) => {
            t.buffs.removeBuff(e[1], e[2]);
        })
        .set(18, (t, e, s) => {
            const i = ff.get(e[1]),
                n = new Al(Wn.time, Hc(e[3], 21600) - Wn.time + 0.2);
            sh(e[0], e[2], i, n);
        })
        .set(19, (t, e, s) => {
            const i = ff.get(e[1]),
                n = new Al(Wn.time, Hc(e[8], 21600) - Wn.time);
            ih(
                [qc(e[2], 768), qc(e[3], 768), qc(e[4], 768)],
                Di([0, 0, 0], [0, e[5] * e[6]], Lc(e[7], ha)),
                i,
                n
            );
        })
        .set(23, (t, e, s) => {
            t.setParty(e[1], e[2]);
        })
        .set(25, (t, e, s) => {
            !1 === t.hasInfo && t.setDropInfo(e[1], e[2], e[3], e[4], e[5]);
        })
        .set(26, (t, e, s) => {
            t.setPosLock(e[1], e[2], e[3]);
        });
    const QE = (t, e, s) => {
            const i = Wn.getEntityById(e[0]);
            void 0 === i || XE.get(t)(i, e, s);
        },
        KE = t => {
            const e = Wn.getEntityById(t);
            return `${t > 0 ? (e ? e.name : "unknown") : "nobody"}`;
        },
        tC = (t, e, s) => {
            t.fx.effectDirImpact &&
                t.fx.effectDirImpact.forEach(t => {
                    const i = cc(t);
                    (i.data.creature = s),
                        e &&
                            (Si(
                                (i.data.dir = [0, 0, 0]),
                                e.transform.position,
                                s.transform.position
                            ),
                            _i(i.data.dir, i.data.dir),
                            Ei(
                                i.position,
                                s.transform.position,
                                i.data.dir,
                                s.shape.radius
                            ),
                            i.updateMatrix(),
                            i.updateMatrixWorld(!0));
                }),
                t.fx.effectTarget &&
                    t.fx.effectTarget.forEach(t => {
                        cc(t, void 0, s.transform).data.creature = s;
                    });
        },
        eC = [Nt, ce, pe, ve, ge],
        sC = [Dt, he, Bt],
        iC = [jt, Gt],
        nC = () => {
            iC.forEach(t => t.update(t => ((t.visible = !1), t))),
                At.update(
                    t => (
                        (t.membercount = 0), (t.role = 0), (vi.partyinfo = t), t
                    )
                ),
                eC.forEach(t => t.set()),
                sC.forEach(t => t.set([]));
        };
    class aC extends ZE {
        constructor(t) {
            super(t),
                (this.smoothtime = 0),
                (this.unsetLoading = !1),
                this.removePlayer(),
                (this.netTimeoutTimer = new Al()),
                (this.netArea = { l: 0, r: 0, d: 0, u: 0 }),
                (this.party = new Map()),
                (this.uiTimer = new Al(0, 1 / 30)),
                fd("close", () => {
                    console.log("on disconnect"), this.onDisconnect();
                }),
                (this.netData = []),
                fd(tr.serverEntityDelta.header, t => {
                    this.netData.push(tr.serverEntityDelta.decode(t));
                }),
                (this.personalLog = []),
                fd(tr.serverPersonalLog.header, t => {
                    (t = tr.serverPersonalLog.decode(t)).log.forEach(t =>
                        this.personalLog.push(t)
                    );
                }),
                (this.chatData = []),
                fd(tr.serverChat.header, async t => {
                    this.chatData.push(t);
                }),
                (this.systemMessageData = []),
                fd(tr.serverSystemMessage.header, async t => {
                    this.systemMessageData.push(t);
                }),
                (this.partyData = void 0),
                fd(tr.serverPartyUpdate.header, async t => {
                    this.partyData = t;
                }),
                fd(tr.serverPartyPositions.header, async t => {
                    (t = tr.serverPartyPositions.decode(t).members),
                        this.party.forEach(e => {
                            const s = t.find(t => t.entityid === e.id);
                            s && (e.wU = Gc(s.wU, 768));
                        });
                });
        }
        handlePartyData(t) {
            let e;
            this.party.forEach(t => {
                t.found = !1;
            }),
                (t = tr.serverPartyUpdate.decode(t)).members.forEach(t => {
                    if (this.party.has(t.name)) {
                        const e = this.party.get(t.name);
                        t.entityid !== this.player.id &&
                            e.store.update(
                                e => (
                                    (e.id = t.entityid),
                                    (e.name = t.name),
                                    (e.level = t.level),
                                    (e.class = t.class),
                                    (e.world = t.world),
                                    (e.faction = this.player.faction),
                                    (e.role = t.role),
                                    e
                                )
                            ),
                            (e.found = !0);
                    } else
                        this.party.set(t.name, {
                            id: t.entityid,
                            found: !0,
                            name: t.name,
                            store:
                                t.entityid == this.player.id
                                    ? jt
                                    : It({
                                          id: t.entityid,
                                          name: t.name,
                                          level: t.level,
                                          class: t.class,
                                          world: t.world,
                                          role: t.role,
                                          faction: this.player.faction,
                                          type: 0,
                                          visible: !0,
                                          alive: !0,
                                          powertype: !1,
                                          range: !1,
                                          buffs: []
                                      })
                        });
                    t.entityid == this.player.id && (e = t);
                }),
                this.party.forEach((t, e) => {
                    t.found || this.party.delete(e);
                }),
                Dt.set(
                    Array.from(this.party.values()).filter(
                        t => vi.showSelfInParty || t.id != this.player.id
                    )
                ),
                e
                    ? At.update(
                          s => (
                              (s.membercount = t.members.length),
                              (s.role = e.role),
                              (s.queues = t.queues),
                              (vi.partyinfo = s),
                              s
                          )
                      )
                    : At.update(
                          t => (
                              (t.membercount = 0),
                              (t.role = 0),
                              (t.queues = []),
                              (vi.partyinfo = t),
                              t
                          )
                      );
        }
        handleChatData(t) {
            t.forEach(t => {
                (t = tr.serverChat.decode(t)).messages.forEach(t => {
                    if ("" == t.from) {
                        const e = t.message.split(" ");
                        Wh &&
                            Wh.ui.messages[e[0]] &&
                            ((t.message = Wh.ui.messages[e[0]]),
                            e.splice(1).forEach((e, s) => {
                                t.message = t.message.replace("$" + (s + 1), e);
                            })),
                            (t.channel = "notice");
                    } else if (vi.chatbubbles) {
                        const e = this.getPlayerByName(t.from);
                        if (e) {
                            let s;
                            switch (t.channel) {
                                case "clan":
                                    s = mM.chatClan;
                                    break;
                                case "party":
                                    s = mM.chatParty;
                                    break;
                                default:
                                case "global":
                                    s = mM.chatGlobal;
                            }
                            e.speech(t.from + ": " + t.message, s);
                        }
                    }
                    "whisper" == t.channel &&
                        (t.from =
                            t.to == this.player.name
                                ? `from ${t.from}`
                                : `to ${t.to}`),
                        "GM" === t.clan &&
                            "global" === t.channel &&
                            (t.channel = "GM"),
                        ix(
                            t.channel,
                            t.message,
                            ["system", "notice"].includes(t.channel),
                            t.from,
                            t.faction,
                            t.class,
                            t.level,
                            t.subscribed
                        );
                });
            });
        }
        handleSystemMessageData(t) {
            t.forEach(t => {
                (t = tr.serverSystemMessage.decode(t)).messages.forEach(t => {
                    ix(t.type, t.message, !0);
                });
            });
        }
        handleEntityDelta(t) {
            if (this.netData.length > 0) {
                const e = this.netData.shift();
                this.setTime(e.tickId);
                const s = e.data[0],
                    i = e.ids[0];
                for (let t = 0; t < s.length; ++t) {
                    if (this.getEntityById(i[t])) continue;
                    const e = s[t];
                    for (let s = 0; s < e.length; s += 2)
                        e[s] == sp.entityType &&
                            this.createEntity(e[s + 1], i[t], { world: this });
                }
                for (let s = 0, i = e.log.length; s < i; ++s)
                    QE(e.log[s].type, e.log[s].data, t - this.time > 3);
                for (let t = 0; t < e.data.length; ++t) {
                    const s = e.data[t],
                        i = e.ids[t];
                    for (let t = 0; t < s.length; ++t) {
                        const e = this.getEntityById(i[t]),
                            n = s[t];
                        for (let t = 0; t < n.length; t += 2)
                            e && e.parseDelta(n[t], n[t + 1], this);
                    }
                }
            }
            if (this.personalLog.length > 0) {
                for (let t = 0, e = this.personalLog.length; t < e; ++t)
                    JE(this.personalLog[t].type, this.personalLog[t].data);
                this.personalLog.length = 0;
            }
        }
        tick(t) {
            if (this.netData.length > 0) {
                let t = ~~Math.max(1, this.netData.length / 2);
                const e = Hc(this.netData[this.netData.length - 1].time, 10800);
                for (; this.deserialized && t--; ) this.handleEntityDelta(e);
            }
            if (this.player) {
                if (
                    (super.tick(t),
                    (this.smoothtime += t),
                    Math.abs(this.smoothtime - this.time) > 0.1 &&
                        (this.smoothtime = this.time),
                    this.uiTimer.done(this.smoothtime) &&
                        (Se.set(this.smoothtime),
                        this.uiTimer.reset(this.smoothtime)),
                    (this.player && this.netTimeoutTimer.done(this.time)) ||
                        this.time < this.netTimeoutTimer.start)
                ) {
                    this.netTimeoutTimer.reset(this.time - 0.5, 2),
                        this.setNetAreaAABB(
                            this.netArea,
                            this.player.wU[0],
                            this.player.wU[2]
                        );
                    for (let t = this.entities.array.length - 1; t >= 0; t--) {
                        const e = this.entities.array[t];
                        e != this.player &&
                            (xf(e.wU, this.netArea)
                                ? e.netDeletion.reset(0, 0)
                                : 0 === e.netDeletion.end &&
                                  e.netDeletion.reset(
                                      this.time,
                                      2 + 2 * Math.random()
                                  ));
                    }
                }
                for (let t = this.entities.array.length - 1; t >= 0; t--) {
                    const e = this.entities.array[t];
                    e != this.player &&
                        e.netDeletion.end > 0 &&
                        e.netDeletion.done(this.time) &&
                        (this.removeEntity(e),
                        e.id == this.player.target && this.player.setTarget(0));
                }
                this.player &&
                    (this.partyData &&
                        (this.handlePartyData(this.partyData),
                        (this.partyData = void 0)),
                    this.chatData.length &&
                        (this.handleChatData(this.chatData),
                        (this.chatData.length = 0)),
                    this.systemMessageData.length &&
                        (this.handleSystemMessageData(this.systemMessageData),
                        (this.systemMessageData.length = 0)));
            }
        }
        removeEntity(t) {
            const e = super.removeEntity(t);
            return (
                e &&
                    this.party.has(e.name) &&
                    this.party
                        .get(e.name)
                        .store.update(
                            t => (
                                (t.buffs.length = 0),
                                (t.timedSkill = void 0),
                                (t.timedCast = void 0),
                                (t.alive = !0),
                                (t.range = !1),
                                (t.mp = t.hp = t.hpMax = t.mpMax = 0),
                                t
                            )
                        ),
                e
            );
        }
        load(t, e) {
            super.load(t),
                (this.deserialized = !1),
                (this.playerId = e),
                Ht.set(!0),
                (this.unsetLoading = !0),
                fetch("/worlddata/" + this.id + "/world?v=35201089", {
                    cache: "default"
                }).then(t => {
                    t.ok &&
                        t.arrayBuffer().then(t => {
                            this.deserialize({ serialized: Na(t) });
                        });
                });
        }
        parse({ deserialized: t, isUpdate: e, sendToServer: s }) {
            t && super.parse({ deserialized: t, isUpdate: e }),
                Lh({ world: this, first: !e }),
                s && (this.serialize(), this.sendToServer());
        }
        onDisconnect() {
            (this.netData.length = 0),
                (this.personalLog.length = 0),
                (this.partyData = void 0),
                this.party.clear();
        }
        destroy() {
            super.destroy(),
                Oh({ world: this }),
                this.uiTimer.reset(0),
                zM(this);
        }
        setPlayer(t) {
            (this.player = t), ae.set(!0), nC();
        }
        removePlayer(t) {
            this.player == t && ((this.player = void 0), ae.set(!1));
        }
    }
    const rC = {
        guardstone: { port: 5002 },
        headless: { port: 5003 },
        faivel: { port: 5004 },
        arena_ruins: { port: 5005 },
        arena_ruins2: { port: 5006 }
    };
    let oC = 0;
    var lC = Object.freeze({
        __proto__: null,
        init: () => {
            fd(tr.serverOnClientConnect.header, t => {
                const e = tr.serverOnClientConnect.decode(t);
                Wn.load(e.world, e.playerId),
                    (document.cookie = "party="),
                    ix(
                        "log",
                        `Entering ${
                            e.world.charAt(0).toUpperCase() + e.world.slice(1)
                        }`
                    );
            }),
                fd("close", t => {
                    switch ((Wn.destroy(), t.code)) {
                        default:
                        case 1006:
                        case 4e3:
                            Ht.set("autoReconnect");
                            break;
                        case 4001:
                            Ht.set("askReconnect");
                            break;
                        case 4002:
                            window.location.href = "/";
                    }
                });
        },
        enter: t => {
            Wn.deserialized || Ht.set(!0),
                void 0 !== od
                    ? (od.close(), (od = void 0))
                    : console.log("tried ws disconnect, but ws undefined"),
                (t => {
                    void 0 === od
                        ? (((od = new WebSocket(
                              "wss://" + t + "/play"
                          )).binaryType = "arraybuffer"),
                          (od.onerror = dd),
                          (od.onopen = ud),
                          (od.onclose = md),
                          (od.onmessage = pd),
                          console.log("connecting to game server: " + t))
                        : console.error(
                              "tried ws connect, but ws already created"
                          );
                })(t.target);
        },
        tick: t => {
            if (Wn && Wn.deserialized && Wn.player) {
                (t => {
                    PM.forEach(e => {
                        e.preTick && e.preTick(t);
                    });
                })(t),
                    Wn.tick(t),
                    (t => {
                        UM &&
                            PM.forEach(e => {
                                e.tick && e.tick(t);
                            });
                    })(t),
                    ((t, e) => {
                        const s = {
                            dt: t,
                            world: e,
                            camera: Uh,
                            cameraPivot: Ih,
                            viewRange: Dh,
                            renderer: _h,
                            viewRangeSquared: Rh
                        };
                        Bh.forEach(t => {
                            t.tick && t.tick(s);
                        });
                    })(t, Wn),
                    (zh.needsFullUpdate = !0),
                    vi.shadows &&
                        sl &&
                        (bl(Ph),
                        _h.render({
                            scene: zh,
                            camera: rl.water,
                            shadowTarget: il.water
                        }),
                        xl(),
                        yl(Ph),
                        _h.render({
                            scene: zh,
                            camera: rl.LG,
                            shadowTarget: il.shadowStatic
                        }),
                        wl(),
                        ol(!1)),
                    vi.shadows &&
                        (Ph.bindFramebuffer(
                            Ph.READ_FRAMEBUFFER,
                            il.shadowStatic.buffer
                        ),
                        Ph.bindFramebuffer(Ph.DRAW_FRAMEBUFFER, il.LG.buffer),
                        Ph.blitFramebuffer(
                            0,
                            0,
                            1024,
                            1024,
                            0,
                            0,
                            1024,
                            1024,
                            Ph.DEPTH_BUFFER_BIT,
                            Ph.NEAREST
                        ),
                        _h.render({
                            scene: zh,
                            clear: !1,
                            camera: rl.LG,
                            sceneCamera: Uh,
                            shadowTarget: il.LG
                        })),
                    vi.postProcessing
                        ? Ah.render({
                              scene: zh,
                              camera: Uh,
                              update: !vi.shadows
                          })
                        : _h.render({
                              scene: zh,
                              camera: Uh,
                              update: !vi.shadows
                          }),
                    (t => {
                        UM &&
                            PM.forEach(e => {
                                e.postTick && e.postTick(t);
                            });
                    })(t);
                const e = Zl();
                ed(e - oC), (oC = e);
            } else Wn && Wn.tick(t);
        }
    });
    const cC = {};
    let hC;
    let dC;
    window.onload = () => {
        uo(vi.kbForward, (oo.fwd = {})),
            uo(vi.kbLeft, (oo.left = {})),
            uo(vi.kbBack, (oo.back = {})),
            uo(vi.kbRight, (oo.right = {})),
            uo(vi.kbNextTarget, (oo.nextTarget = {})),
            uo(vi.kbUntarget, (oo.untarget = {})),
            uo(" ", (oo.jump = {})),
            uo(vi.kbAltForward, oo.fwd),
            uo(vi.kbAltBack, oo.back),
            uo(vi.kbTurnRight, (oo.turnright = {})),
            uo(vi.kbTurnLeft, (oo.turnleft = {})),
            uo("shift", (oo.shift = {})),
            uo("m0", (oo.lmb = {})),
            uo("m2", (oo.rmb = {})),
            uo("control", (oo.ctrl = {})),
            uo("alt", (oo.alt = {})),
            uo(vi.kbMap, (oo.map = {})),
            uo(vi.kbSkills, (oo.skills = {})).onPress(() => {
                je.update(t => !t), Jr({ id: "page", loop: !1 });
            }),
            uo(vi.kbCharacter, (oo.char = {})).onPress(() => {
                Ke.update(t => !t), Jr({ id: "page", loop: !1 });
            }),
            uo(vi.kbInventory, (oo.inventory = {})).onPress(() => {
                We.update(t => !t), Jr({ id: "inventory", loop: !1 });
            }),
            uo(vi.kbClan, (oo.clan = {})).onPress(() => {
                Je.update(t => !t), Jr({ id: "inventory", loop: !1 });
            }),
            document.addEventListener("wheel", bo, { passive: !0 }),
            document.addEventListener("keydown", ko, !1),
            document.addEventListener("keyup", $o, !1),
            document.addEventListener("contextmenu", wo, !1),
            document.addEventListener("mousedown", vo, !1),
            document.addEventListener("mouseup", yo, !1),
            document.addEventListener("mousemove", po, !1),
            Fh(),
            PM.forEach(t => {
                t.init && t.init();
            }),
            (t => {
                Wn = t;
            })(new aC({})),
            console.log("Hordes 0.28.3520 Live"),
            ((t, e) => {
                (cC[t] = e), e.init && e.init();
            })("play", lC),
            Ee.subscribe(t => {
                t && void 0 !== rC[t]
                    ? ((t, e) => {
                          cC[hC] && cC[hC].exit && cC[hC].exit(),
                              (hC = t),
                              Wt.set(t),
                              cC[hC].enter &&
                                  (console.log("Entering state: " + t),
                                  cC[hC].enter(e));
                      })("play", { target: `hordes.io:${rC[t].port}` })
                    : Ht.set("autoReconnect");
            }),
            fC();
    };
    let uC = 0,
        mC = !1;
    const pC = new Al(0, 2e4),
        fC = () => {
            const t = Zl(),
                e = (t - (dC || 1e3 / 60)) / 1e3;
            (dC = t),
                (t => {
                    hC && cC[hC].tick && cC[hC].tick(t);
                })(e),
                requestAnimationFrame(fC),
                pC.done(t) &&
                    (t > 1e5 && !mC && t - uC > 18e4
                        ? ((mC = !0), (uC = t), me.set(!0))
                        : mC && ((mC = !1), me.set(!1)),
                    tu("session", "minutetick", "sec", Math.round(t / 1e3)),
                    pC.reset(t));
        };
})();
